{"version":3,"file":"2199.oneui.min.css","mappings":"AAAA;ACEA;ACAA;ACFA;ACUA;ACAA;ACTA;ACDA;ACAA;ACAA","sources":["webpack://@textkernel/oneui/./src/components/List/List.scss","webpack://@textkernel/oneui/./src/components/List/ListItem/ListItem.scss","webpack://@textkernel/oneui/./src/components/Text/Text.scss","webpack://@textkernel/oneui/./src/components/List/ListActions/ListActions.scss","webpack://@textkernel/oneui/./src/components/Buttons/Button/Button.scss","webpack://@textkernel/oneui/./src/components/LoadingSpinner/LoadingSpinner.scss","webpack://@textkernel/oneui/./src/components/Checkbox/Checkbox.scss","webpack://@textkernel/oneui/./src/components/Teaser/Teaser.scss","webpack://@textkernel/oneui/./src/components/Link/Link.scss","webpack://@textkernel/oneui/./src/components/MatchingIndicator/MatchingIndicator.scss"],"sourcesContent":[".List {\n    margin: 0;\n    padding: 0;\n    list-style: none;\n\n    &--isDivided {\n        .List__item + .List__item {\n            border-top: 1px solid var(--color-neutral-10);\n        }\n    }\n\n    &:focus {\n        outline: none;\n    }\n}\n","$contexts: (neutral, brand, info, success, cautious, critical);\n\n.ListItem {\n    display: flex;\n    align-items: baseline;\n    padding: var(--space-150);\n    box-sizing: border-box;\n\n    &:hover:not(.ListItem--disabled) {\n        background-color: var(--color-neutral-10);\n    }\n\n    &--isHighlighted {\n        background-color: var(--color-neutral-10);\n    }\n\n    &--isSelected {\n        background-color: var(--color-highlight-background);\n    }\n\n    &--clickable {\n        cursor: pointer;\n    }\n\n    &--disabled {\n        color: var(--color-neutral-30);\n        cursor: not-allowed;\n    }\n\n    &--highlightContext {\n        @each $context in $contexts {\n            &_#{ $context }:hover:not(.ListItem--disabled) {\n                background-color: var(--color-#{$context}-50);\n                color: var(--color-background);\n            }\n\n            &_#{ $context }.ListItem--isSelected {\n                background-color: var(--color-#{$context}-50);\n                color: var(--color-background);\n            }\n\n            &_#{ $context }.ListItem--isHighlighted:not(.ListItem--disabled) {\n                background-color: var(--color-#{$context}-50);\n                color: var(--color-highlight-background);\n            }\n        }\n    }\n}\n",".Text {\n    &--size {\n        &_small {\n            composes: OneUI-caption-text from global;\n        }\n\n        &_medium {\n            composes: OneUI-label-text from global;\n        }\n    }\n\n    &--context {\n        @each $context in (success, cautious, critical, brand) {\n            &_#{ $context } {\n                color: var(--color-text-#{$context}-default);\n            }\n        }\n    }\n\n    &--context_info {\n        color: var(--color-text-info-default);\n    }\n\n    &--context_neutral {\n        color: var(--color-text-subtlest);\n    }\n\n    &--isBold {\n        font-weight: var(--font-weight-bold);\n    }\n}\n",".ListActions {\n    margin-left: auto;\n}\n","@use 'sass:map';\n$contexts: (primary, secondary, critical);\n$variants: (filled, outlined, ghost);\n\n$contextMap: (\n    'secondary': 'neutral',\n    'primary': 'brand',\n    'critical': 'critical',\n);\n\n@keyframes buttonLoading {\n    0% {\n        background-position: 100% 0;\n    }\n    100% {\n        background-position: -100% 0;\n    }\n}\n.Button {\n    font-family: inherit;\n    display: inline-flex;\n    align-items: center;\n    justify-content: center;\n    border-radius: var(--space-75);\n    border: none;\n    height: var(--space-400);\n    box-sizing: border-box;\n    cursor: pointer;\n    composes: OneUI-label-text-bold from global;\n    text-decoration: none;\n    margin: 0;\n    outline: none;\n    padding: var(--space-0) var(--space-150);\n    text-align: center;\n    transition: all var(--transition-duration);\n    white-space: nowrap;\n    flex-wrap: nowrap;\n\n    // Default variant (filled) and context (primary)\n    background-color: var(--color-background-brand-bold-default);\n    color: var(--color-background);\n\n    &:hover {\n        background-color: var(--color-background-brand-bold-hover);\n    }\n    &:active {\n        background-color: var(--color-background-critical-bold-pressed);\n    }\n    &:focus-visible {\n        box-shadow: 0px 0px 0px 2px var(--color-background-info-subtlest-pressed);\n    }\n\n    &[disabled],\n    &--isLoading {\n        cursor: not-allowed;\n        pointer-events: none;\n        background-color: var(--color-background-brand-bold-disabled);\n        color: var(--color-text-inverse);\n    }\n\n    &--isBlock {\n        width: 100%;\n    }\n\n    &--size {\n        &_small {\n            border-radius: var(--space-50);\n            height: var(--space-300);\n            padding: var(--space-0) var(--space-100);\n        }\n        &_large {\n            border-radius: var(--space-100);\n            height: var(--space-500);\n            padding: var(--space-0) var(--space-200);\n        }\n    }\n}\n\n@each $context in $contexts {\n    @each $variant in $variants {\n        $mappedContext: map.get($contextMap, $context);\n        .Button--context_#{$context}.Button--variant_#{$variant} {\n            @if $variant == filled {\n                &:hover {\n                    background-color: var(--color-background-#{$mappedContext}-subtlest-hover);\n                }\n                &:active {\n                    background-color: var(--color-background-#{$mappedContext}-subtlest-pressed);\n                }\n                @if $mappedContext == neutral {\n                    background-color: var(--color-background-neutral-subtle-default);\n                    color: var(--color-text-bold);\n\n                    &:hover {\n                        background-color: var(--color-background-neutral-subtle-hover);\n                    }\n                    &:active {\n                        background-color: var(--color-background-neutral-subtle-pressed);\n                    }\n                    &[disabled],\n                    &.Button--isLoading {\n                        background-color: var(--color-background-neutral-subtle-disabled);\n                        color: var(--color-text-subtlest);\n                        &:hover,\n                        &:active {\n                            background-color: var(--color-background-neutral-subtle-disabled);\n                        }\n                    }\n                } @else {\n                    background-color: var(--color-background-#{$mappedContext}-bold-default);\n                    color: var(--color-text-inverse);\n\n                    &:hover {\n                        background-color: var(--color-background-#{$mappedContext}-bold-hover);\n                    }\n                    &:active {\n                        background-color: var(--color-background-#{$mappedContext}-bold-pressed);\n                    }\n                    &[disabled],\n                    &.Button--isLoading {\n                        background-color: var(--color-background-#{$mappedContext}-bold-disabled);\n                        &:hover,\n                        &:active {\n                            background-color: var(\n                                --color-background-#{$mappedContext}-bold-disabled\n                            );\n                        }\n                    }\n                }\n            } @else if $variant == outlined {\n                @if $mappedContext == neutral {\n                    color: var(--color-text-subtle);\n                    background-color: transparent;\n                    border-width: var(--line-normal);\n                    border-style: solid;\n                    border-color: var(--color-border-bold);\n\n                    &[disabled],\n                    &.Button--isLoading {\n                        color: var(--color-text-subtlest);\n                        &:hover,\n                        &:active {\n                            background-color: var(--transparent);\n                        }\n                        border-color: var(--color-border-disabled);\n                    }\n                } @else {\n                    color: var(--color-text-#{$mappedContext}-default);\n                    background-color: transparent;\n                    border-width: var(--line-normal);\n                    border-style: solid;\n                    border-color: var(--color-border-#{$mappedContext}-bold-default);\n\n                    &[disabled],\n                    &.Button--isLoading {\n                        color: var(--color-text-#{$mappedContext}-disabled);\n                        &:hover,\n                        &:active {\n                            background-color: var(--transparent);\n                        }\n                        border-color: var(--color-border-#{$mappedContext}-subtle-brand);\n                    }\n                }\n            } @else if $variant == ghost {\n                @if $context == secondary {\n                    color: var(--color-text-subtle);\n                    background-color: var(--transparent);\n\n                    &:hover {\n                        background-color: var(--color-background-neutral-subtlest-hover);\n                    }\n\n                    &:active {\n                        background-color: var(--color-background-neutral-subtlest-pressed);\n                    }\n\n                    &:focus-visible {\n                        box-shadow: 0px 0px 0px 2px var(--color-background-info-subtlest-pressed);\n                    }\n\n                    &[disabled],\n                    &.Button--isLoading {\n                        color: var(--color-text-disabled);\n                        background-color: var(--transparent);\n                        &:hover,\n                        &:active {\n                            background-color: var(--transparent);\n                        }\n                    }\n                } @else {\n                    color: var(--color-text-#{$mappedContext}-default);\n                    background-color: var(--transparent);\n                    &:hover {\n                        background-color: var(--color-background-#{$mappedContext}-subtlest-hover);\n                    }\n                    &:active {\n                        background-color: var(\n                            --color-background-#{$mappedContext}-subtlest-pressed\n                        );\n                    }\n                    &[disabled],\n                    &.Button--isLoading {\n                        color: var(--color-text-#{$mappedContext}-disabled);\n                        &:hover,\n                        &:active {\n                            background-color: var(--transparent);\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n","@use \"sass:map\";\n$contexts: (primary, secondary, critical, inverted);\n\n$contextMap: (\n    'secondary': 'neutral',\n    'primary': 'brand',\n    'critical': 'critical',\n    'inverted': 'inverted'\n);\n\n@keyframes rotate {\n    100% {\n        transform: rotate(360deg);\n    }\n}\n\n@keyframes dash {\n    0% {\n        stroke-dasharray: 1, 150;\n        stroke-dashoffset: 0;\n    }\n    50% {\n        stroke-dasharray: 90, 150;\n        stroke-dashoffset: -35;\n    }\n    100% {\n        stroke-dasharray: 90, 150;\n        stroke-dashoffset: -124;\n    }\n}\n\n@mixin center() {\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n}\n\n.LoadingSpinner {\n    display: inline-flex;\n    flex-direction: column;\n    align-items: center;\n\n    &__svg {\n        animation: rotate 2s linear infinite;\n        width: 48px;\n        height: 48px;\n        display: block;\n    }\n\n    &__path {\n        stroke: var(--color-primary-50);\n        stroke-dasharray: 1, 150;\n        stroke-dashoffset: 0;\n        stroke-linecap: round;\n        animation: dash 1.5s ease-in-out infinite;\n        transition: stroke var(--transition-duration);\n        @each $context in $contexts {\n            &--context_#{ $context } {\n                $mappedContext: map.get($contextMap, $context);\n                @if ($mappedContext == 'inverted') {\n                    stroke: var(--color-icon-inverse);\n                } @else if ($mappedContext == 'neutral') {\n                    stroke: var(--color-icon-disabled);\n                } @else {\n                    stroke: var(--color-icon-#{$mappedContext}-disabled);\n                }\n            }  \n        }\n    }\n\n    &__label {\n        display: block;\n        margin-top: var(--space-100);\n    }\n\n    &--centerIn {\n        &_parent {\n            position: absolute;\n            @include center();\n        }\n        &_viewport {\n            position: fixed;\n            @include center();\n        }\n    }\n\n    &--hidden {\n        display: none;\n    }\n}\n",".Checkbox {\n    &__box {\n        background-color: var(--color-background-selected-subtlest-default, #E6F2FF);\n        border: var(--border-width-thick) solid var(--color-border-input, #808080);\n        border-radius: var(--border-width-thick);\n        box-sizing: border-box;\n        display: inline-block;\n        position: relative;\n        top: -1px;\n        width: var(--font-size-normal);\n        height: var(--font-size-normal);\n        transition: all var(--transition-duration) ease;\n        vertical-align: middle;\n        margin-right: var(--space-75);\n\n        &--useLargeGap {\n            margin-right: var(--space-125, 10px);\n        }\n\n        & svg {\n            display: none;\n        }\n\n        &--asFlexbox {\n            flex-shrink: 0;\n        }\n    }\n\n    &__label {\n        cursor: pointer;\n\n        &--asFlexbox {\n            display: flex;\n            align-items: center;\n        }\n\n        &:hover {\n            .Checkbox__box {\n                background: var(--color-background-selected-subtlest-hover, #CCE4FF);\n            }\n        }\n\n        &:active {\n            .Checkbox__box {\n                background: var(--color-background-selected-subtlest-pressed, #99CAFF);\n            }\n        }\n    }\n\n    &__svg {\n        position: absolute;\n        top: var(--border-width-thick);\n        left: 0;\n        fill: none;\n        fill-rule:evenodd;\n        clip-rule:evenodd;\n        stroke: var(--color-icon-inverse);\n        stroke-width: 2;\n        stroke-linecap: round;\n        stroke-linejoin: round;\n    }\n\n    &--disabled {\n        .Checkbox__label {\n            .Checkbox__box {\n                background: var(--color-background-selected-subtlest-disabled, #E6F2FF);\n                border-color: var(--color-border-disabled, #CCC); \n\n                &:focus {\n                    box-shadow: none;\n                }\n            }\n        }\n    }\n\n    &__input {\n        margin: 0;\n        width: 0;\n        height: 0;\n        border: none;\n        appearance: none;\n\n        &:focus-visible {\n            + .Checkbox__label {\n                .Checkbox__box {\n                    box-shadow: 0px 0px 0px 2px var(--color-info-20, #99CAFF);\n                }\n            }\n        }\n\n        &:checked {\n            + .Checkbox__label {\n                .Checkbox__box {\n                    background: var(--color-background-selected-bold-default, #007AFF);\n                    border-color: var(--color-background-selected-bold-default, #007AFF);\n\n                    & svg {\n                        display: block;\n                    }\n                }\n                    \n                &:hover {\n                    .Checkbox__box {\n                        background: var(--color-background-selected-bold-hover, #0062CC);\n                        border-color: var(--color-background-selected-bold-hover, #0062CC);\n                    }\n                }\n                    \n                &:active {\n                    .Checkbox__box {\n                        background: var(--color-background-selected-bold-pressed, #004999);\n                        border-color: var(--color-background-selected-bold-pressed, #0062CC);\n                    }\n                }\n            }\n        }\n    }\n\n    &__text {\n        padding: var(--space-50) 0;\n    }\n\n    /* stylelint-disable no-duplicate-selectors */\n    &--disabled {\n        /* stylelint-disable no-descending-specificity */\n        .Checkbox__input {\n            + .Checkbox__label {\n                cursor: not-allowed;\n            }\n\n            &:checked {\n                + .Checkbox__label {\n                    .Checkbox__box {\n                        background: var(--color-background-selected-bold-disabled, #99CAFF);\n                        border-color: var(--color-background-selected-bold-disabled, #99CAFF);\n                    }\n                }\n            }\n        }\n        /* stylelint-enable no-duplicate-selectors, no-descending-specificity */\n\n        .Checkbox__text {\n            color: var(--color-text-disabled);\n        }\n    }\n}\n",".Teaser {\n    width: 100%;\n    display: flex;\n    gap: var(--space-150);\n    color: var(--color-neutral-60);\n\n    &:active {\n        background-color: var(--color-background-info-subtlest-default);\n    }\n\n    &__row {\n        display: flex;\n        align-items: center;\n    }\n\n    &__column {\n        flex-grow: 1;\n        display: flex;\n        flex-direction: column;\n    }\n\n    &__checkbox {\n        align-self: flex-start;\n    }\n\n    &__title {\n        composes: OneUI-body-text-bold from global;\n        color: var(--color-link-default);\n        overflow: hidden;\n\n        &--disabled {\n            color: var(--color-text-subtlest);\n        }\n    }\n\n    &__titleRow {\n        justify-content: space-between;\n        gap: var(--space-100);\n    }\n\n    &__titleRow > .Teaser__row:nth-child(2) {\n        flex-shrink: 0;\n    }\n\n    &__subtitle {\n        composes: OneUI-label-text from global;\n        color: var(--color-text-bold);\n        margin-bottom: var(--space-100);\n    }\n\n    &__info {\n        composes: OneUI-label-text from global;\n        color: var(--color-text-subtle);\n    }\n\n    &__link {\n        composes: OneUI-label-text from global;\n        text-decoration: none;\n    }\n\n    &__caption {\n        composes: OneUI-caption-text from global;\n        color: var(--color-text-subtle);\n    }\n\n    &__matchingIndicator {\n        margin-left: var(--space-100);\n    }\n\n    &__visibility {\n        min-height: var(--space-150);\n        min-width: var(--space-150);\n        border-radius: 50%;\n        border: 1px solid var(--color-border-subtle);\n        margin-left: var(--space-100);\n\n        &--isVisited {\n            background-color: var(--color-icon-info-default);\n            border: 1px solid var(--color-border-info-bold-default);\n        }\n    }\n\n    &__sourceContainer {\n        margin-top: var(--space-100);\n        gap: var(--space-50);\n    }\n\n    &__sourceIcon {\n        width: var(--space-200);\n        height: var(--space-200);\n    }\n\n    &__bottom {\n        margin-top: var(--space-100);\n    }\n\n    &__lineClamp {\n        display: -webkit-box;\n        line-clamp: 1;\n        -webkit-box-orient: vertical;\n        -webkit-line-clamp: 1;\n        overflow-y: hidden;\n    }\n}\n",".Link {\n    color: var(--color-link-default);\n    text-decoration: underline;\n\n    &:focus-visible {\n        outline: 2px solid var(--color-border-info-subtle-default, #66afff);\n    }\n\n    &:hover {\n        color: var(--color-link-pressed, #004999);\n    }\n\n    &:visited {\n        color: var(--color-link-visited-default, #003166);\n\n        &:hover {\n            color: var(--color-link-visited-pressed, #001833);\n        }\n    }\n\n    &__icon {\n        fill: currentColor;\n        vertical-align: bottom;\n        padding-right: var(--space-25);\n    }\n}\n",".MatchingIndicator {\n    display: flex;\n    width: var(--space-300);\n    height: var(--space-300);\n    transform: rotate(-90deg);\n}\n"],"names":[],"sourceRoot":""}