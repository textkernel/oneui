"use strict";(self.webpackChunk_textkernel_oneui=self.webpackChunk_textkernel_oneui||[]).push([[9507],{"./stories/atoms/Dropdown.stories.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{_DropdownWithMultiSingleSelectItem:function(){return _DropdownWithMultiSingleSelectItem},_DropdownWithSelectedItemBadge:function(){return _DropdownWithSelectedItemBadge},_DropdownWithSingleSelectItem:function(){return _DropdownWithSingleSelectItem},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return Dropdown_stories}});var react=__webpack_require__("./node_modules/react/index.js"),DropdownContent=__webpack_require__("./src/components/Dropdown/DropdownContent/DropdownContent.tsx"),dist=__webpack_require__("./node_modules/@radix-ui/react-dropdown-menu/dist/index.mjs"),DropdownTrigger=__webpack_require__("./src/components/Dropdown/DropdownTrigger/DropdownTrigger.tsx"),Button=__webpack_require__("./src/components/Buttons/Button/Button.tsx"),SingleSelectItem=__webpack_require__("./src/components/Dropdown/Items/SingleSelectItem/SingleSelectItem.tsx"),Separator=__webpack_require__("./src/components/Dropdown/Separator/Separator.tsx"),MultiSelectItem=__webpack_require__("./src/components/Dropdown/Items/MultiSelectItem/MultiSelectItem.tsx"),index_esm=__webpack_require__("./node_modules/react-icons/md/index.esm.js"),bem=__webpack_require__("./src/utils/bem/bem.js"),Item=__webpack_require__("./src/components/Dropdown/Items/Item.scss"),__assign=function(){return __assign=Object.assign||function(t){for(var s,i=1,n=arguments.length;i<n;i++)for(var p in s=arguments[i])Object.prototype.hasOwnProperty.call(s,p)&&(t[p]=s[p]);return t},__assign.apply(this,arguments)},__rest=function(s,e){var t={};for(var p in s)Object.prototype.hasOwnProperty.call(s,p)&&e.indexOf(p)<0&&(t[p]=s[p]);if(null!=s&&"function"==typeof Object.getOwnPropertySymbols){var i=0;for(p=Object.getOwnPropertySymbols(s);i<p.length;i++)e.indexOf(p[i])<0&&Object.prototype.propertyIsEnumerable.call(s,p[i])&&(t[p[i]]=s[p[i]])}return t},block=(0,bem.T)("DropdownItem",Item.A).block,DropdownSubTrigger=function DropdownSubTrigger(_a){var children=_a.children,rest=__rest(_a,["children"]);return react.createElement(dist.nV,__assign({},rest,block(__assign(__assign({},rest),{withChevron:!0}))),children,react.createElement(index_esm.xVu,{size:20,role:"img"}))};try{DropdownSubTrigger.displayName="DropdownSubTrigger",DropdownSubTrigger.__docgenInfo={description:"",displayName:"DropdownSubTrigger",props:{children:{defaultValue:null,description:"String that will be displayed as text in the SubTrigger component",name:"children",required:!0,type:{name:"string"}},asChild:{defaultValue:null,description:"",name:"asChild",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Dropdown/DropdownSubTrigger/DropdownSubTrigger.tsx#DropdownSubTrigger"]={docgenInfo:DropdownSubTrigger.__docgenInfo,name:"DropdownSubTrigger",path:"src/components/Dropdown/DropdownSubTrigger/DropdownSubTrigger.tsx#DropdownSubTrigger"})}catch(__react_docgen_typescript_loader_error){}var Dropdown=__webpack_require__("./src/components/Dropdown/Dropdown.scss"),DropdownSubContent_assign=function(){return DropdownSubContent_assign=Object.assign||function(t){for(var s,i=1,n=arguments.length;i<n;i++)for(var p in s=arguments[i])Object.prototype.hasOwnProperty.call(s,p)&&(t[p]=s[p]);return t},DropdownSubContent_assign.apply(this,arguments)},DropdownSubContent_rest=function(s,e){var t={};for(var p in s)Object.prototype.hasOwnProperty.call(s,p)&&e.indexOf(p)<0&&(t[p]=s[p]);if(null!=s&&"function"==typeof Object.getOwnPropertySymbols){var i=0;for(p=Object.getOwnPropertySymbols(s);i<p.length;i++)e.indexOf(p[i])<0&&Object.prototype.propertyIsEnumerable.call(s,p[i])&&(t[p[i]]=s[p[i]])}return t},DropdownSubContent_block=(0,bem.T)("DropdownSubContent",Dropdown.A).block,DropdownSubContent=react.forwardRef((function(_a,ref){var refElement=_a.refElement,rest=DropdownSubContent_rest(_a,["refElement"]),_b=react.useState(),width=_b[0],setWidth=_b[1];return(0,react.useEffect)((function(){var _a;(null===(_a=null==refElement?void 0:refElement.current)||void 0===_a?void 0:_a.offsetWidth)&&setWidth(refElement.current.offsetWidth)}),[refElement,width]),react.createElement(dist.G5,DropdownSubContent_assign({ref:ref},rest,DropdownSubContent_block(rest),{sideOffset:6,style:{minWidth:width}}))}));try{DropdownSubContent.displayName="DropdownSubContent",DropdownSubContent.__docgenInfo={description:"",displayName:"DropdownSubContent",props:{refElement:{defaultValue:null,description:"Ref element used to make the width of the Subcontent equal to the parent width",name:"refElement",required:!1,type:{name:"RefObject<HTMLElement | null>"}},asChild:{defaultValue:null,description:"",name:"asChild",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Dropdown/DropdownSubContent/DropdownSubContent.tsx#DropdownSubContent"]={docgenInfo:DropdownSubContent.__docgenInfo,name:"DropdownSubContent",path:"src/components/Dropdown/DropdownSubContent/DropdownSubContent.tsx#DropdownSubContent"})}catch(__react_docgen_typescript_loader_error){}var SelectedItemBadge=__webpack_require__("./src/components/SelectedItemBadge/SelectedItemBadge.tsx"),Dropdown_stories_assign=function(){return Dropdown_stories_assign=Object.assign||function(t){for(var s,i=1,n=arguments.length;i<n;i++)for(var p in s=arguments[i])Object.prototype.hasOwnProperty.call(s,p)&&(t[p]=s[p]);return t},Dropdown_stories_assign.apply(this,arguments)},__spreadArray=function(to,from,pack){if(pack||2===arguments.length)for(var ar,i=0,l=from.length;i<l;i++)!ar&&i in from||(ar||(ar=Array.prototype.slice.call(from,0,i)),ar[i]=from[i]);return to.concat(ar||Array.prototype.slice.call(from))},Dropdown_stories={title:"Atoms/Dropdown",component:DropdownContent.p},_DropdownWithSingleSelectItem={name:"Dropdown - Single Select Item",args:{},render:function render(args){var _a=react.useState(),selectedValue=_a[0],setSelectedValue=_a[1],handleOnChange=function handleOnChange(value){console.log("handleOnChange was called with the following value:",value),setSelectedValue(value)};return react.createElement(dist.bL,null,react.createElement(DropdownTrigger.u,null,react.createElement(Button.$,null,"Apply tags")),react.createElement(dist.ZL,null,react.createElement(DropdownContent.p,Dropdown_stories_assign({},args),["Item 1","Item 2","Some other item","Option you like"].map((function(value){return react.createElement(SingleSelectItem._,{key:value,isSelected:selectedValue===value,onSelect:function onSelect(){return handleOnChange(value)}},value)})),react.createElement(Separator.w,null,"Section Title"),["Item 3","Item 4"].map((function(value){return react.createElement(SingleSelectItem._,{key:value,isSelected:selectedValue===value,onSelect:function onSelect(){return handleOnChange(value)}},value)})))))}},_DropdownWithMultiSingleSelectItem={name:"Dropdown - Multi Select Item",args:{},render:function render(args){var ref=react.useRef(null),generalValues=["Tag 1","Tag 2","Tag 3"],group1=["Option 1","Option 2"],group2=["Item 1","Item 2","Item 3","Item 4"],_a=react.useState([]),selectedValues=_a[0],setSelectedValues=_a[1],isAllSelected=function isAllSelected(){return selectedValues.length===generalValues.length+group1.length+group2.length},isGroup1Selected=function isGroup1Selected(){return group1.every((function(value){return selectedValues.includes(value)}))};function uniqueArray(arr){var a=[];return arr.forEach((function(_,i){-1===a.indexOf(arr[i])&&""!==arr[i]&&a.push(arr[i])})),a}var handleOnChange=function handleOnChange(value){switch(console.log("handleOnChange was called with the following value:",value),value){case"all":isAllSelected()?setSelectedValues([]):setSelectedValues(__spreadArray(__spreadArray(__spreadArray([],generalValues,!0),group1,!0),group2,!0));break;case"group1":if(isGroup1Selected()){var newSelected_1=__spreadArray([],selectedValues,!0);group1.forEach((function(item){newSelected_1=newSelected_1.filter((function(v){return v!==item}))})),setSelectedValues(newSelected_1)}else setSelectedValues(uniqueArray(__spreadArray(__spreadArray([],selectedValues,!0),group1,!0)));break;case"group2":if(function isGroup2Selected(){return group2.every((function(value){return selectedValues.includes(value)}))}()){var newSelected_2=__spreadArray([],selectedValues,!0);group2.forEach((function(item){newSelected_2=newSelected_2.filter((function(v){return v!==item}))})),setSelectedValues(newSelected_2)}else setSelectedValues(uniqueArray(__spreadArray(__spreadArray([],selectedValues,!0),group2,!0)));break;default:selectedValues.includes(value)?setSelectedValues(selectedValues.filter((function(v){return v!==value}))):setSelectedValues(__spreadArray(__spreadArray([],selectedValues,!0),[value],!1))}};return react.createElement(dist.bL,null,react.createElement(DropdownTrigger.u,null,react.createElement("div",{ref:ref,style:{width:200}},react.createElement(Button.$,null,"Apply tags"))),react.createElement(dist.ZL,null,react.createElement(DropdownContent.p,Dropdown_stories_assign({},args,{refElement:ref}),react.createElement(MultiSelectItem.d,{onCheckedChange:function onCheckedChange(){return handleOnChange("all")},key:"all",isSelected:isAllSelected(),variant:"select-all"},"Select all"),generalValues.map((function(value){return react.createElement(MultiSelectItem.d,{key:value,isSelected:selectedValues.includes(value),onCheckedChange:function onCheckedChange(){return handleOnChange(value)}},value)})),react.createElement(MultiSelectItem.d,{key:"group1",isSelected:isGroup1Selected(),variant:"group-title",onCheckedChange:function onCheckedChange(){return handleOnChange("group1")}},"Options"),group1.map((function(value){return react.createElement(MultiSelectItem.d,{key:value,isSelected:selectedValues.includes(value),onCheckedChange:function onCheckedChange(){return handleOnChange(value)}},value)})),react.createElement(dist.Pb,null,react.createElement(DropdownSubTrigger,null,"More items"),react.createElement(dist.ZL,null,react.createElement(DropdownSubContent,{refElement:ref},group2.map((function(value){return react.createElement(MultiSelectItem.d,{key:value,isSelected:selectedValues.includes(value),onCheckedChange:function onCheckedChange(){return handleOnChange(value)}},value)}))))))))}},_DropdownWithSelectedItemBadge={name:"Dropdown - SelectedItemBadge",args:{},render:function render(args){var priorityList=[{priority:"mandatory",label:"Mandatory",value:"required"},{priority:"important",label:"Important",value:"strongly_favored"},{priority:"optional",label:"Optional",value:"favored"},{priority:"exclude",label:"Exclude",value:"banned"}],priority={list:priorityList,buttonLabel:"Priority",onChange:function onChange(){},selectedItem:{priority:"mandatory",label:"Mandatory",value:"required"}},ref=react.useRef(null),_a=react.useState({priority:"mandatory",label:"Mandatory",value:"required"}),selectedPriorityItem=_a[0],setSelectedPriorityItem=_a[1];react.useEffect((function(){setSelectedPriorityItem(selectedPriorityItem)}),[selectedPriorityItem]);var generalValues=["Tag 1","Tag 2","Tag 3"],group1=["Option 1","Option 2"],group2=["Item 1","Item 2","Item 3","Item 4"],_b=react.useState([]),selectedValues=_b[0],setSelectedValues=_b[1],isAllSelected=function isAllSelected(){return selectedValues.length===generalValues.length+group1.length+group2.length};function uniqueArray(arr){var a=[];return arr.forEach((function(_,i){-1===a.indexOf(arr[i])&&""!==arr[i]&&a.push(arr[i])})),a}var handleOnChange=function handleOnChange(value){switch(console.log("handleOnChange was called with the following value:",value),value){case"all":isAllSelected()?setSelectedValues([]):setSelectedValues(__spreadArray(__spreadArray(__spreadArray([],generalValues,!0),group1,!0),group2,!0));break;case"group1":if(function isGroup1Selected(){return group1.every((function(value){return selectedValues.includes(value)}))}()){var newSelected_3=__spreadArray([],selectedValues,!0);group1.forEach((function(item){newSelected_3=newSelected_3.filter((function(v){return v!==item}))})),setSelectedValues(newSelected_3)}else setSelectedValues(uniqueArray(__spreadArray(__spreadArray([],selectedValues,!0),group1,!0)));break;case"group2":if(function isGroup2Selected(){return group2.every((function(value){return selectedValues.includes(value)}))}()){var newSelected_4=__spreadArray([],selectedValues,!0);group2.forEach((function(item){newSelected_4=newSelected_4.filter((function(v){return v!==item}))})),setSelectedValues(newSelected_4)}else setSelectedValues(uniqueArray(__spreadArray(__spreadArray([],selectedValues,!0),group2,!0)));break;default:selectedValues.includes(value)?setSelectedValues(selectedValues.filter((function(v){return v!==value}))):setSelectedValues(__spreadArray(__spreadArray([],selectedValues,!0),[value],!1))}};return react.createElement(dist.bL,null,react.createElement(DropdownTrigger.u,null,react.createElement(Button.$,{ref:ref},"Select the priority/options")),react.createElement(dist.ZL,null,react.createElement(DropdownContent.p,Dropdown_stories_assign({},args,{refElement:ref}),react.createElement("div",{style:{padding:"8px"}},react.createElement(SelectedItemBadge.I,{priority:priority&&Dropdown_stories_assign(Dropdown_stories_assign({},priority),{list:priorityList,selectedItem:selectedPriorityItem,onChange:function handlePriorityChange(newPriorityItem){setSelectedPriorityItem(newPriorityItem),console.log("Priority changed to ".concat(newPriorityItem.priority))}}),label:"Group",onDelete:function handleDelete(){console.log("SelectedItemBadge deleted"),setSelectedValues([])},additionalLabel:selectedValues.length>0&&"+".concat(selectedValues.length)},react.createElement(MultiSelectItem.d,{onCheckedChange:function onCheckedChange(){return handleOnChange("all")},key:"all",isSelected:isAllSelected(),variant:"select-all"},"Select all"),group1.map((function(i){return react.createElement(MultiSelectItem.d,{id:i,key:i,onCheckedChange:function onCheckedChange(){return handleOnChange(i)},isSelected:selectedValues.includes(i)},i)})),react.createElement(dist.Pb,null,react.createElement(DropdownSubTrigger,null,"More items"),react.createElement(dist.ZL,null,react.createElement(DropdownSubContent,{refElement:ref},group2.map((function(value){return react.createElement(MultiSelectItem.d,{key:value,isSelected:selectedValues.includes(value),onCheckedChange:function onCheckedChange(){return handleOnChange(value)}},value)}))))))),react.createElement(dist.Pb,null,react.createElement(DropdownSubTrigger,null,"More items"),react.createElement(dist.ZL,null,react.createElement(DropdownSubContent,{refElement:ref},group2.map((function(value){return react.createElement(MultiSelectItem.d,{key:value,isSelected:selectedValues.includes(value),onCheckedChange:function onCheckedChange(){return handleOnChange(value)}},value)}))))))))}};_DropdownWithSingleSelectItem.parameters={..._DropdownWithSingleSelectItem.parameters,docs:{..._DropdownWithSingleSelectItem.parameters?.docs,source:{originalSource:"{\n  name: 'Dropdown - Single Select Item',\n  args: {},\n  render: args => {\n    const [selectedValue, setSelectedValue] = React.useState<string>();\n    const items = ['Item 1', 'Item 2', 'Some other item', 'Option you like'];\n    const items2 = ['Item 3', 'Item 4'];\n    const handleOnChange = (value: string) => {\n      console.log('handleOnChange was called with the following value:', value);\n      setSelectedValue(value);\n    };\n    return <DropdownRoot>\n                <DropdownTrigger>\n                    <Button>Apply tags</Button>\n                </DropdownTrigger>\n                <DropdownPortal>\n                    <DropdownContent {...args}>\n                        {items.map(value => <SingleSelectItem key={value} isSelected={selectedValue === value} onSelect={() => handleOnChange(value)}>\n                                {value}\n                            </SingleSelectItem>)}\n                        <Separator>Section Title</Separator>\n                        {items2.map(value => <SingleSelectItem key={value} isSelected={selectedValue === value} onSelect={() => handleOnChange(value)}>\n                                {value}\n                            </SingleSelectItem>)}\n                    </DropdownContent>\n                </DropdownPortal>\n            </DropdownRoot>;\n  }\n}",..._DropdownWithSingleSelectItem.parameters?.docs?.source}}},_DropdownWithMultiSingleSelectItem.parameters={..._DropdownWithMultiSingleSelectItem.parameters,docs:{..._DropdownWithMultiSingleSelectItem.parameters?.docs,source:{originalSource:"{\n  name: 'Dropdown - Multi Select Item',\n  args: {},\n  render: args => {\n    const ref = React.useRef(null);\n    const generalValues = ['Tag 1', 'Tag 2', 'Tag 3'];\n    const group1 = ['Option 1', 'Option 2'];\n    const group2 = ['Item 1', 'Item 2', 'Item 3', 'Item 4'];\n    const [selectedValues, setSelectedValues] = React.useState<string[]>([]);\n    const isAllSelected = () => selectedValues.length === generalValues.length + group1.length + group2.length;\n    const isGroup1Selected = () => group1.every(value => selectedValues.includes(value));\n    const isGroup2Selected = () => group2.every(value => selectedValues.includes(value));\n\n    // helper function because TS settings doesn't allow for [...new Set(items)]\n    function uniqueArray(arr: string[]) {\n      const a: string[] = [];\n      arr.forEach((_, i) => {\n        if (a.indexOf(arr[i]) === -1 && arr[i] !== '') {\n          a.push(arr[i]);\n        }\n      });\n      return a;\n    }\n    const handleOnChange = value => {\n      console.log('handleOnChange was called with the following value:', value);\n      switch (value) {\n        case 'all':\n          if (isAllSelected()) {\n            setSelectedValues([]);\n          } else {\n            setSelectedValues([...generalValues, ...group1, ...group2]);\n          }\n          break;\n        case 'group1':\n          if (isGroup1Selected()) {\n            let newSelected = [...selectedValues];\n            group1.forEach(item => {\n              newSelected = newSelected.filter(v => v !== item);\n            });\n            setSelectedValues(newSelected);\n          } else {\n            setSelectedValues(uniqueArray([...selectedValues, ...group1]));\n          }\n          break;\n        case 'group2':\n          if (isGroup2Selected()) {\n            let newSelected = [...selectedValues];\n            group2.forEach(item => {\n              newSelected = newSelected.filter(v => v !== item);\n            });\n            setSelectedValues(newSelected);\n          } else {\n            setSelectedValues(uniqueArray([...selectedValues, ...group2]));\n          }\n          break;\n        default:\n          if (selectedValues.includes(value)) {\n            setSelectedValues(selectedValues.filter(v => v !== value));\n          } else {\n            setSelectedValues([...selectedValues, value]);\n          }\n      }\n    };\n    return <DropdownRoot>\n                <DropdownTrigger>\n                    <div ref={ref} style={{\n          width: 200\n        }}>\n                        <Button>Apply tags</Button>\n                    </div>\n                </DropdownTrigger>\n                <DropdownPortal>\n                    <DropdownContent {...args} refElement={ref}>\n                        <MultiSelectItem onCheckedChange={() => handleOnChange('all')} key=\"all\" isSelected={isAllSelected()} variant=\"select-all\">\n                            Select all\n                        </MultiSelectItem>\n                        {generalValues.map(value => <MultiSelectItem key={value} isSelected={selectedValues.includes(value)} onCheckedChange={() => handleOnChange(value)}>\n                                {value}\n                            </MultiSelectItem>)}\n                        <MultiSelectItem key=\"group1\" isSelected={isGroup1Selected()} variant=\"group-title\" onCheckedChange={() => handleOnChange('group1')}>\n                            Options\n                        </MultiSelectItem>\n                        {group1.map(value => <MultiSelectItem key={value} isSelected={selectedValues.includes(value)} onCheckedChange={() => handleOnChange(value)}>\n                                {value}\n                            </MultiSelectItem>)}\n                        <DropdownSub>\n                            <DropdownSubTrigger>More items</DropdownSubTrigger>\n                            <DropdownPortal>\n                                <DropdownSubContent refElement={ref}>\n                                    {group2.map(value => <MultiSelectItem key={value} isSelected={selectedValues.includes(value)} onCheckedChange={() => handleOnChange(value)}>\n                                            {value}\n                                        </MultiSelectItem>)}\n                                </DropdownSubContent>\n                            </DropdownPortal>\n                        </DropdownSub>\n                    </DropdownContent>\n                </DropdownPortal>\n            </DropdownRoot>;\n  }\n}",..._DropdownWithMultiSingleSelectItem.parameters?.docs?.source}}},_DropdownWithSelectedItemBadge.parameters={..._DropdownWithSelectedItemBadge.parameters,docs:{..._DropdownWithSelectedItemBadge.parameters?.docs,source:{originalSource:"{\n  name: 'Dropdown - SelectedItemBadge',\n  args: {},\n  render: args => {\n    const priorityList: Array<PriorityItemType<string>> = [{\n      priority: 'mandatory',\n      label: 'Mandatory',\n      value: 'required'\n    }, {\n      priority: 'important',\n      label: 'Important',\n      value: 'strongly_favored'\n    }, {\n      priority: 'optional',\n      label: 'Optional',\n      value: 'favored'\n    }, {\n      priority: 'exclude',\n      label: 'Exclude',\n      value: 'banned'\n    }];\n    const priority = {\n      list: priorityList,\n      buttonLabel: 'Priority',\n      onChange: () => {},\n      selectedItem: {\n        priority: 'mandatory',\n        label: 'Mandatory',\n        value: 'required'\n      }\n    };\n    const ref = React.useRef(null);\n    const [selectedPriorityItem, setSelectedPriorityItem] = React.useState<PriorityItemType<string>>({\n      priority: 'mandatory',\n      label: 'Mandatory',\n      value: 'required'\n    });\n    React.useEffect(() => {\n      setSelectedPriorityItem(selectedPriorityItem);\n    }, [selectedPriorityItem]);\n    const generalValues = ['Tag 1', 'Tag 2', 'Tag 3'];\n    const group1 = ['Option 1', 'Option 2'];\n    const group2 = ['Item 1', 'Item 2', 'Item 3', 'Item 4'];\n    const [selectedValues, setSelectedValues] = React.useState<string[]>([]);\n    const isAllSelected = () => selectedValues.length === generalValues.length + group1.length + group2.length;\n    const isGroup1Selected = () => group1.every(value => selectedValues.includes(value));\n    const isGroup2Selected = () => group2.every(value => selectedValues.includes(value));\n\n    // helper function because TS settings doesn't allow for [...new Set(items)]\n    function uniqueArray(arr: string[]) {\n      const a: string[] = [];\n      arr.forEach((_, i) => {\n        if (a.indexOf(arr[i]) === -1 && arr[i] !== '') {\n          a.push(arr[i]);\n        }\n      });\n      return a;\n    }\n    const handleOnChange = value => {\n      console.log('handleOnChange was called with the following value:', value);\n      switch (value) {\n        case 'all':\n          if (isAllSelected()) {\n            setSelectedValues([]);\n          } else {\n            setSelectedValues([...generalValues, ...group1, ...group2]);\n          }\n          break;\n        case 'group1':\n          if (isGroup1Selected()) {\n            let newSelected = [...selectedValues];\n            group1.forEach(item => {\n              newSelected = newSelected.filter(v => v !== item);\n            });\n            setSelectedValues(newSelected);\n          } else {\n            setSelectedValues(uniqueArray([...selectedValues, ...group1]));\n          }\n          break;\n        case 'group2':\n          if (isGroup2Selected()) {\n            let newSelected = [...selectedValues];\n            group2.forEach(item => {\n              newSelected = newSelected.filter(v => v !== item);\n            });\n            setSelectedValues(newSelected);\n          } else {\n            setSelectedValues(uniqueArray([...selectedValues, ...group2]));\n          }\n          break;\n        default:\n          if (selectedValues.includes(value)) {\n            setSelectedValues(selectedValues.filter(v => v !== value));\n          } else {\n            setSelectedValues([...selectedValues, value]);\n          }\n      }\n    };\n    const handlePriorityChange = (newPriorityItem: PriorityItemType<string>) => {\n      setSelectedPriorityItem(newPriorityItem);\n      console.log(`Priority changed to ${newPriorityItem.priority}`);\n    };\n    const handleDelete = () => {\n      console.log('SelectedItemBadge deleted');\n      setSelectedValues([]);\n    };\n    return <DropdownRoot>\n                <DropdownTrigger>\n                    <Button ref={ref}>Select the priority/options</Button>\n                </DropdownTrigger>\n                <DropdownPortal>\n                    <DropdownContent {...args} refElement={ref}>\n                        <div style={{\n            padding: '8px'\n          }}>\n                            <SelectedItemBadge<string, string> priority={priority && {\n              ...priority,\n              list: priorityList,\n              selectedItem: selectedPriorityItem,\n              onChange: handlePriorityChange\n            }} label=\"Group\" onDelete={handleDelete} additionalLabel={selectedValues.length > 0 && `+${selectedValues.length}`}>\n                                <MultiSelectItem onCheckedChange={() => handleOnChange('all')} key=\"all\" isSelected={isAllSelected()} variant=\"select-all\">\n                                    Select all\n                                </MultiSelectItem>\n                                {group1.map(i => <MultiSelectItem id={i} key={i} onCheckedChange={() => handleOnChange(i)} isSelected={selectedValues.includes(i)}>\n                                        {i}\n                                    </MultiSelectItem>)}\n                                <DropdownSub>\n                                    <DropdownSubTrigger>More items</DropdownSubTrigger>\n                                    <DropdownPortal>\n                                        <DropdownSubContent refElement={ref}>\n                                            {group2.map(value => <MultiSelectItem key={value} isSelected={selectedValues.includes(value)} onCheckedChange={() => handleOnChange(value)}>\n                                                    {value}\n                                                </MultiSelectItem>)}\n                                        </DropdownSubContent>\n                                    </DropdownPortal>\n                                </DropdownSub>\n                            </SelectedItemBadge>\n                        </div>\n                        <DropdownSub>\n                            <DropdownSubTrigger>More items</DropdownSubTrigger>\n                            <DropdownPortal>\n                                <DropdownSubContent refElement={ref}>\n                                    {group2.map(value => <MultiSelectItem key={value} isSelected={selectedValues.includes(value)} onCheckedChange={() => handleOnChange(value)}>\n                                            {value}\n                                        </MultiSelectItem>)}\n                                </DropdownSubContent>\n                            </DropdownPortal>\n                        </DropdownSub>\n                    </DropdownContent>\n                </DropdownPortal>\n            </DropdownRoot>;\n  }\n}",..._DropdownWithSelectedItemBadge.parameters?.docs?.source}}};const __namedExportsOrder=["_DropdownWithSingleSelectItem","_DropdownWithMultiSingleSelectItem","_DropdownWithSelectedItemBadge"]},"./src/components/Dropdown/Items/SingleSelectItem/SingleSelectItem.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{_:function(){return SingleSelectItem}});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_radix_ui_react_dropdown_menu__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@radix-ui/react-dropdown-menu/dist/index.mjs"),_PrioritySelector__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./src/components/PrioritySelector/PrioritySelector.tsx"),_utils__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/utils/bem/bem.js"),_Item_scss__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/components/Dropdown/Items/Item.scss"),_utils_misc__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./src/utils/misc.ts"),__assign=function(){return __assign=Object.assign||function(t){for(var s,i=1,n=arguments.length;i<n;i++)for(var p in s=arguments[i])Object.prototype.hasOwnProperty.call(s,p)&&(t[p]=s[p]);return t},__assign.apply(this,arguments)},__rest=function(s,e){var t={};for(var p in s)Object.prototype.hasOwnProperty.call(s,p)&&e.indexOf(p)<0&&(t[p]=s[p]);if(null!=s&&"function"==typeof Object.getOwnPropertySymbols){var i=0;for(p=Object.getOwnPropertySymbols(s);i<p.length;i++)e.indexOf(p[i])<0&&Object.prototype.propertyIsEnumerable.call(s,p[i])&&(t[p[i]]=s[p[i]])}return t},block=(0,_utils__WEBPACK_IMPORTED_MODULE_2__.T)("DropdownItem",_Item_scss__WEBPACK_IMPORTED_MODULE_1__.A).block,SingleSelectItem=react__WEBPACK_IMPORTED_MODULE_0__.forwardRef((function(_a,ref){var children=_a.children,_b=_a.isSelected,isSelected=void 0!==_b&&_b,_c=_a.disabled,disabled=void 0!==_c&&_c,priority=_a.priority,rest=__rest(_a,["children","isSelected","disabled","priority"]),hasPriorityList=priority&&priority.list.length>0,priorityRef=react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_radix_ui_react_dropdown_menu__WEBPACK_IMPORTED_MODULE_3__._2,__assign({ref:ref,role:"option","aria-selected":isSelected,tabIndex:disabled?-1:0,onKeyDown:function handleKeyDown(e){"Tab"!==e.key||e.shiftKey||priorityRef.current&&priorityRef.current.focus()}},rest,block(__assign({isSelected:isSelected,disabled:disabled},rest))),hasPriorityList&&react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{role:"none",onClick:_utils_misc__WEBPACK_IMPORTED_MODULE_4__.d,onKeyDown:_utils_misc__WEBPACK_IMPORTED_MODULE_4__.d},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_PrioritySelector__WEBPACK_IMPORTED_MODULE_5__.U,__assign({},priority,{buttonRef:priorityRef}))),children)}));try{SingleSelectItem.displayName="SingleSelectItem",SingleSelectItem.__docgenInfo={description:"",displayName:"SingleSelectItem",props:{onSelect:{defaultValue:null,description:"A function to be called if the item is clicked",name:"onSelect",required:!1,type:{name:"((e: SyntheticEvent<HTMLDivElement, Event>) => void)"}},id:{defaultValue:null,description:"Id for the checkbox",name:"id",required:!1,type:{name:"string"}},isSelected:{defaultValue:null,description:"Checkbox status",name:"isSelected",required:!1,type:{name:"boolean"}},priority:{defaultValue:null,description:"props for PrioritySelector",name:"priority",required:!1,type:{name:"Props<PriorityItemValue>"}},asChild:{defaultValue:null,description:"",name:"asChild",required:!1,type:{name:"boolean"}},ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"Ref<HTMLElement>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Dropdown/Items/SingleSelectItem/SingleSelectItem.tsx#SingleSelectItem"]={docgenInfo:SingleSelectItem.__docgenInfo,name:"SingleSelectItem",path:"src/components/Dropdown/Items/SingleSelectItem/SingleSelectItem.tsx#SingleSelectItem"})}catch(__react_docgen_typescript_loader_error){}},"./src/components/Dropdown/Separator/Separator.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{w:function(){return Separator}});var react=__webpack_require__("./node_modules/react/index.js"),dist=__webpack_require__("./node_modules/@radix-ui/react-dropdown-menu/dist/index.mjs"),bem=__webpack_require__("./src/utils/bem/bem.js"),Separators={Divider:"Divider--YnvTjkTxrH",SectionTitle:"SectionTitle--fnLjIVwcVw OneUI-caption-upper-case-text-bold"},__assign=function(){return __assign=Object.assign||function(t){for(var s,i=1,n=arguments.length;i<n;i++)for(var p in s=arguments[i])Object.prototype.hasOwnProperty.call(s,p)&&(t[p]=s[p]);return t},__assign.apply(this,arguments)},titleBlock=(0,bem.T)("SectionTitle",Separators),noTitleBlock=(0,bem.T)("Divider",Separators),Separator=function Separator(_a){var children=_a.children,block=children?titleBlock.block:noTitleBlock.block;return react.createElement(dist.wv,__assign({},block(),{title:children}),children)};try{Separator.displayName="Separator",Separator.__docgenInfo={description:"",displayName:"Separator",props:{children:{defaultValue:null,description:"title of the section: optional",name:"children",required:!1,type:{name:"string"}},asChild:{defaultValue:null,description:"",name:"asChild",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Dropdown/Separator/Separator.tsx#Separator"]={docgenInfo:Separator.__docgenInfo,name:"Separator",path:"src/components/Dropdown/Separator/Separator.tsx#Separator"})}catch(__react_docgen_typescript_loader_error){}},"./src/components/SelectedItemBadge/SelectedItemBadge.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{I:function(){return SelectedItemBadge_SelectedItemBadge}});var react=__webpack_require__("./node_modules/react/index.js"),round_close=__webpack_require__("./node_modules/@material-design-icons/svg/round/close.svg"),bem=__webpack_require__("./src/utils/bem/bem.js"),Text=__webpack_require__("./src/components/Text/Text.tsx"),dist=__webpack_require__("./node_modules/@radix-ui/react-dropdown-menu/dist/index.mjs"),DropdownTrigger=__webpack_require__("./src/components/Dropdown/DropdownTrigger/DropdownTrigger.tsx"),DropdownContent=__webpack_require__("./src/components/Dropdown/DropdownContent/DropdownContent.tsx"),PrioritySelector=__webpack_require__("./src/components/PrioritySelector/PrioritySelector.tsx"),IconButton=__webpack_require__("./src/components/Buttons/IconButton/IconButton.tsx"),__assign=function(){return __assign=Object.assign||function(t){for(var s,i=1,n=arguments.length;i<n;i++)for(var p in s=arguments[i])Object.prototype.hasOwnProperty.call(s,p)&&(t[p]=s[p]);return t},__assign.apply(this,arguments)},__rest=function(s,e){var t={};for(var p in s)Object.prototype.hasOwnProperty.call(s,p)&&e.indexOf(p)<0&&(t[p]=s[p]);if(null!=s&&"function"==typeof Object.getOwnPropertySymbols){var i=0;for(p=Object.getOwnPropertySymbols(s);i<p.length;i++)e.indexOf(p[i])<0&&Object.prototype.propertyIsEnumerable.call(s,p[i])&&(t[p[i]]=s[p[i]])}return t},_a=(0,bem.T)("SelectedItemBadge",{SelectedItemBadge:"SelectedItemBadge--Bbz_6FuWkO",SelectedItemBadge__optionText:"SelectedItemBadge__optionText--X0sR4a6dUt",SelectedItemBadge__optionButton:"SelectedItemBadge__optionButton--ch5fTjwrVm","SelectedItemBadge__optionButton--hasPriorityList":"SelectedItemBadge__optionButton--hasPriorityList--DbVQsCug9K","SelectedItemBadge__optionButton--onDelete":"SelectedItemBadge__optionButton--onDelete--KO6mJniQKF",SelectedItemBadge__valueContainer:"SelectedItemBadge__valueContainer--nKtgOeyPN5","SelectedItemBadge__valueContainer--hasPriorityList":"SelectedItemBadge__valueContainer--hasPriorityList--S1LlWUZgTh","SelectedItemBadge__valueContainer--onDelete":"SelectedItemBadge__valueContainer--onDelete--NCy89hjePm",SelectedItemBadge__valueText:"SelectedItemBadge__valueText--vcOeoyj1aD",SelectedItemBadge__badgeDropdownList:"SelectedItemBadge__badgeDropdownList--jRRCtXG0zV",SelectedItemBadge__badgeListItem:"SelectedItemBadge__badgeListItem--EISu89HuDV",SelectedItemBadge__priorityButton:"SelectedItemBadge__priorityButton--sCaLZA5LIU",SelectedItemBadge__deleteButton:"SelectedItemBadge__deleteButton--BffF_1x793"}),block=_a.block,elem=_a.elem,SelectedItemBadge_SelectedItemBadge=react.forwardRef((function(_a,ref){var children=_a.children,label=_a.label,additionalLabel=_a.additionalLabel,_b=_a.isDisabled,isDisabled=void 0!==_b&&_b,onDelete=_a.onDelete,buttonLabel=_a.buttonLabel,deleteButtonLabel=_a.deleteButtonLabel,priority=_a.priority,rest=(_a.refElement,__rest(_a,["children","label","additionalLabel","isDisabled","onDelete","buttonLabel","deleteButtonLabel","priority","refElement"])),_c=react.useState(!1),isOpen=_c[0],setIsOpen=_c[1],badgeRef=react.useRef(null),triggerRef=react.useRef(null),hasPriorityList=priority&&priority.list.length>0;return react.createElement("div",__assign({},rest,block(),{ref:badgeRef||ref}),hasPriorityList&&react.createElement(PrioritySelector.U,__assign({},priority,{triggerClassName:"".concat(elem("priorityButton").className," ").concat(priority.triggerClassName),isDisabled:isDisabled,parentRef:badgeRef})),children?react.createElement(dist.bL,{onOpenChange:function handleOpenStateChange(open){setIsOpen(open)}},react.createElement(DropdownTrigger.u,{asChild:!0,disabled:isDisabled},react.createElement("button",__assign({ref:triggerRef,"aria-label":buttonLabel,disabled:isDisabled,type:"button"},elem("optionButton",{hasPriorityList:hasPriorityList,onDelete:Boolean(onDelete),isOpen:isOpen})),react.createElement(Text.E,__assign({inline:!0,size:"small"},elem("valueText")),label),additionalLabel&&react.createElement(Text.E,__assign({inline:!0,size:"small"},elem("optionText")),additionalLabel))),react.createElement(dist.ZL,null,react.createElement(DropdownContent.p,__assign({},elem("badgeDropdownList"),{sideOffset:6,alignOffset:priority?-32:0,refElement:badgeRef}),children))):react.createElement("div",__assign({},elem("valueContainer",{hasPriorityList:hasPriorityList,onDelete:Boolean(onDelete)})),react.createElement(Text.E,__assign({inline:!0,size:"small"},elem("valueText")),label),additionalLabel&&react.createElement(Text.E,__assign({inline:!0,size:"small"},elem("optionText")),additionalLabel)),onDelete&&react.createElement(IconButton.K,__assign({"aria-label":deleteButtonLabel,disabled:isDisabled,onClick:function handleOnDelete(e){e.stopPropagation(),null==onDelete||onDelete(e)},type:"button",variant:"ghost"},elem("deleteButton")),react.createElement(round_close.A,{viewBox:"0 0 24 24"})))}));try{SelectedItemBadge_SelectedItemBadge.displayName="SelectedItemBadge",SelectedItemBadge_SelectedItemBadge.__docgenInfo={description:"",displayName:"SelectedItemBadge",props:{children:{defaultValue:null,description:"Children nodes to be rendered within the Dropdown,\nwhich is triggered by the main button",name:"children",required:!1,type:{name:"(ReactElement<Props<ChildrenItemValue>, string | JSXElementConstructor<any>> | ReactElement<Props<ChildrenItemValue>, string | JSXElementConstructor<...>>[])[]"}},label:{defaultValue:null,description:"Label of the currently selected option item from filter",name:"label",required:!0,type:{name:"ReactNode"}},additionalLabel:{defaultValue:null,description:"An additional label displayed next to the main label (e.g., the number of synonyms)",name:"additionalLabel",required:!1,type:{name:"ReactNode"}},onDelete:{defaultValue:null,description:"Function to be called when the delete button is clicked.",name:"onDelete",required:!1,type:{name:"((e: MouseEvent<Element, MouseEvent> | KeyboardEvent<Element>) => void)"}},isDisabled:{defaultValue:null,description:"Boolean indicating whether the whole badge should be disabled.",name:"isDisabled",required:!1,type:{name:"boolean"}},buttonLabel:{defaultValue:null,description:"Main button label name for ARIA labelling",name:"buttonLabel",required:!1,type:{name:"string"}},deleteButtonLabel:{defaultValue:null,description:"Delete button label name for ARIA labelling",name:"deleteButtonLabel",required:!1,type:{name:"string"}},priority:{defaultValue:null,description:"props for PrioritySelector",name:"priority",required:!1,type:{name:"Props<PriorityItemValue>"}},refElement:{defaultValue:null,description:"Ref element used to make the width of the Content equal to the parent width",name:"refElement",required:!1,type:{name:"RefObject<HTMLElement | null>"}},ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"Ref<HTMLElement>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/SelectedItemBadge/SelectedItemBadge.tsx#SelectedItemBadge"]={docgenInfo:SelectedItemBadge_SelectedItemBadge.__docgenInfo,name:"SelectedItemBadge",path:"src/components/SelectedItemBadge/SelectedItemBadge.tsx#SelectedItemBadge"})}catch(__react_docgen_typescript_loader_error){}}}]);