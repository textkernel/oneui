{"version":3,"file":"7240.oneui.min.css","mappings":"AAEA;ACAA;ACQA;ACAA;ACTA;ACAA;ACDA;ACAA;ACAA;ACAA","sources":["webpack://@textkernel/oneui/./src/components/Text/Text.scss","webpack://@textkernel/oneui/./src/components/List/ListItem/ListItem.scss","webpack://@textkernel/oneui/./src/components/LoadingSpinner/LoadingSpinner.scss","webpack://@textkernel/oneui/./src/components/Buttons/Button/Button.scss","webpack://@textkernel/oneui/./src/components/SelectComponents/SuggestionsList/SuggestionsList.scss","webpack://@textkernel/oneui/./src/components/Text/MarkedText/MarkedText.scss","webpack://@textkernel/oneui/./src/components/SelectComponents/SelectBase/SelectBase.scss","webpack://@textkernel/oneui/./src/components/FieldWrapper/FieldWrapper.scss","webpack://@textkernel/oneui/./src/components/ContentPlaceholder/ContentPlaceholder.scss","webpack://@textkernel/oneui/./src/components/List/List.scss"],"sourcesContent":[".Text {\n    &--size {\n        &_small {\n            composes: OneUI-caption-text from global;\n        }\n\n        &_medium {\n            composes: OneUI-label-text from global;\n        }\n    }\n\n    &--context {\n        @each $context in (success, cautious, critical, brand) {\n            &_#{ $context } {\n                color: var(--color-text-#{$context}-default);\n            }\n        }\n    }\n\n    &--context_info {\n        color: var(--color-text-info-default);\n    }\n\n    &--context_neutral {\n        color: var(--color-text-subtlest);\n    }\n\n    &--isBold {\n        font-weight: var(--font-weight-bold);\n    }\n}\n","$contexts: (neutral, brand, info, success, cautious, critical);\n\n.ListItem {\n    display: flex;\n    align-items: baseline;\n    padding: var(--space-150);\n    box-sizing: border-box;\n\n    &:hover:not(.ListItem--disabled) {\n        background-color: var(--color-neutral-10);\n    }\n\n    &--isHighlighted {\n        background-color: var(--color-neutral-10);\n    }\n\n    &--isSelected {\n        background-color: var(--color-highlight-background);\n    }\n\n    &--clickable {\n        cursor: pointer;\n    }\n\n    &--disabled {\n        color: var(--color-neutral-30);\n        cursor: not-allowed;\n    }\n\n    &--highlightContext {\n        @each $context in $contexts {\n            &_#{ $context }:hover:not(.ListItem--disabled) {\n                background-color: var(--color-#{$context}-50);\n                color: var(--color-background);\n            }\n\n            &_#{ $context }.ListItem--isSelected {\n                background-color: var(--color-#{$context}-50);\n                color: var(--color-background);\n            }\n\n            &_#{ $context }.ListItem--isHighlighted:not(.ListItem--disabled) {\n                background-color: var(--color-#{$context}-50);\n                color: var(--color-highlight-background);\n            }\n        }\n    }\n}\n","@use \"sass:map\";\n$contexts: (primary, secondary, critical, inverted);\n\n$contextMap: (\n    'secondary': 'neutral',\n    'primary': 'brand',\n    'critical': 'critical',\n    'inverted': 'inverted'\n);\n\n@keyframes rotate {\n    100% {\n        transform: rotate(360deg);\n    }\n}\n\n@keyframes dash {\n    0% {\n        stroke-dasharray: 1, 150;\n        stroke-dashoffset: 0;\n    }\n    50% {\n        stroke-dasharray: 90, 150;\n        stroke-dashoffset: -35;\n    }\n    100% {\n        stroke-dasharray: 90, 150;\n        stroke-dashoffset: -124;\n    }\n}\n\n@mixin center() {\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n}\n\n.LoadingSpinner {\n    display: inline-flex;\n    flex-direction: column;\n    align-items: center;\n\n    &__svg {\n        animation: rotate 2s linear infinite;\n        width: 48px;\n        height: 48px;\n        display: block;\n    }\n\n    &__path {\n        stroke: var(--color-primary-50);\n        stroke-dasharray: 1, 150;\n        stroke-dashoffset: 0;\n        stroke-linecap: round;\n        animation: dash 1.5s ease-in-out infinite;\n        transition: stroke var(--transition-duration);\n        @each $context in $contexts {\n            &--context_#{ $context } {\n                $mappedContext: map.get($contextMap, $context);\n                @if ($mappedContext == 'inverted') {\n                    stroke: var(--color-icon-inverse);\n                } @else if ($mappedContext == 'neutral') {\n                    stroke: var(--color-icon-disabled);\n                } @else {\n                    stroke: var(--color-icon-#{$mappedContext}-disabled);\n                }\n            }  \n        }\n    }\n\n    &__label {\n        display: block;\n        margin-top: var(--space-100);\n    }\n\n    &--centerIn {\n        &_parent {\n            position: absolute;\n            @include center();\n        }\n        &_viewport {\n            position: fixed;\n            @include center();\n        }\n    }\n\n    &--hidden {\n        display: none;\n    }\n}\n","@use 'sass:map';\n$contexts: (primary, secondary, critical);\n$variants: (filled, outlined, ghost);\n\n$contextMap: (\n    'secondary': 'neutral',\n    'primary': 'brand',\n    'critical': 'critical',\n);\n\n@keyframes buttonLoading {\n    0% {\n        background-position: 100% 0;\n    }\n    100% {\n        background-position: -100% 0;\n    }\n}\n.Button {\n    font-family: inherit;\n    display: inline-flex;\n    align-items: center;\n    justify-content: center;\n    border-radius: var(--space-75);\n    border: none;\n    height: var(--space-400);\n    box-sizing: border-box;\n    cursor: pointer;\n    composes: OneUI-label-text-bold from global;\n    text-decoration: none;\n    margin: 0;\n    outline: none;\n    padding: var(--space-0) var(--space-150);\n    text-align: center;\n    transition: all var(--transition-duration);\n    white-space: nowrap;\n    flex-wrap: nowrap;\n\n    // Default variant (filled) and context (primary)\n    background-color: var(--color-background-brand-bold-default);\n    color: var(--color-background);\n\n    &:hover {\n        background-color: var(--color-background-brand-bold-hover);\n    }\n    &:active {\n        background-color: var(--color-background-critical-bold-pressed);\n    }\n    &:focus-visible {\n        box-shadow: 0px 0px 0px 2px var(--color-background-info-subtlest-pressed);\n    }\n\n    &[disabled],\n    &--isLoading {\n        cursor: not-allowed;\n        pointer-events: none;\n        background-color: var(--color-background-brand-bold-disabled);\n        color: var(--color-text-inverse);\n    }\n\n    &--isBlock {\n        width: 100%;\n    }\n\n    &--size {\n        &_small {\n            border-radius: var(--space-50);\n            height: var(--space-300);\n            padding: var(--space-0) var(--space-100);\n        }\n        &_large {\n            border-radius: var(--space-100);\n            height: var(--space-500);\n            padding: var(--space-0) var(--space-200);\n        }\n    }\n}\n\n@each $context in $contexts {\n    @each $variant in $variants {\n        $mappedContext: map.get($contextMap, $context);\n        .Button--context_#{$context}.Button--variant_#{$variant} {\n            @if $variant == filled {\n                &:hover {\n                    background-color: var(--color-background-#{$mappedContext}-subtlest-hover);\n                }\n                &:active {\n                    background-color: var(--color-background-#{$mappedContext}-subtlest-pressed);\n                }\n                @if $mappedContext == neutral {\n                    background-color: var(--color-background-neutral-subtle-default);\n                    color: var(--color-text-bold);\n\n                    &:hover {\n                        background-color: var(--color-background-neutral-subtle-hover);\n                    }\n                    &:active {\n                        background-color: var(--color-background-neutral-subtle-pressed);\n                    }\n                    &[disabled],\n                    &.Button--isLoading {\n                        background-color: var(--color-background-neutral-subtle-disabled);\n                        color: var(--color-text-subtlest);\n                        &:hover,\n                        &:active {\n                            background-color: var(--color-background-neutral-subtle-disabled);\n                        }\n                    }\n                } @else {\n                    background-color: var(--color-background-#{$mappedContext}-bold-default);\n                    color: var(--color-text-inverse);\n\n                    &:hover {\n                        background-color: var(--color-background-#{$mappedContext}-bold-hover);\n                    }\n                    &:active {\n                        background-color: var(--color-background-#{$mappedContext}-bold-pressed);\n                    }\n                    &[disabled],\n                    &.Button--isLoading {\n                        background-color: var(--color-background-#{$mappedContext}-bold-disabled);\n                        &:hover,\n                        &:active {\n                            background-color: var(\n                                --color-background-#{$mappedContext}-bold-disabled\n                            );\n                        }\n                    }\n                }\n            } @else if $variant == outlined {\n                @if $mappedContext == neutral {\n                    color: var(--color-text-subtle);\n                    background-color: transparent;\n                    border-width: var(--line-normal);\n                    border-style: solid;\n                    border-color: var(--color-border-bold);\n\n                    &[disabled],\n                    &.Button--isLoading {\n                        color: var(--color-text-subtlest);\n                        &:hover,\n                        &:active {\n                            background-color: var(--transparent);\n                        }\n                        border-color: var(--color-border-disabled);\n                    }\n                } @else {\n                    color: var(--color-text-#{$mappedContext}-default);\n                    background-color: transparent;\n                    border-width: var(--line-normal);\n                    border-style: solid;\n                    border-color: var(--color-border-#{$mappedContext}-bold-default);\n\n                    &[disabled],\n                    &.Button--isLoading {\n                        color: var(--color-text-#{$mappedContext}-disabled);\n                        &:hover,\n                        &:active {\n                            background-color: var(--transparent);\n                        }\n                        border-color: var(--color-border-#{$mappedContext}-subtle-brand);\n                    }\n                }\n            } @else if $variant == ghost {\n                @if $context == secondary {\n                    color: var(--color-text-subtle);\n                    background-color: var(--transparent);\n\n                    &:hover {\n                        background-color: var(--color-background-neutral-subtlest-hover);\n                    }\n\n                    &:active {\n                        background-color: var(--color-background-neutral-subtlest-pressed);\n                    }\n\n                    &:focus-visible {\n                        box-shadow: 0px 0px 0px 2px var(--color-background-info-subtlest-pressed);\n                    }\n\n                    &[disabled],\n                    &.Button--isLoading {\n                        color: var(--color-text-disabled);\n                        background-color: var(--transparent);\n                        &:hover,\n                        &:active {\n                            background-color: var(--transparent);\n                        }\n                    }\n                } @else {\n                    color: var(--color-text-#{$mappedContext}-default);\n                    background-color: var(--transparent);\n                    &:hover {\n                        background-color: var(--color-background-#{$mappedContext}-subtlest-hover);\n                    }\n                    &:active {\n                        background-color: var(\n                            --color-background-#{$mappedContext}-subtlest-pressed\n                        );\n                    }\n                    &[disabled],\n                    &.Button--isLoading {\n                        color: var(--color-text-#{$mappedContext}-disabled);\n                        &:hover,\n                        &:active {\n                            background-color: var(--transparent);\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n",".SuggestionsList {\n    &__optimizerWrapper {\n        height: 214px;\n    }\n\n    &__loaderItem {\n        width: 50%;\n    }\n}\n",".MarkedText {\n    &__marked {\n        font: inherit;\n        color: inherit;\n        background-color: transparent;\n        font-weight: var(--font-weight-bold);\n    }\n}\n",".SelectBase {\n    position: relative;\n    min-height: 34px;\n    height: 34px;\n    font-size: var(--font-size-normal);\n    color: var(--color-foreground);\n\n    &__main {\n        position: relative;\n        background-color: var(--color-background);\n        transition-property: box-shadow, transform, border-color;\n        transition-duration: var(--transition-duration);\n        border-radius: var(--border-radius);\n\n        &--focused {\n            position: absolute;\n            z-index: 400;\n            width: 100%;\n        }\n    }\n\n    &__spacedElem {\n        margin: var(--space-50);\n    }\n\n    &__list--focused {\n        max-height: 300px;\n        overflow: auto;\n        border-top: 1px solid var(--color-neutral-30);\n        margin-top: -1px;\n    }\n\n    &__list--focused:empty {\n        border-top: none;\n        margin-top: 0;\n    }\n\n    &__loaderContainer {\n        width: 250px;\n    }\n\n    .SelectBase__field {\n        padding: 0;\n    }\n}\n",".FieldWrapper {\n    position: relative;\n    box-sizing: border-box;\n    border: 1px solid var(--color-neutral-20);\n    border-radius: var(--border-radius);\n    cursor: pointer;\n    padding: var(--space-50);\n    transition: all var(--transition-duration);\n    display: flex;\n    align-items: center;\n    color: var(--color-acent);\n\n    &__clearButton {\n        display: none;\n        max-width: 30%;\n        margin-right: var(--space-75);\n        margin-left: auto;\n        padding: var(--space-50);\n        flex-shrink: 0;\n        white-space: nowrap;\n        overflow: hidden;\n        text-overflow: ellipsis;\n        background-color: var(--color-background);\n        transition: all var(--transition-duration);\n\n        &--rightIndent {\n            margin-right: 20px;\n        }\n    }\n\n    &__content {\n        width: 100%;\n\n        .ListItem:hover:not(.ListItem--disabled) {\n            background-color: var(--color-neutral-10);\n        }\n    }\n\n    &__dropdownIcon {\n        position: absolute;\n        top: var(--space-100);\n        right: var(--space-50);\n        font-size: 20px;\n    }\n\n    &--isFocused,\n    &:focus {\n        border-color: var(--color-brand-50);\n        outline: none;\n    }\n\n    &:hover:not(.FieldWrapper--disabled) {\n        border-color: var(--color-brand-50);\n\n        & .FieldWrapper__content {\n            overflow: hidden;\n        }\n\n        & .FieldWrapper__clearButton {\n            display: flex;\n        }\n    }\n\n    &--disabled {\n        cursor: not-allowed;\n    }\n}\n","@keyframes shimmer {\n    0% {\n        background-position: 100% 0;\n    }\n\n    100% {\n        background-position: -100% 0;\n    }\n}\n\n.ContentPlaceholder {\n    animation: {\n        duration: 1s;\n        fill-mode: forwards;\n        iteration-count: infinite;\n        name: shimmer;\n        timing-function: linear;\n    }\n    margin-bottom: var(--space-75);\n    line-height: inherit;\n    background: var(--color-neutral-30);\n    background: linear-gradient(to right, var(--color-neutral-5) 5%, var(--color-neutral-10) 15%, var(--color-neutral-5) 30%);\n    background-size: 200% 100%;\n    position: relative;\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-end;\n\n    &__mask {\n        background-color: var(--color-background);\n        height: inherit;\n        width: 0;\n    }\n\n    &--withoutMargin {\n        margin-bottom: 0;\n    }\n}\n",".List {\n    margin: 0;\n    padding: 0;\n    list-style: none;\n\n    &--isDivided {\n        .List__item + .List__item {\n            border-top: 1px solid var(--color-neutral-10);\n        }\n    }\n\n    &:focus {\n        outline: none;\n    }\n}\n"],"names":[],"sourceRoot":""}