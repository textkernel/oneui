"use strict";(self.webpackChunk_textkernel_oneui=self.webpackChunk_textkernel_oneui||[]).push([[9012],{"./stories/organisms/ComboboxMulti.stories.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{_ComboboxMulti:function(){return _ComboboxMulti},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return ComboboxMulti_stories}});var react=__webpack_require__("./node_modules/react/index.js"),index_esm=__webpack_require__("./node_modules/react-icons/io/index.esm.js"),bem=__webpack_require__("./src/utils/bem/bem.js"),SelectBase=__webpack_require__("./src/components/SelectComponents/SelectBase/SelectBase.tsx"),SuggestionsList=__webpack_require__("./src/components/SelectComponents/SuggestionsList/SuggestionsList.tsx"),keyboard=__webpack_require__("./src/constants/keyboard.ts"),__assign=function(){return __assign=Object.assign||function(t){for(var s,i=1,n=arguments.length;i<n;i++)for(var p in s=arguments[i])Object.prototype.hasOwnProperty.call(s,p)&&(t[p]=s[p]);return t},__assign.apply(this,arguments)},__rest=function(s,e){var t={};for(var p in s)Object.prototype.hasOwnProperty.call(s,p)&&e.indexOf(p)<0&&(t[p]=s[p]);if(null!=s&&"function"==typeof Object.getOwnPropertySymbols){var i=0;for(p=Object.getOwnPropertySymbols(s);i<p.length;i++)e.indexOf(p[i])<0&&Object.prototype.propertyIsEnumerable.call(s,p[i])&&(t[p[i]]=s[p[i]])}return t},elem=(0,bem.T)("ComboboxMulti",{ComboboxMulti__wrapper:"ComboboxMulti__wrapper--DRQG4xTCtj","ComboboxMulti__wrapper--focused":"ComboboxMulti__wrapper--focused--xuuIeQPApY","ComboboxMulti__wrapper--disabled":"ComboboxMulti__wrapper--disabled--wTQfzosiy4",ComboboxMulti__input:"ComboboxMulti__input--Q2zWHCFacF","ComboboxMulti__input--disabled":"ComboboxMulti__input--disabled--McTisza12k",ComboboxMulti__dropdownIcon:"ComboboxMulti__dropdownIcon--ytgtJ8qvSb","ComboboxMulti__dropdownIcon--disabled":"ComboboxMulti__dropdownIcon--disabled--VXI1eDCih9"}).elem;function ComboboxMulti_ComboboxMulti(_a){var _b=_a.id,id=void 0===_b?void 0:_b,onSelectionAdd=_a.onSelectionAdd,inputRefFromProps=_a.inputRef,suggestions=_a.suggestions,suggestionToString=_a.suggestionToString,suggestionItemRenderer=_a.suggestionItemRenderer,noSuggestionsPlaceholder=_a.noSuggestionsPlaceholder,onBlur=_a.onBlur,onInputValueChange=_a.onInputValueChange,disabled=_a.disabled,inputPlaceholder=_a.inputPlaceholder,upArrowLabel=_a.upArrowLabel,downArrowLabel=_a.downArrowLabel,_c=_a.useOptimizeListRender,useOptimizeListRender=void 0!==_c&&_c,_d=_a.inputAttrs,inputAttrs=void 0===_d?{}:_d,_e=_a.shouldRenderWithPortal,shouldRenderWithPortal=void 0!==_e&&_e,rest=__rest(_a,["id","onSelectionAdd","inputRef","suggestions","suggestionToString","suggestionItemRenderer","noSuggestionsPlaceholder","onBlur","onInputValueChange","disabled","inputPlaceholder","upArrowLabel","downArrowLabel","useOptimizeListRender","inputAttrs","shouldRenderWithPortal"]),inputRef=inputRefFromProps||react.createRef();return react.createElement(SelectBase.o,__assign({},rest,{suggestions:suggestions,suggestionToString:suggestionToString,disabled:disabled,inputRef:inputRef,onBlur:onBlur,onSelectionAdd:onSelectionAdd,onInputValueChange:onInputValueChange,listRenderer:function listRenderer(listProps){return react.createElement(SuggestionsList.S,__assign({},listProps,{isLoading:!1,useOptimizeRender:useOptimizeListRender,noSuggestionsPlaceholder:noSuggestionsPlaceholder,suggestionItemRenderer:suggestionItemRenderer,passDisabledToListItems:!0}))},focusedRenderer:function renderFocused(_a){var getInputProps=_a.getInputProps,getToggleButtonProps=_a.getToggleButtonProps,blur=_a.onBlur;return react.createElement("div",__assign({tabIndex:0,role:"searchbox"},elem("wrapper",{disabled:disabled})),react.createElement("input",__assign({},getInputProps(__assign(__assign(__assign({},inputAttrs),{id:id,disabled:disabled,ref:inputRef,placeholder:inputPlaceholder,onKeyDown:function handleInputKeyDown(event){var _a;event.key===keyboard.aH&&(null===(_a=inputRef.current)||void 0===_a||_a.blur())},"data-lpignore":!0}),elem("input",{disabled:disabled}))))),react.createElement(index_esm.nxn,__assign({},elem("dropdownIcon",{disabled:disabled}),getToggleButtonProps({disabled:disabled,onClick:blur}),{role:"button","aria-label":upArrowLabel})))},blurredRenderer:function renderBlurred(_a){var getInputProps=_a.getInputProps,getToggleButtonProps=_a.getToggleButtonProps,onFocus=_a.onFocus;return react.createElement("div",__assign({tabIndex:0,role:"searchbox"},elem("wrapper",{disabled:disabled})),react.createElement("input",__assign({},getInputProps(__assign(__assign(__assign({},inputAttrs),{id:id,disabled:disabled,ref:inputRef,placeholder:inputPlaceholder,onFocus:onFocus,"data-lpignore":!0}),elem("input",{disabled:disabled}))))),react.createElement(index_esm.q2p,__assign({},elem("dropdownIcon",{disabled:disabled}),getToggleButtonProps({disabled:disabled,onClick:function onClick(e){null==e||e.stopPropagation()}}),{role:"button","aria-label":downArrowLabel})))},keepExpandedAfterSelection:!0,shouldRenderWithPortal:shouldRenderWithPortal}))}ComboboxMulti_ComboboxMulti.displayName="ComboboxMulti";try{ComboboxMulti_ComboboxMulti.displayName="ComboboxMulti",ComboboxMulti_ComboboxMulti.__docgenInfo={description:"## Usage information\nThis component is recommended to use when there's a static known list of values.\nThe user can filter the list through the input field. The list is shown right away\nby clicking on the control. Selected options are not rendered by the component itself.\nThe application using this component should rendered them separately,\ne.g. above this component using SelectedOption.\n\nMore detailed face-to-face comparison of Select components can be found\n[here](https://docs.google.com/spreadsheets/d/1VyYR54RpNaPWLBXOoBPkFEkmzLS_LfEEGdm1ZTTOcHU/edit#gid=0)",displayName:"ComboboxMulti",props:{id:{defaultValue:{value:"undefined"},description:"define id for input element",name:"id",required:!1,type:{name:"string"}},inputPlaceholder:{defaultValue:null,description:"to be shown in the input field when no value is typed",name:"inputPlaceholder",required:!0,type:{name:"string"}},noSuggestionsPlaceholder:{defaultValue:null,description:"to be shown when no suggestions are available",name:"noSuggestionsPlaceholder",required:!0,type:{name:"string"}},useOptimizeListRender:{defaultValue:{value:"false"},description:"enable ListOptimizer component for decreasing render time",name:"useOptimizeListRender",required:!1,type:{name:"boolean"}},inputAttrs:{defaultValue:{value:"{}"},description:"Additional HTML attributes to be applied to the input element",name:"inputAttrs",required:!1,type:{name:"DictionaryOf<string | boolean>"}},downArrowLabel:{defaultValue:null,description:"Down arrow name for ARIA labelling, it is used when the component isn't focused",name:"downArrowLabel",required:!1,type:{name:"string"}},upArrowLabel:{defaultValue:null,description:"Up arrow name for ARIA labelling, it is used when the component is focused and options are shown",name:"upArrowLabel",required:!1,type:{name:"string"}},shouldRenderWithPortal:{defaultValue:{value:"false"},description:"determines if the suggestion list should be rendered using a React Portal\nto the dropdown needs to bypass parent element clipping, overflow, or z-index issues.",name:"shouldRenderWithPortal",required:!1,type:{name:"boolean"}},suggestions:{defaultValue:null,description:'an array of objects or strings that will be used to render the suggestions list.\nif you want to disabled some of the items, this props needs to be an array of objects,\nwhere the object has a property "disabled" set true as needed.',name:"suggestions",required:!0,type:{name:"S[]"}},suggestionToString:{defaultValue:null,description:"suggestionToString(suggestion) should return a string to be displayed in the UI. e.g.: suggestion => suggestion.name",name:"suggestionToString",required:!0,type:{name:"(suggestions?: S | null | undefined) => string"}},suggestionItemRenderer:{defaultValue:null,description:"render function for suggestion list item. If undefined, suggestionToString will be used.",name:"suggestionItemRenderer",required:!1,type:{name:"((suggestions: S | null, index: number, array: S[]) => ReactNode)"}},rootRef:{defaultValue:null,description:"root wrapper ref",name:"rootRef",required:!1,type:{name:"RefObject<HTMLDivElement>"}},listRef:{defaultValue:null,description:"suggestions list ref",name:"listRef",required:!1,type:{name:"RefObject<HTMLUListElement>"}},disabled:{defaultValue:null,description:"defines if the component is disabled",name:"disabled",required:!1,type:{name:"boolean"}},className:{defaultValue:null,description:"a class to be applied to the top level div",name:"className",required:!1,type:{name:"string"}},onFocus:{defaultValue:null,description:"onFocus() is called when the component is focused",name:"onFocus",required:!1,type:{name:"(() => void)"}},onBlur:{defaultValue:null,description:"onBlur() is called when the component is blurred",name:"onBlur",required:!1,type:{name:"(() => void)"}},onSelectionAdd:{defaultValue:null,description:"onSelectionAdd() called when a suggestion is selected",name:"onSelectionAdd",required:!0,type:{name:"(item: S) => void"}},onOuterClick:{defaultValue:null,description:"a callback to be called when outer click happens",name:"onOuterClick",required:!1,type:{name:"(() => void)"}},inputRef:{defaultValue:null,description:"input field ref",name:"inputRef",required:!1,type:{name:"RefObject<HTMLElement>"}},onInputValueChange:{defaultValue:null,description:"onInputValueChange(inputValue) called when the input values is changed. Can be used to implement the component as controlled component",name:"onInputValueChange",required:!1,type:{name:"((value: string) => void)"}},clearInputAfterSelection:{defaultValue:null,description:"clean up input value after selected item",name:"clearInputAfterSelection",required:!1,type:{name:"boolean"}},initInputValue:{defaultValue:null,description:"Initial input value should be shown if input gets focused",name:"initInputValue",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/SelectComponents/ComboboxMulti/ComboboxMulti.tsx#ComboboxMulti"]={docgenInfo:ComboboxMulti_ComboboxMulti.__docgenInfo,name:"ComboboxMulti",path:"src/components/SelectComponents/ComboboxMulti/ComboboxMulti.tsx#ComboboxMulti"})}catch(__react_docgen_typescript_loader_error){}var suggestions=__webpack_require__("./src/components/SelectComponents/Autosuggest/__mocks__/suggestions.ts"),ComboboxMulti_stories_assign=function(){return ComboboxMulti_stories_assign=Object.assign||function(t){for(var s,i=1,n=arguments.length;i<n;i++)for(var p in s=arguments[i])Object.prototype.hasOwnProperty.call(s,p)&&(t[p]=s[p]);return t},ComboboxMulti_stories_assign.apply(this,arguments)},__spreadArray=function(to,from,pack){if(pack||2===arguments.length)for(var ar,i=0,l=from.length;i<l;i++)!ar&&i in from||(ar||(ar=Array.prototype.slice.call(from,0,i)),ar[i]=from[i]);return to.concat(ar||Array.prototype.slice.call(from))},ComboboxMulti_stories={title:"Organisms/Select Components/ComboboxMulti",component:ComboboxMulti_ComboboxMulti},_ComboboxMulti={name:"ComboboxMulti",args:{style:{width:"650px"},useOptimizeListRender:!1,inputPlaceholder:"Select something...",noSuggestionsPlaceholder:"No suggestions found...",suggestionToString:suggestions.r5},render:function render(args){var _a=react.useState([]),selectedSuggestions=_a[0],setSelectedSuggestions=_a[1],_b=react.useState(""),inputValue=_b[0],setInputValue=_b[1],_c=react.useState(!1),disabled=_c[0],setDisabled=_c[1];return react.createElement(react.Fragment,null,react.createElement("ul",null,selectedSuggestions.map((function(item){return react.createElement("li",{key:item.name},item.name)}))),react.createElement(ComboboxMulti_ComboboxMulti,ComboboxMulti_stories_assign({},args,{suggestions:function getSuggestions(){return suggestions.MK.filter((function(item){return!selectedSuggestions.includes(item)&&item.name.toLocaleLowerCase().includes(inputValue.toLocaleLowerCase())}))}(),onFocus:function onFocus(){console.log("onFocus was called")},onBlur:function onBlur(){console.log("onBlur was called"),setTimeout((function(){return setInputValue("")}),200)},onSelectionAdd:function onSelectionAdd(item){console.log("onSelectionAdd was called with {name: ".concat(null==item?void 0:item.name,"}")),setSelectedSuggestions(__spreadArray(__spreadArray([],selectedSuggestions,!0),[item],!1)),selectedSuggestions.length===suggestions.MK.length&&setDisabled(!0)},onInputValueChange:function onInputValueChange(value){console.log("onInputValueChange was called with ".concat(value)),setInputValue(value)},disabled:args.disabled||disabled})))}};_ComboboxMulti.parameters={..._ComboboxMulti.parameters,docs:{..._ComboboxMulti.parameters?.docs,source:{originalSource:"{\n  name: 'ComboboxMulti',\n  args: {\n    style: {\n      width: '650px'\n    },\n    useOptimizeListRender: false,\n    inputPlaceholder: 'Select something...',\n    noSuggestionsPlaceholder: 'No suggestions found...',\n    suggestionToString: SUGGESTION_TO_STRING\n  },\n  render: args => {\n    const [selectedSuggestions, setSelectedSuggestions] = React.useState<TSuggestion[]>([]);\n    const [inputValue, setInputValue] = React.useState('');\n    const [disabled, setDisabled] = React.useState(false);\n    const getSuggestions = (): TSuggestion[] => SUGGESTIONS.filter(item => !selectedSuggestions.includes(item) && item.name.toLocaleLowerCase().includes(inputValue.toLocaleLowerCase()));\n    const onInputValueChange = (value: string) => {\n      console.log(`onInputValueChange was called with ${value}`);\n      setInputValue(value);\n    };\n    const onSelectionAdd = (item: TSuggestion) => {\n      console.log(`onSelectionAdd was called with {name: ${item?.name}}`);\n      setSelectedSuggestions([...selectedSuggestions, item]);\n      if (selectedSuggestions.length === SUGGESTIONS.length) {\n        setDisabled(true);\n      }\n    };\n    const onFocus = () => {\n      console.log('onFocus was called');\n    };\n    const onBlur = () => {\n      console.log('onBlur was called');\n      setTimeout(() => setInputValue(''), 200);\n    };\n    return <>\n                <ul>\n                    {selectedSuggestions.map(item => <li key={item.name}>{item.name}</li>)}\n                </ul>\n                <ComboboxMulti<TSuggestion> {...args} suggestions={getSuggestions()} onFocus={onFocus} onBlur={onBlur} onSelectionAdd={onSelectionAdd} onInputValueChange={onInputValueChange} disabled={args.disabled || disabled} />\n            </>;\n  }\n}",..._ComboboxMulti.parameters?.docs?.source}}};const __namedExportsOrder=["_ComboboxMulti"]},"./src/components/SelectComponents/Autosuggest/__mocks__/suggestions.ts":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{MK:function(){return SUGGESTIONS},lc:function(){return COMPLEX_SUGGESTIONS},r5:function(){return SUGGESTION_TO_STRING}});var SUGGESTIONS=[{name:"Sun"},{name:"Moon"},{name:"Mercury"},{name:"Venus"},{name:"Earth"},{name:"Mars"},{name:"Jupiter"},{name:"Saturn"},{name:"Neptune"},{name:"Pluto",disabled:!0}],COMPLEX_SUGGESTIONS=[{name:"Sun",type:"star"},{name:"Moon",type:"star"},{name:"Mercury",type:"planet"},{name:"Venus",type:"planet"},{name:"Earth",type:"planet"},{name:"Mars",type:"planet"},{name:"Jupiter",type:"planet"},{name:"Saturn",type:"planet"},{name:"Neptune",type:"planet"}],SUGGESTION_TO_STRING=function SUGGESTION_TO_STRING(item){return item?item.name:""}},"./node_modules/tslib/tslib.es6.mjs":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{Cl:function(){return __assign},Tt:function(){return __rest},fX:function(){return __spreadArray}});var __assign=function(){return __assign=Object.assign||function __assign(t){for(var s,i=1,n=arguments.length;i<n;i++)for(var p in s=arguments[i])Object.prototype.hasOwnProperty.call(s,p)&&(t[p]=s[p]);return t},__assign.apply(this,arguments)};function __rest(s,e){var t={};for(var p in s)Object.prototype.hasOwnProperty.call(s,p)&&e.indexOf(p)<0&&(t[p]=s[p]);if(null!=s&&"function"==typeof Object.getOwnPropertySymbols){var i=0;for(p=Object.getOwnPropertySymbols(s);i<p.length;i++)e.indexOf(p[i])<0&&Object.prototype.propertyIsEnumerable.call(s,p[i])&&(t[p[i]]=s[p[i]])}return t}Object.create;function __spreadArray(to,from,pack){if(pack||2===arguments.length)for(var ar,i=0,l=from.length;i<l;i++)!ar&&i in from||(ar||(ar=Array.prototype.slice.call(from,0,i)),ar[i]=from[i]);return to.concat(ar||Array.prototype.slice.call(from))}Object.create;"function"==typeof SuppressedError&&SuppressedError}}]);