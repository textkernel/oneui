@use 'sass:map';

@mixin common-button-style(
    $hoverColor: var(--color-neutral-10),
    $activeColor: var(--color-neutral-20)
) {
    & {
        align-items: center;
        background-color: var(--transparent);
        cursor: pointer;
        display: flex;
        flex-shrink: 0;
        height: var(--space-400);
        justify-content: center;
        width: var(--space-400);
    }

    &:hover:not([disabled]),
    &:focus:not([disabled]) {
        background-color: $hoverColor;
    }
    &:active:not([disabled]) {
        background-color: $activeColor;
    }

    &[disabled] {
        cursor: not-allowed;
    }
}

@mixin selected-state(
    $selectedColor: var(--color-info-5),
    $hoverColor: var(--color-info-10),
    $activeColor: var(--color-info-20)
) {
    & {
        background-color: $selectedColor;
    }
    &:hover:not([disabled]),
    &:focus:not([disabled]) {
        background-color: $hoverColor;
    }
    &:active:not([disabled]) {
        background-color: $activeColor;
    }
    &[disabled] {
        background-color: $selectedColor;
    }
}

$icon-status-colors: (
    mandatory: (
        normal: var(--color-icon-success-default),
        disabled: var(--color-icon-success-disabled),
    ),
    important: (
        normal: var(--color-icon-caution-default),
        disabled: var(--color-icon-caution-disabled),
    ),
    optional: (
        normal: var(--color-icon-information-default),
        disabled: var(--color-icon-success-disabled),
    ),
    exclude: (
        normal: var(--color-icon-critical-default),
        disabled: var(--color-icon-critical-disabled),
    ),
);

.SelectBadge {
    height: var(--space-400);
    border: 1px solid var(--color-neutral-30);
    border-radius: var(--space-100);
    display: flex;
    align-items: center;
    overflow: hidden;

    &__priorityButton {
        padding: 0;
        border: 0;
        border-right: 1px solid #b3b3b3;

        @include common-button-style();
    }

    &__icon {
        font-size: 20px;

        @each $status, $colors in $icon-status-colors {
            &--#{$status} {
                color: map.get($colors, normal);

                &[disabled] {
                    color: map.get($colors, disabled);
                }
            }
        }
    }

    &__optionButton {
        width: 100%;
        padding: 0 var(--space-100);
        border: 0;
        justify-content: space-around;
        flex-grow: 1;
        gap: var(--space-50);

        &[disabled] {
            .SelectBadge__optionButton--optionText {
                color: var(--color-info-30);
            }
        }

        @include common-button-style();
    }

    &__priorityButton--isSelected,
    &__optionButton--isSelected {
        @include selected-state();
    }

    &__valueContainer {
        display: flex;
        align-items: center;
        justify-content: center;
        flex-grow: 1;
        cursor: default;
    }

    &__valueText {
        max-width: 136px;
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
    }

    &__optionText {
        min-width: var(--space-600);
        color: var(--color-info-60);
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
    }

    .Dropdown {
        &__list {
            width: 100%;
            border-radius: var(--space-100);
            overflow: hidden;

            .ListItem {
                display: flex;
                align-items: center;
                justify-content: flex-start;
                gap: var(--space-100);
            }
        }
    }

    &__listHeadline {
        padding: 12px 12px 4px;
        background-color: var(--color-brand-5);
        font-weight: var(--font-weight-bold);
        color: var(--color-brand-60);
    }

    &__closeButton {
        border: 0;
        border-left: 1px solid #b3b3b3;
        padding: 0;

        &[disabled] {
            .svg {
                color: var(--color-neutral-30);
            }
        }

        @include common-button-style();
    }
}
