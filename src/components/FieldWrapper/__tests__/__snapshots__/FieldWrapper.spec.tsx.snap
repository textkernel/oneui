// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`FieldWrapper should add clear button if showClearButton is true 1`] = `
<FieldWrapper
  clearTooltipLabel="Clear"
  showClearButton={true}
>
  <div
    className="FieldWrapper"
  >
    <div
      className="FieldWrapper__content"
    >
      some children
    </div>
    <Button
      className="FieldWrapper__clearButton"
      isInline={true}
      isLink={true}
      onClick={[Function]}
      title="Clear"
    >
      <button
        className="Button Button--isLink Button--isInline FieldWrapper__clearButton"
        disabled={false}
        onClick={[Function]}
        title="Clear"
        type="button"
      >
        <MdClear
          size={16}
        >
          <IconBase
            attr={
              Object {
                "viewBox": "0 0 24 24",
              }
            }
            size={16}
          >
            <svg
              fill="currentColor"
              height={16}
              size={16}
              stroke="currentColor"
              strokeWidth="0"
              style={
                Object {
                  "color": undefined,
                }
              }
              viewBox="0 0 24 24"
              width={16}
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
                key="0"
              />
            </svg>
          </IconBase>
        </MdClear>
      </button>
    </Button>
  </div>
</FieldWrapper>
`;

exports[`FieldWrapper should render arrow icon pointing down 1`] = `
<FieldWrapper
  showArrow={true}
>
  <div
    className="FieldWrapper"
  >
    <div
      className="FieldWrapper__content"
    >
      some children
    </div>
    <IoMdArrowDropdown
      className="FieldWrapper__dropdownIcon"
      onClick={[Function]}
      onKeyDown={[Function]}
      tabIndex={0}
    >
      <IconBase
        attr={
          Object {
            "viewBox": "0 0 512 512",
          }
        }
        className="FieldWrapper__dropdownIcon"
        onClick={[Function]}
        onKeyDown={[Function]}
        tabIndex={0}
      >
        <svg
          className="FieldWrapper__dropdownIcon"
          fill="currentColor"
          height="1em"
          onClick={[Function]}
          onKeyDown={[Function]}
          stroke="currentColor"
          strokeWidth="0"
          style={
            Object {
              "color": undefined,
            }
          }
          tabIndex={0}
          viewBox="0 0 512 512"
          width="1em"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M128 192l128 128 128-128z"
            key="0"
          />
        </svg>
      </IconBase>
    </IoMdArrowDropdown>
  </div>
</FieldWrapper>
`;

exports[`FieldWrapper should render arrow icon pointing up 1`] = `
<FieldWrapper
  isArrowUp={true}
  showArrow={true}
>
  <div
    className="FieldWrapper"
  >
    <div
      className="FieldWrapper__content"
    >
      some children
    </div>
    <IoMdArrowDropup
      className="FieldWrapper__dropdownIcon"
      onClick={[Function]}
      onKeyDown={[Function]}
      tabIndex={0}
    >
      <IconBase
        attr={
          Object {
            "viewBox": "0 0 512 512",
          }
        }
        className="FieldWrapper__dropdownIcon"
        onClick={[Function]}
        onKeyDown={[Function]}
        tabIndex={0}
      >
        <svg
          className="FieldWrapper__dropdownIcon"
          fill="currentColor"
          height="1em"
          onClick={[Function]}
          onKeyDown={[Function]}
          stroke="currentColor"
          strokeWidth="0"
          style={
            Object {
              "color": undefined,
            }
          }
          tabIndex={0}
          viewBox="0 0 512 512"
          width="1em"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M128 320l128-128 128 128z"
            key="0"
          />
        </svg>
      </IconBase>
    </IoMdArrowDropup>
  </div>
</FieldWrapper>
`;

exports[`FieldWrapper should render correctly 1`] = `
<FieldWrapper>
  <div
    className="FieldWrapper"
  >
    <div
      className="FieldWrapper__content"
    >
      some children
    </div>
  </div>
</FieldWrapper>
`;
