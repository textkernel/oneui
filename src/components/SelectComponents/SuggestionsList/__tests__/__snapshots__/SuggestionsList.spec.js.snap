// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SuggestionsList should initially render component correctly 1`] = `
<SuggestionsList
  allowMixingSuggestionsAndLoading={false}
  getItemProps={[Function]}
  highlightedIndex={1}
  inputValue=""
  isLoading={false}
  noSuggestionsPlaceholder="noSuggestionsPlaceholder"
  passDisabledToListItems={false}
  suggestionToString={[Function]}
  suggestions={
    Array [
      Object {
        "name": "Sun",
      },
      Object {
        "name": "Moon",
      },
      Object {
        "name": "Mercury",
      },
      Object {
        "name": "Venus",
      },
      Object {
        "name": "Earth",
      },
      Object {
        "name": "Mars",
      },
      Object {
        "name": "Jupiter",
      },
      Object {
        "name": "Saturn",
      },
      Object {
        "name": "Neptune",
      },
      Object {
        "disabled": true,
        "name": "Pluto",
      },
    ]
  }
  useOptimizeRender={false}
>
  <ListItem
    disabled={false}
    highlightContext="default"
    isHighlighted={false}
    isSelected={false}
    key="Sun"
    passDisabledToLi={false}
    style={Object {}}
  >
    <li
      className="ListItem"
      role="presentation"
      style={Object {}}
    >
      <MarkedText
        inline={true}
        key=".0"
        marker=""
      >
        <Text
          context="default"
          inline={true}
          size="normal"
        >
          <span>
            Sun
          </span>
        </Text>
      </MarkedText>
    </li>
  </ListItem>
  <ListItem
    disabled={false}
    highlightContext="default"
    isHighlighted={true}
    isSelected={false}
    key="Moon"
    passDisabledToLi={false}
    style={Object {}}
  >
    <li
      className="ListItem ListItem--isHighlighted"
      role="presentation"
      style={Object {}}
    >
      <MarkedText
        inline={true}
        key=".0"
        marker=""
      >
        <Text
          context="default"
          inline={true}
          size="normal"
        >
          <span>
            Moon
          </span>
        </Text>
      </MarkedText>
    </li>
  </ListItem>
  <ListItem
    disabled={false}
    highlightContext="default"
    isHighlighted={false}
    isSelected={false}
    key="Mercury"
    passDisabledToLi={false}
    style={Object {}}
  >
    <li
      className="ListItem"
      role="presentation"
      style={Object {}}
    >
      <MarkedText
        inline={true}
        key=".0"
        marker=""
      >
        <Text
          context="default"
          inline={true}
          size="normal"
        >
          <span>
            Mercury
          </span>
        </Text>
      </MarkedText>
    </li>
  </ListItem>
  <ListItem
    disabled={false}
    highlightContext="default"
    isHighlighted={false}
    isSelected={false}
    key="Venus"
    passDisabledToLi={false}
    style={Object {}}
  >
    <li
      className="ListItem"
      role="presentation"
      style={Object {}}
    >
      <MarkedText
        inline={true}
        key=".0"
        marker=""
      >
        <Text
          context="default"
          inline={true}
          size="normal"
        >
          <span>
            Venus
          </span>
        </Text>
      </MarkedText>
    </li>
  </ListItem>
  <ListItem
    disabled={false}
    highlightContext="default"
    isHighlighted={false}
    isSelected={false}
    key="Earth"
    passDisabledToLi={false}
    style={Object {}}
  >
    <li
      className="ListItem"
      role="presentation"
      style={Object {}}
    >
      <MarkedText
        inline={true}
        key=".0"
        marker=""
      >
        <Text
          context="default"
          inline={true}
          size="normal"
        >
          <span>
            Earth
          </span>
        </Text>
      </MarkedText>
    </li>
  </ListItem>
  <ListItem
    disabled={false}
    highlightContext="default"
    isHighlighted={false}
    isSelected={false}
    key="Mars"
    passDisabledToLi={false}
    style={Object {}}
  >
    <li
      className="ListItem"
      role="presentation"
      style={Object {}}
    >
      <MarkedText
        inline={true}
        key=".0"
        marker=""
      >
        <Text
          context="default"
          inline={true}
          size="normal"
        >
          <span>
            Mars
          </span>
        </Text>
      </MarkedText>
    </li>
  </ListItem>
  <ListItem
    disabled={false}
    highlightContext="default"
    isHighlighted={false}
    isSelected={false}
    key="Jupiter"
    passDisabledToLi={false}
    style={Object {}}
  >
    <li
      className="ListItem"
      role="presentation"
      style={Object {}}
    >
      <MarkedText
        inline={true}
        key=".0"
        marker=""
      >
        <Text
          context="default"
          inline={true}
          size="normal"
        >
          <span>
            Jupiter
          </span>
        </Text>
      </MarkedText>
    </li>
  </ListItem>
  <ListItem
    disabled={false}
    highlightContext="default"
    isHighlighted={false}
    isSelected={false}
    key="Saturn"
    passDisabledToLi={false}
    style={Object {}}
  >
    <li
      className="ListItem"
      role="presentation"
      style={Object {}}
    >
      <MarkedText
        inline={true}
        key=".0"
        marker=""
      >
        <Text
          context="default"
          inline={true}
          size="normal"
        >
          <span>
            Saturn
          </span>
        </Text>
      </MarkedText>
    </li>
  </ListItem>
  <ListItem
    disabled={false}
    highlightContext="default"
    isHighlighted={false}
    isSelected={false}
    key="Neptune"
    passDisabledToLi={false}
    style={Object {}}
  >
    <li
      className="ListItem"
      role="presentation"
      style={Object {}}
    >
      <MarkedText
        inline={true}
        key=".0"
        marker=""
      >
        <Text
          context="default"
          inline={true}
          size="normal"
        >
          <span>
            Neptune
          </span>
        </Text>
      </MarkedText>
    </li>
  </ListItem>
  <ListItem
    disabled={true}
    highlightContext="default"
    isHighlighted={false}
    isSelected={false}
    key="Pluto"
    passDisabledToLi={false}
    style={Object {}}
  >
    <li
      className="ListItem ListItem--disabled"
      role="presentation"
      style={Object {}}
    >
      <MarkedText
        inline={true}
        key=".0"
        marker=""
      >
        <Text
          context="default"
          inline={true}
          size="normal"
        >
          <span>
            Pluto
          </span>
        </Text>
      </MarkedText>
    </li>
  </ListItem>
</SuggestionsList>
`;

exports[`SuggestionsList should render isLoading state 1`] = `
<SuggestionsList
  allowMixingSuggestionsAndLoading={false}
  getItemProps={[Function]}
  highlightedIndex={1}
  inputValue=""
  isLoading={true}
  noSuggestionsPlaceholder="noSuggestionsPlaceholder"
  passDisabledToListItems={false}
  suggestionToString={[Function]}
  suggestions={
    Array [
      Object {
        "name": "Sun",
      },
      Object {
        "name": "Moon",
      },
      Object {
        "name": "Mercury",
      },
      Object {
        "name": "Venus",
      },
      Object {
        "name": "Earth",
      },
      Object {
        "name": "Mars",
      },
      Object {
        "name": "Jupiter",
      },
      Object {
        "name": "Saturn",
      },
      Object {
        "name": "Neptune",
      },
      Object {
        "disabled": true,
        "name": "Pluto",
      },
    ]
  }
  useOptimizeRender={false}
>
  <ListItem
    disabled={false}
    highlightContext="default"
    isHighlighted={false}
    isSelected={false}
    key="0"
    passDisabledToLi={false}
  >
    <li
      className="ListItem"
      role="presentation"
    >
      <div
        className="SuggestionsList__loaderItem"
        key=".0"
      >
        <ContentPlaceholder
          duration={1}
          width={100}
          withoutMargin={false}
        >
          <div
            className="ContentPlaceholder"
            style={
              Object {
                "animationDuration": "1s",
                "height": undefined,
              }
            }
          >
             
            <div
              className="ContentPlaceholder__mask"
              style={
                Object {
                  "width": "0%",
                }
              }
            />
          </div>
        </ContentPlaceholder>
      </div>
    </li>
  </ListItem>
  <ListItem
    disabled={false}
    highlightContext="default"
    isHighlighted={false}
    isSelected={false}
    key="1"
    passDisabledToLi={false}
  >
    <li
      className="ListItem"
      role="presentation"
    >
      <div
        className="SuggestionsList__loaderItem"
        key=".0"
      >
        <ContentPlaceholder
          duration={1}
          width={100}
          withoutMargin={false}
        >
          <div
            className="ContentPlaceholder"
            style={
              Object {
                "animationDuration": "1s",
                "height": undefined,
              }
            }
          >
             
            <div
              className="ContentPlaceholder__mask"
              style={
                Object {
                  "width": "0%",
                }
              }
            />
          </div>
        </ContentPlaceholder>
      </div>
    </li>
  </ListItem>
  <ListItem
    disabled={false}
    highlightContext="default"
    isHighlighted={false}
    isSelected={false}
    key="2"
    passDisabledToLi={false}
  >
    <li
      className="ListItem"
      role="presentation"
    >
      <div
        className="SuggestionsList__loaderItem"
        key=".0"
      >
        <ContentPlaceholder
          duration={1}
          width={100}
          withoutMargin={false}
        >
          <div
            className="ContentPlaceholder"
            style={
              Object {
                "animationDuration": "1s",
                "height": undefined,
              }
            }
          >
             
            <div
              className="ContentPlaceholder__mask"
              style={
                Object {
                  "width": "0%",
                }
              }
            />
          </div>
        </ContentPlaceholder>
      </div>
    </li>
  </ListItem>
  <ListItem
    disabled={false}
    highlightContext="default"
    isHighlighted={false}
    isSelected={false}
    key="3"
    passDisabledToLi={false}
  >
    <li
      className="ListItem"
      role="presentation"
    >
      <div
        className="SuggestionsList__loaderItem"
        key=".0"
      >
        <ContentPlaceholder
          duration={1}
          width={100}
          withoutMargin={false}
        >
          <div
            className="ContentPlaceholder"
            style={
              Object {
                "animationDuration": "1s",
                "height": undefined,
              }
            }
          >
             
            <div
              className="ContentPlaceholder__mask"
              style={
                Object {
                  "width": "0%",
                }
              }
            />
          </div>
        </ContentPlaceholder>
      </div>
    </li>
  </ListItem>
  <ListItem
    disabled={false}
    highlightContext="default"
    isHighlighted={false}
    isSelected={false}
    key="4"
    passDisabledToLi={false}
  >
    <li
      className="ListItem"
      role="presentation"
    >
      <div
        className="SuggestionsList__loaderItem"
        key=".0"
      >
        <ContentPlaceholder
          duration={1}
          width={100}
          withoutMargin={false}
        >
          <div
            className="ContentPlaceholder"
            style={
              Object {
                "animationDuration": "1s",
                "height": undefined,
              }
            }
          >
             
            <div
              className="ContentPlaceholder__mask"
              style={
                Object {
                  "width": "0%",
                }
              }
            />
          </div>
        </ContentPlaceholder>
      </div>
    </li>
  </ListItem>
</SuggestionsList>
`;

exports[`SuggestionsList should render optimization list correctly 1`] = `
<SuggestionsList
  allowMixingSuggestionsAndLoading={false}
  getItemProps={[Function]}
  highlightedIndex={1}
  inputValue=""
  isLoading={false}
  noSuggestionsPlaceholder="noSuggestionsPlaceholder"
  passDisabledToListItems={false}
  suggestionToString={[Function]}
  suggestions={
    Array [
      Object {
        "name": "Sun",
      },
      Object {
        "name": "Moon",
      },
      Object {
        "name": "Mercury",
      },
      Object {
        "name": "Venus",
      },
      Object {
        "name": "Earth",
      },
      Object {
        "name": "Mars",
      },
      Object {
        "name": "Jupiter",
      },
      Object {
        "name": "Saturn",
      },
      Object {
        "name": "Neptune",
      },
      Object {
        "disabled": true,
        "name": "Pluto",
      },
    ]
  }
  useOptimizeRender={true}
>
  <div
    className="SuggestionsList__optimizerWrapper"
  >
    <ListOptimizer
      rowCount={10}
    >
      <AutoSizer
        disableHeight={false}
        disableWidth={false}
        onResize={[Function]}
        style={Object {}}
      >
        <div
          style={
            Object {
              "height": 0,
              "overflow": "visible",
              "width": 0,
            }
          }
        >
          <List
            autoHeight={false}
            deferredMeasurementCache={
              CellMeasurerCache {
                "_cellHeightCache": Object {},
                "_cellWidthCache": Object {},
                "_columnCount": 0,
                "_columnWidthCache": Object {},
                "_defaultHeight": 30,
                "_defaultWidth": 100,
                "_hasFixedHeight": false,
                "_hasFixedWidth": true,
                "_keyMapper": [Function],
                "_minHeight": 0,
                "_minWidth": 0,
                "_rowCount": 0,
                "_rowHeightCache": Object {},
                "columnWidth": [Function],
                "rowHeight": [Function],
              }
            }
            estimatedRowSize={30}
            height={0}
            noRowsRenderer={[Function]}
            onRowsRendered={[Function]}
            onScroll={[Function]}
            overscanIndicesGetter={[Function]}
            overscanRowCount={10}
            rowCount={10}
            rowHeight={[Function]}
            rowRenderer={[Function]}
            scrollToAlignment="auto"
            scrollToIndex={-1}
            style={Object {}}
            width={0}
          >
            <Grid
              aria-label="grid"
              aria-readonly={true}
              autoContainerWidth={true}
              autoHeight={false}
              autoWidth={false}
              cellRangeRenderer={[Function]}
              cellRenderer={[Function]}
              className="ReactVirtualized__List"
              columnCount={1}
              columnWidth={0}
              containerRole="rowgroup"
              containerStyle={Object {}}
              deferredMeasurementCache={
                CellMeasurerCache {
                  "_cellHeightCache": Object {},
                  "_cellWidthCache": Object {},
                  "_columnCount": 0,
                  "_columnWidthCache": Object {},
                  "_defaultHeight": 30,
                  "_defaultWidth": 100,
                  "_hasFixedHeight": false,
                  "_hasFixedWidth": true,
                  "_keyMapper": [Function],
                  "_minHeight": 0,
                  "_minWidth": 0,
                  "_rowCount": 0,
                  "_rowHeightCache": Object {},
                  "columnWidth": [Function],
                  "rowHeight": [Function],
                }
              }
              estimatedColumnSize={100}
              estimatedRowSize={30}
              getScrollbarSize={[Function]}
              height={0}
              isScrollingOptOut={false}
              noContentRenderer={[Function]}
              noRowsRenderer={[Function]}
              onRowsRendered={[Function]}
              onScroll={[Function]}
              onScrollbarPresenceChange={[Function]}
              onSectionRendered={[Function]}
              overscanColumnCount={0}
              overscanIndicesGetter={[Function]}
              overscanRowCount={10}
              role="grid"
              rowCount={10}
              rowHeight={[Function]}
              rowRenderer={[Function]}
              scrollToAlignment="auto"
              scrollToColumn={-1}
              scrollToIndex={-1}
              scrollToRow={-1}
              scrollingResetTimeInterval={150}
              style={Object {}}
              tabIndex={0}
              width={0}
            >
              <div
                aria-label="grid"
                aria-readonly={true}
                className="ReactVirtualized__Grid ReactVirtualized__List"
                onScroll={[Function]}
                role="grid"
                style={
                  Object {
                    "WebkitOverflowScrolling": "touch",
                    "boxSizing": "border-box",
                    "direction": "ltr",
                    "height": 0,
                    "overflowX": "hidden",
                    "overflowY": "auto",
                    "position": "relative",
                    "width": 0,
                    "willChange": "transform",
                  }
                }
                tabIndex={0}
              />
            </Grid>
          </List>
        </div>
      </AutoSizer>
    </ListOptimizer>
  </div>
</SuggestionsList>
`;

exports[`SuggestionsList should run suggestionItemRenderer function correctly 1`] = `
<SuggestionsList
  allowMixingSuggestionsAndLoading={false}
  getItemProps={[Function]}
  highlightedIndex={1}
  inputValue=""
  isLoading={false}
  noSuggestionsPlaceholder="noSuggestionsPlaceholder"
  passDisabledToListItems={false}
  suggestionItemRenderer={[Function]}
  suggestionToString={[Function]}
  suggestions={
    Array [
      Object {
        "name": "Sun",
      },
      Object {
        "name": "Moon",
      },
      Object {
        "name": "Mercury",
      },
      Object {
        "name": "Venus",
      },
      Object {
        "name": "Earth",
      },
      Object {
        "name": "Mars",
      },
      Object {
        "name": "Jupiter",
      },
      Object {
        "name": "Saturn",
      },
      Object {
        "name": "Neptune",
      },
      Object {
        "disabled": true,
        "name": "Pluto",
      },
    ]
  }
  useOptimizeRender={false}
>
  <ListItem
    disabled={false}
    highlightContext="default"
    isHighlighted={false}
    isSelected={false}
    key="Sun"
    passDisabledToLi={false}
    style={Object {}}
  >
    <li
      className="ListItem"
      role="presentation"
      style={Object {}}
    >
      <span
        key=".0"
      >
        some item text
      </span>
    </li>
  </ListItem>
  <ListItem
    disabled={false}
    highlightContext="default"
    isHighlighted={true}
    isSelected={false}
    key="Moon"
    passDisabledToLi={false}
    style={Object {}}
  >
    <li
      className="ListItem ListItem--isHighlighted"
      role="presentation"
      style={Object {}}
    >
      <span
        key=".0"
      >
        some item text
      </span>
    </li>
  </ListItem>
  <ListItem
    disabled={false}
    highlightContext="default"
    isHighlighted={false}
    isSelected={false}
    key="Mercury"
    passDisabledToLi={false}
    style={Object {}}
  >
    <li
      className="ListItem"
      role="presentation"
      style={Object {}}
    >
      <span
        key=".0"
      >
        some item text
      </span>
    </li>
  </ListItem>
  <ListItem
    disabled={false}
    highlightContext="default"
    isHighlighted={false}
    isSelected={false}
    key="Venus"
    passDisabledToLi={false}
    style={Object {}}
  >
    <li
      className="ListItem"
      role="presentation"
      style={Object {}}
    >
      <span
        key=".0"
      >
        some item text
      </span>
    </li>
  </ListItem>
  <ListItem
    disabled={false}
    highlightContext="default"
    isHighlighted={false}
    isSelected={false}
    key="Earth"
    passDisabledToLi={false}
    style={Object {}}
  >
    <li
      className="ListItem"
      role="presentation"
      style={Object {}}
    >
      <span
        key=".0"
      >
        some item text
      </span>
    </li>
  </ListItem>
  <ListItem
    disabled={false}
    highlightContext="default"
    isHighlighted={false}
    isSelected={false}
    key="Mars"
    passDisabledToLi={false}
    style={Object {}}
  >
    <li
      className="ListItem"
      role="presentation"
      style={Object {}}
    >
      <span
        key=".0"
      >
        some item text
      </span>
    </li>
  </ListItem>
  <ListItem
    disabled={false}
    highlightContext="default"
    isHighlighted={false}
    isSelected={false}
    key="Jupiter"
    passDisabledToLi={false}
    style={Object {}}
  >
    <li
      className="ListItem"
      role="presentation"
      style={Object {}}
    >
      <span
        key=".0"
      >
        some item text
      </span>
    </li>
  </ListItem>
  <ListItem
    disabled={false}
    highlightContext="default"
    isHighlighted={false}
    isSelected={false}
    key="Saturn"
    passDisabledToLi={false}
    style={Object {}}
  >
    <li
      className="ListItem"
      role="presentation"
      style={Object {}}
    >
      <span
        key=".0"
      >
        some item text
      </span>
    </li>
  </ListItem>
  <ListItem
    disabled={false}
    highlightContext="default"
    isHighlighted={false}
    isSelected={false}
    key="Neptune"
    passDisabledToLi={false}
    style={Object {}}
  >
    <li
      className="ListItem"
      role="presentation"
      style={Object {}}
    >
      <span
        key=".0"
      >
        some item text
      </span>
    </li>
  </ListItem>
  <ListItem
    disabled={true}
    highlightContext="default"
    isHighlighted={false}
    isSelected={false}
    key="Pluto"
    passDisabledToLi={false}
    style={Object {}}
  >
    <li
      className="ListItem ListItem--disabled"
      role="presentation"
      style={Object {}}
    >
      <span
        key=".0"
      >
        some item text
      </span>
    </li>
  </ListItem>
</SuggestionsList>
`;
