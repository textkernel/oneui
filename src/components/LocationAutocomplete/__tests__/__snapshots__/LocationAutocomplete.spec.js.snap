// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<LocationAutocomplete/> that renders a location search field should not display country information in list 1`] = `
<LocationAutocomplete
  inputPlaceholder="Location..."
  noSuggestionsPlaceholder="No suggestions..."
  onError={[MockFunction]}
  onRemoveAllLocations={[MockFunction]}
  onSelectionChange={[MockFunction]}
>
  <Autosuggest
    clearTitle=""
    customListRender={[Function]}
    defaultValue=""
    iconNode={
      <FaMapMarkerAlt
        className="LocationAutocomplete__icon"
      />
    }
    inputPlaceholder="Location..."
    isFocused={false}
    isLoading={false}
    noSuggestionsPlaceholder="No suggestions..."
    onBlur={[Function]}
    onClearAllSelected={[MockFunction]}
    onInputValueChange={[Function]}
    onSelectionAdd={[Function]}
    selectedSuggestions={Array []}
    showClearButton={false}
    suggestionToString={[Function]}
    suggestions={Array []}
  >
    <SelectBase
      autoFocus={false}
      blurredRenderer={[Function]}
      clearInputAfterSelection={true}
      clearTitle=""
      defaultValue=""
      focusedRenderer={[Function]}
      highlightOnEmptyInput={false}
      inputRef={
        Object {
          "current": <input
            aria-autocomplete="list"
            aria-labelledby="downshift-10-label"
            autocomplete="off"
            class="Autosuggest__input"
            data-lpignore="true"
            placeholder="Location..."
            value=""
          />,
        }
      }
      keepExpandedAfterSelection={true}
      listRenderer={[Function]}
      onBlur={[Function]}
      onClearAllSelected={[MockFunction]}
      onInputValueChange={[Function]}
      onSelectionAdd={[Function]}
      showClearButton={false}
      suggestionToString={[Function]}
      suggestions={Array []}
    >
      <div
        className="SelectBase"
        defaultValue=""
      >
        <Downshift
          defaultHighlightedIndex={-1}
          defaultIsOpen={false}
          environment={[Window]}
          getA11yStatusMessage={[Function]}
          inputValue=""
          itemToString={[Function]}
          onChange={[Function]}
          onInputValueChange={[Function]}
          onOuterClick={[Function]}
          onSelect={[Function]}
          onStateChange={[Function]}
          onUserAction={[Function]}
          scrollIntoView={[Function]}
          selectedItemChanged={[Function]}
          stateReducer={[Function]}
          suppressRefError={false}
        >
          <div
            aria-expanded={false}
            aria-haspopup="listbox"
            aria-labelledby="downshift-10-label"
            aria-owns={null}
            className="SelectBase__main"
            role="combobox"
          >
            <FieldWrapper
              className="SelectBase__field"
              clearTooltipLabel=""
              isArrowUp={false}
              isFocused={false}
              onArrowClick={[Function]}
              onClear={[Function]}
              onClick={[Function]}
              showArrow={false}
              showClearButton={false}
            >
              <div
                className="FieldWrapper SelectBase__field"
                onClick={[Function]}
              >
                <div
                  className="FieldWrapper__content"
                >
                  <div
                    className="Autosuggest__wrapper"
                  >
                    <FaMapMarkerAlt
                      className="LocationAutocomplete__icon"
                    >
                      <IconBase
                        attr={
                          Object {
                            "viewBox": "0 0 384 512",
                          }
                        }
                        className="LocationAutocomplete__icon"
                      >
                        <svg
                          className="LocationAutocomplete__icon"
                          fill="currentColor"
                          height="1em"
                          stroke="currentColor"
                          strokeWidth="0"
                          style={
                            Object {
                              "color": undefined,
                            }
                          }
                          viewBox="0 0 384 512"
                          width="1em"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <path
                            d="M172.268 501.67C26.97 291.031 0 269.413 0 192 0 85.961 85.961 0 192 0s192 85.961 192 192c0 77.413-26.97 99.031-172.268 309.67-9.535 13.774-29.93 13.773-39.464 0zM192 272c44.183 0 80-35.817 80-80s-35.817-80-80-80-80 35.817-80 80 35.817 80 80 80z"
                            key="0"
                          />
                        </svg>
                      </IconBase>
                    </FaMapMarkerAlt>
                    <input
                      aria-activedescendant={null}
                      aria-autocomplete="list"
                      aria-controls={null}
                      aria-labelledby="downshift-10-label"
                      autoComplete="off"
                      className="Autosuggest__input"
                      data-lpignore={true}
                      onBlur={[Function]}
                      onChange={[Function]}
                      onFocus={[Function]}
                      onKeyDown={[Function]}
                      placeholder="Location..."
                      value=""
                    />
                  </div>
                  <List
                    aria-labelledby="downshift-10-label"
                    id="downshift-10-menu"
                    isControlledNavigation={true}
                    role="listbox"
                  >
                    <ul
                      aria-labelledby="downshift-10-label"
                      className="List"
                      id="downshift-10-menu"
                      role="listbox"
                    />
                  </List>
                </div>
              </div>
            </FieldWrapper>
          </div>
        </Downshift>
      </div>
    </SelectBase>
  </Autosuggest>
</LocationAutocomplete>
`;

exports[`<LocationAutocomplete/> that renders a location search field should pass predictions to AutosuggestDeprecated 1`] = `
<LocationAutocomplete
  inputPlaceholder="Location..."
  noSuggestionsPlaceholder="No suggestions..."
  onError={[MockFunction]}
  onRemoveAllLocations={[MockFunction]}
  onSelectionChange={[MockFunction]}
>
  <Autosuggest
    clearTitle=""
    customListRender={[Function]}
    defaultValue=""
    iconNode={
      <FaMapMarkerAlt
        className="LocationAutocomplete__icon"
      />
    }
    inputPlaceholder="Location..."
    isFocused={false}
    isLoading={false}
    noSuggestionsPlaceholder="No suggestions..."
    onBlur={[Function]}
    onClearAllSelected={[MockFunction]}
    onInputValueChange={[Function]}
    onSelectionAdd={[Function]}
    selectedSuggestions={
      Array [
        Object {
          "description": "Truro, UK",
          "id": "51b6747d060368917397ce3cc25abe2089302262",
          "matched_substrings": Array [
            Object {
              "length": 2,
              "offset": 0,
            },
          ],
          "place_id": "ChIJdRpa1XwQa0gRtAcdle9HY2E",
          "reference": "ChIJdRpa1XwQa0gRtAcdle9HY2E",
          "structured_formatting": Object {
            "main_text": "Truro",
            "main_text_matched_substrings": Array [
              Object {
                "length": 2,
                "offset": 0,
              },
            ],
            "secondary_text": "UK",
          },
          "terms": Array [
            Object {
              "offset": 0,
              "value": "Truro",
            },
            Object {
              "offset": 7,
              "value": "UK",
            },
          ],
          "types": Array [
            "locality",
            "political",
            "geocode",
          ],
        },
        Object {
          "description": "Trowbridge, UK",
          "id": "b10d478a406230745e98edd2d2a01f59097d5a59",
          "matched_substrings": Array [
            Object {
              "length": 2,
              "offset": 0,
            },
          ],
          "place_id": "ChIJM6W0Ewp9cUgRLXIknC4a-Pw",
          "reference": "ChIJM6W0Ewp9cUgRLXIknC4a-Pw",
          "structured_formatting": Object {
            "main_text": "Trowbridge",
            "main_text_matched_substrings": Array [
              Object {
                "length": 2,
                "offset": 0,
              },
            ],
            "secondary_text": "UK",
          },
          "terms": Array [
            Object {
              "offset": 0,
              "value": "Trowbridge",
            },
            Object {
              "offset": 12,
              "value": "UK",
            },
          ],
          "types": Array [
            "locality",
            "political",
            "geocode",
          ],
        },
        Object {
          "description": "Tring, UK",
          "id": "8b1f6899d3555c6aae3a2d383ed96c7649f3ccf8",
          "matched_substrings": Array [
            Object {
              "length": 2,
              "offset": 0,
            },
          ],
          "place_id": "ChIJ33SmFitYdkgR3-ErzH_p6Bw",
          "reference": "ChIJ33SmFitYdkgR3-ErzH_p6Bw",
          "structured_formatting": Object {
            "main_text": "Tring",
            "main_text_matched_substrings": Array [
              Object {
                "length": 2,
                "offset": 0,
              },
            ],
            "secondary_text": "UK",
          },
          "terms": Array [
            Object {
              "offset": 0,
              "value": "Tring",
            },
            Object {
              "offset": 7,
              "value": "UK",
            },
          ],
          "types": Array [
            "locality",
            "political",
            "geocode",
          ],
        },
        Object {
          "description": "Troon, UK",
          "id": "c563f4c69998a376dac8e3b4122067d782e752f7",
          "matched_substrings": Array [
            Object {
              "length": 2,
              "offset": 0,
            },
          ],
          "place_id": "ChIJxy8qU3jRiUgR-sKnFLHxiSM",
          "reference": "ChIJxy8qU3jRiUgR-sKnFLHxiSM",
          "structured_formatting": Object {
            "main_text": "Troon",
            "main_text_matched_substrings": Array [
              Object {
                "length": 2,
                "offset": 0,
              },
            ],
            "secondary_text": "UK",
          },
          "terms": Array [
            Object {
              "offset": 0,
              "value": "Troon",
            },
            Object {
              "offset": 7,
              "value": "UK",
            },
          ],
          "types": Array [
            "locality",
            "political",
            "geocode",
          ],
        },
        Object {
          "description": "Tredegar, UK",
          "id": "4dca94194f54dee0879b9d368379eb5d09ec838d",
          "matched_substrings": Array [
            Object {
              "length": 2,
              "offset": 0,
            },
          ],
          "place_id": "ChIJdQjXYyYkbkgRTRfZ8WAt6lI",
          "reference": "ChIJdQjXYyYkbkgRTRfZ8WAt6lI",
          "structured_formatting": Object {
            "main_text": "Tredegar",
            "main_text_matched_substrings": Array [
              Object {
                "length": 2,
                "offset": 0,
              },
            ],
            "secondary_text": "UK",
          },
          "terms": Array [
            Object {
              "offset": 0,
              "value": "Tredegar",
            },
            Object {
              "offset": 10,
              "value": "UK",
            },
          ],
          "types": Array [
            "locality",
            "political",
            "geocode",
          ],
        },
      ]
    }
    showClearButton={false}
    suggestionToString={[Function]}
    suggestions={
      Array [
        Object {
          "description": "Truro, UK",
          "id": "51b6747d060368917397ce3cc25abe2089302262",
          "matched_substrings": Array [
            Object {
              "length": 2,
              "offset": 0,
            },
          ],
          "place_id": "ChIJdRpa1XwQa0gRtAcdle9HY2E",
          "reference": "ChIJdRpa1XwQa0gRtAcdle9HY2E",
          "structured_formatting": Object {
            "main_text": "Truro",
            "main_text_matched_substrings": Array [
              Object {
                "length": 2,
                "offset": 0,
              },
            ],
            "secondary_text": "UK",
          },
          "terms": Array [
            Object {
              "offset": 0,
              "value": "Truro",
            },
            Object {
              "offset": 7,
              "value": "UK",
            },
          ],
          "types": Array [
            "locality",
            "political",
            "geocode",
          ],
        },
        Object {
          "description": "Trowbridge, UK",
          "id": "b10d478a406230745e98edd2d2a01f59097d5a59",
          "matched_substrings": Array [
            Object {
              "length": 2,
              "offset": 0,
            },
          ],
          "place_id": "ChIJM6W0Ewp9cUgRLXIknC4a-Pw",
          "reference": "ChIJM6W0Ewp9cUgRLXIknC4a-Pw",
          "structured_formatting": Object {
            "main_text": "Trowbridge",
            "main_text_matched_substrings": Array [
              Object {
                "length": 2,
                "offset": 0,
              },
            ],
            "secondary_text": "UK",
          },
          "terms": Array [
            Object {
              "offset": 0,
              "value": "Trowbridge",
            },
            Object {
              "offset": 12,
              "value": "UK",
            },
          ],
          "types": Array [
            "locality",
            "political",
            "geocode",
          ],
        },
        Object {
          "description": "Tring, UK",
          "id": "8b1f6899d3555c6aae3a2d383ed96c7649f3ccf8",
          "matched_substrings": Array [
            Object {
              "length": 2,
              "offset": 0,
            },
          ],
          "place_id": "ChIJ33SmFitYdkgR3-ErzH_p6Bw",
          "reference": "ChIJ33SmFitYdkgR3-ErzH_p6Bw",
          "structured_formatting": Object {
            "main_text": "Tring",
            "main_text_matched_substrings": Array [
              Object {
                "length": 2,
                "offset": 0,
              },
            ],
            "secondary_text": "UK",
          },
          "terms": Array [
            Object {
              "offset": 0,
              "value": "Tring",
            },
            Object {
              "offset": 7,
              "value": "UK",
            },
          ],
          "types": Array [
            "locality",
            "political",
            "geocode",
          ],
        },
        Object {
          "description": "Troon, UK",
          "id": "c563f4c69998a376dac8e3b4122067d782e752f7",
          "matched_substrings": Array [
            Object {
              "length": 2,
              "offset": 0,
            },
          ],
          "place_id": "ChIJxy8qU3jRiUgR-sKnFLHxiSM",
          "reference": "ChIJxy8qU3jRiUgR-sKnFLHxiSM",
          "structured_formatting": Object {
            "main_text": "Troon",
            "main_text_matched_substrings": Array [
              Object {
                "length": 2,
                "offset": 0,
              },
            ],
            "secondary_text": "UK",
          },
          "terms": Array [
            Object {
              "offset": 0,
              "value": "Troon",
            },
            Object {
              "offset": 7,
              "value": "UK",
            },
          ],
          "types": Array [
            "locality",
            "political",
            "geocode",
          ],
        },
        Object {
          "description": "Tredegar, UK",
          "id": "4dca94194f54dee0879b9d368379eb5d09ec838d",
          "matched_substrings": Array [
            Object {
              "length": 2,
              "offset": 0,
            },
          ],
          "place_id": "ChIJdQjXYyYkbkgRTRfZ8WAt6lI",
          "reference": "ChIJdQjXYyYkbkgRTRfZ8WAt6lI",
          "structured_formatting": Object {
            "main_text": "Tredegar",
            "main_text_matched_substrings": Array [
              Object {
                "length": 2,
                "offset": 0,
              },
            ],
            "secondary_text": "UK",
          },
          "terms": Array [
            Object {
              "offset": 0,
              "value": "Tredegar",
            },
            Object {
              "offset": 10,
              "value": "UK",
            },
          ],
          "types": Array [
            "locality",
            "political",
            "geocode",
          ],
        },
      ]
    }
  >
    <SelectBase
      autoFocus={false}
      blurredRenderer={[Function]}
      clearInputAfterSelection={true}
      clearTitle=""
      defaultValue=""
      focusedRenderer={[Function]}
      highlightOnEmptyInput={false}
      inputRef={
        Object {
          "current": <input
            aria-activedescendant="downshift-4-item-0"
            aria-autocomplete="list"
            aria-controls="downshift-4-menu"
            aria-labelledby="downshift-4-label"
            autocomplete="off"
            class="Autosuggest__input"
            data-lpignore="true"
            placeholder="Location..."
            value="Tonga"
          />,
        }
      }
      keepExpandedAfterSelection={true}
      listRenderer={[Function]}
      onBlur={[Function]}
      onClearAllSelected={[MockFunction]}
      onInputValueChange={[Function]}
      onSelectionAdd={[Function]}
      showClearButton={false}
      suggestionToString={[Function]}
      suggestions={
        Array [
          Object {
            "description": "Truro, UK",
            "id": "51b6747d060368917397ce3cc25abe2089302262",
            "matched_substrings": Array [
              Object {
                "length": 2,
                "offset": 0,
              },
            ],
            "place_id": "ChIJdRpa1XwQa0gRtAcdle9HY2E",
            "reference": "ChIJdRpa1XwQa0gRtAcdle9HY2E",
            "structured_formatting": Object {
              "main_text": "Truro",
              "main_text_matched_substrings": Array [
                Object {
                  "length": 2,
                  "offset": 0,
                },
              ],
              "secondary_text": "UK",
            },
            "terms": Array [
              Object {
                "offset": 0,
                "value": "Truro",
              },
              Object {
                "offset": 7,
                "value": "UK",
              },
            ],
            "types": Array [
              "locality",
              "political",
              "geocode",
            ],
          },
          Object {
            "description": "Trowbridge, UK",
            "id": "b10d478a406230745e98edd2d2a01f59097d5a59",
            "matched_substrings": Array [
              Object {
                "length": 2,
                "offset": 0,
              },
            ],
            "place_id": "ChIJM6W0Ewp9cUgRLXIknC4a-Pw",
            "reference": "ChIJM6W0Ewp9cUgRLXIknC4a-Pw",
            "structured_formatting": Object {
              "main_text": "Trowbridge",
              "main_text_matched_substrings": Array [
                Object {
                  "length": 2,
                  "offset": 0,
                },
              ],
              "secondary_text": "UK",
            },
            "terms": Array [
              Object {
                "offset": 0,
                "value": "Trowbridge",
              },
              Object {
                "offset": 12,
                "value": "UK",
              },
            ],
            "types": Array [
              "locality",
              "political",
              "geocode",
            ],
          },
          Object {
            "description": "Tring, UK",
            "id": "8b1f6899d3555c6aae3a2d383ed96c7649f3ccf8",
            "matched_substrings": Array [
              Object {
                "length": 2,
                "offset": 0,
              },
            ],
            "place_id": "ChIJ33SmFitYdkgR3-ErzH_p6Bw",
            "reference": "ChIJ33SmFitYdkgR3-ErzH_p6Bw",
            "structured_formatting": Object {
              "main_text": "Tring",
              "main_text_matched_substrings": Array [
                Object {
                  "length": 2,
                  "offset": 0,
                },
              ],
              "secondary_text": "UK",
            },
            "terms": Array [
              Object {
                "offset": 0,
                "value": "Tring",
              },
              Object {
                "offset": 7,
                "value": "UK",
              },
            ],
            "types": Array [
              "locality",
              "political",
              "geocode",
            ],
          },
          Object {
            "description": "Troon, UK",
            "id": "c563f4c69998a376dac8e3b4122067d782e752f7",
            "matched_substrings": Array [
              Object {
                "length": 2,
                "offset": 0,
              },
            ],
            "place_id": "ChIJxy8qU3jRiUgR-sKnFLHxiSM",
            "reference": "ChIJxy8qU3jRiUgR-sKnFLHxiSM",
            "structured_formatting": Object {
              "main_text": "Troon",
              "main_text_matched_substrings": Array [
                Object {
                  "length": 2,
                  "offset": 0,
                },
              ],
              "secondary_text": "UK",
            },
            "terms": Array [
              Object {
                "offset": 0,
                "value": "Troon",
              },
              Object {
                "offset": 7,
                "value": "UK",
              },
            ],
            "types": Array [
              "locality",
              "political",
              "geocode",
            ],
          },
          Object {
            "description": "Tredegar, UK",
            "id": "4dca94194f54dee0879b9d368379eb5d09ec838d",
            "matched_substrings": Array [
              Object {
                "length": 2,
                "offset": 0,
              },
            ],
            "place_id": "ChIJdQjXYyYkbkgRTRfZ8WAt6lI",
            "reference": "ChIJdQjXYyYkbkgRTRfZ8WAt6lI",
            "structured_formatting": Object {
              "main_text": "Tredegar",
              "main_text_matched_substrings": Array [
                Object {
                  "length": 2,
                  "offset": 0,
                },
              ],
              "secondary_text": "UK",
            },
            "terms": Array [
              Object {
                "offset": 0,
                "value": "Tredegar",
              },
              Object {
                "offset": 10,
                "value": "UK",
              },
            ],
            "types": Array [
              "locality",
              "political",
              "geocode",
            ],
          },
        ]
      }
    >
      <div
        className="SelectBase"
        defaultValue=""
      >
        <Downshift
          defaultHighlightedIndex={-1}
          defaultIsOpen={false}
          environment={[Window]}
          getA11yStatusMessage={[Function]}
          inputValue="Tonga"
          itemToString={[Function]}
          onChange={[Function]}
          onInputValueChange={[Function]}
          onOuterClick={[Function]}
          onSelect={[Function]}
          onStateChange={[Function]}
          onUserAction={[Function]}
          scrollIntoView={[Function]}
          selectedItemChanged={[Function]}
          stateReducer={[Function]}
          suppressRefError={false}
        >
          <div
            aria-expanded={true}
            aria-haspopup="listbox"
            aria-labelledby="downshift-4-label"
            aria-owns="downshift-4-menu"
            className="SelectBase__main SelectBase__main--focused"
            role="combobox"
          >
            <FieldWrapper
              className="SelectBase__field"
              clearTooltipLabel=""
              isArrowUp={true}
              isFocused={true}
              onArrowClick={[Function]}
              onClear={[Function]}
              onClick={[Function]}
              showArrow={false}
              showClearButton={false}
            >
              <div
                className="FieldWrapper FieldWrapper--isFocused SelectBase__field"
                onClick={[Function]}
              >
                <div
                  className="FieldWrapper__content"
                >
                  <div
                    className="Autosuggest__wrapper Autosuggest__wrapper--isFocused"
                  >
                    <SuggestionTag
                      key="Truro, UK"
                      onClick={[Function]}
                    >
                      <div
                        className="SuggestionTag"
                      >
                        <div
                          className="SuggestionTag__label"
                          title="Truro, UK"
                        >
                          Truro, UK
                        </div>
                        <button
                          className="SuggestionTag__button"
                          onClick={[Function]}
                          type="button"
                        >
                          <MdClose>
                            <IconBase
                              attr={
                                Object {
                                  "viewBox": "0 0 24 24",
                                }
                              }
                            >
                              <svg
                                fill="currentColor"
                                height="1em"
                                stroke="currentColor"
                                strokeWidth="0"
                                style={
                                  Object {
                                    "color": undefined,
                                  }
                                }
                                viewBox="0 0 24 24"
                                width="1em"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <path
                                  d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
                                  key="0"
                                />
                              </svg>
                            </IconBase>
                          </MdClose>
                        </button>
                      </div>
                    </SuggestionTag>
                    <SuggestionTag
                      key="Trowbridge, UK"
                      onClick={[Function]}
                    >
                      <div
                        className="SuggestionTag"
                      >
                        <div
                          className="SuggestionTag__label"
                          title="Trowbridge, UK"
                        >
                          Trowbridge, UK
                        </div>
                        <button
                          className="SuggestionTag__button"
                          onClick={[Function]}
                          type="button"
                        >
                          <MdClose>
                            <IconBase
                              attr={
                                Object {
                                  "viewBox": "0 0 24 24",
                                }
                              }
                            >
                              <svg
                                fill="currentColor"
                                height="1em"
                                stroke="currentColor"
                                strokeWidth="0"
                                style={
                                  Object {
                                    "color": undefined,
                                  }
                                }
                                viewBox="0 0 24 24"
                                width="1em"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <path
                                  d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
                                  key="0"
                                />
                              </svg>
                            </IconBase>
                          </MdClose>
                        </button>
                      </div>
                    </SuggestionTag>
                    <SuggestionTag
                      key="Tring, UK"
                      onClick={[Function]}
                    >
                      <div
                        className="SuggestionTag"
                      >
                        <div
                          className="SuggestionTag__label"
                          title="Tring, UK"
                        >
                          Tring, UK
                        </div>
                        <button
                          className="SuggestionTag__button"
                          onClick={[Function]}
                          type="button"
                        >
                          <MdClose>
                            <IconBase
                              attr={
                                Object {
                                  "viewBox": "0 0 24 24",
                                }
                              }
                            >
                              <svg
                                fill="currentColor"
                                height="1em"
                                stroke="currentColor"
                                strokeWidth="0"
                                style={
                                  Object {
                                    "color": undefined,
                                  }
                                }
                                viewBox="0 0 24 24"
                                width="1em"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <path
                                  d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
                                  key="0"
                                />
                              </svg>
                            </IconBase>
                          </MdClose>
                        </button>
                      </div>
                    </SuggestionTag>
                    <SuggestionTag
                      key="Troon, UK"
                      onClick={[Function]}
                    >
                      <div
                        className="SuggestionTag"
                      >
                        <div
                          className="SuggestionTag__label"
                          title="Troon, UK"
                        >
                          Troon, UK
                        </div>
                        <button
                          className="SuggestionTag__button"
                          onClick={[Function]}
                          type="button"
                        >
                          <MdClose>
                            <IconBase
                              attr={
                                Object {
                                  "viewBox": "0 0 24 24",
                                }
                              }
                            >
                              <svg
                                fill="currentColor"
                                height="1em"
                                stroke="currentColor"
                                strokeWidth="0"
                                style={
                                  Object {
                                    "color": undefined,
                                  }
                                }
                                viewBox="0 0 24 24"
                                width="1em"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <path
                                  d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
                                  key="0"
                                />
                              </svg>
                            </IconBase>
                          </MdClose>
                        </button>
                      </div>
                    </SuggestionTag>
                    <SuggestionTag
                      key="Tredegar, UK"
                      onClick={[Function]}
                    >
                      <div
                        className="SuggestionTag"
                      >
                        <div
                          className="SuggestionTag__label"
                          title="Tredegar, UK"
                        >
                          Tredegar, UK
                        </div>
                        <button
                          className="SuggestionTag__button"
                          onClick={[Function]}
                          type="button"
                        >
                          <MdClose>
                            <IconBase
                              attr={
                                Object {
                                  "viewBox": "0 0 24 24",
                                }
                              }
                            >
                              <svg
                                fill="currentColor"
                                height="1em"
                                stroke="currentColor"
                                strokeWidth="0"
                                style={
                                  Object {
                                    "color": undefined,
                                  }
                                }
                                viewBox="0 0 24 24"
                                width="1em"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <path
                                  d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
                                  key="0"
                                />
                              </svg>
                            </IconBase>
                          </MdClose>
                        </button>
                      </div>
                    </SuggestionTag>
                    <FaMapMarkerAlt
                      className="LocationAutocomplete__icon"
                    >
                      <IconBase
                        attr={
                          Object {
                            "viewBox": "0 0 384 512",
                          }
                        }
                        className="LocationAutocomplete__icon"
                      >
                        <svg
                          className="LocationAutocomplete__icon"
                          fill="currentColor"
                          height="1em"
                          stroke="currentColor"
                          strokeWidth="0"
                          style={
                            Object {
                              "color": undefined,
                            }
                          }
                          viewBox="0 0 384 512"
                          width="1em"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <path
                            d="M172.268 501.67C26.97 291.031 0 269.413 0 192 0 85.961 85.961 0 192 0s192 85.961 192 192c0 77.413-26.97 99.031-172.268 309.67-9.535 13.774-29.93 13.773-39.464 0zM192 272c44.183 0 80-35.817 80-80s-35.817-80-80-80-80 35.817-80 80 35.817 80 80 80z"
                            key="0"
                          />
                        </svg>
                      </IconBase>
                    </FaMapMarkerAlt>
                    <input
                      aria-activedescendant="downshift-4-item-0"
                      aria-autocomplete="list"
                      aria-controls="downshift-4-menu"
                      aria-labelledby="downshift-4-label"
                      autoComplete="off"
                      className="Autosuggest__input"
                      data-lpignore={true}
                      onBlur={[Function]}
                      onChange={[Function]}
                      onFocus={[Function]}
                      onKeyDown={[Function]}
                      placeholder="Location..."
                      value="Tonga"
                    />
                  </div>
                  <List
                    aria-labelledby="downshift-4-label"
                    className="SelectBase__list--focused"
                    id="downshift-4-menu"
                    isControlledNavigation={true}
                    role="listbox"
                  >
                    <ul
                      aria-labelledby="downshift-4-label"
                      className="List SelectBase__list--focused"
                      id="downshift-4-menu"
                      role="listbox"
                    >
                      <img
                        alt="Powered by Google"
                        className="LocationAutocomplete__poweredByGoogleImage"
                        data-list-exception={true}
                        key=".$powered by google logo"
                        src="test-file-stub"
                        srcSet="test-file-stub, test-file-stub 2x, test-file-stub 3x"
                      />
                      <ListItem
                        aria-selected={true}
                        className="List__item"
                        id="downshift-4-item-0"
                        isHighlighted={true}
                        key=".$Truro, UK"
                        onClick={[Function]}
                        onMouseDown={[Function]}
                        onMouseMove={[Function]}
                        role="option"
                      >
                        <li
                          aria-selected={true}
                          className="ListItem ListItem--isHighlighted ListItem--clickable List__item"
                          id="downshift-4-item-0"
                          onClick={[Function]}
                          onMouseDown={[Function]}
                          onMouseMove={[Function]}
                          role="option"
                        >
                          <MarkedText
                            inline={true}
                            key=".0"
                          >
                            <Text
                              inline={true}
                            >
                              <span>
                                Truro
                              </span>
                            </Text>
                          </MarkedText>
                        </li>
                      </ListItem>
                      <ListItem
                        aria-selected={false}
                        className="List__item"
                        id="downshift-4-item-1"
                        isHighlighted={false}
                        key=".$Trowbridge, UK"
                        onClick={[Function]}
                        onMouseDown={[Function]}
                        onMouseMove={[Function]}
                        role="option"
                      >
                        <li
                          aria-selected={false}
                          className="ListItem ListItem--clickable List__item"
                          id="downshift-4-item-1"
                          onClick={[Function]}
                          onMouseDown={[Function]}
                          onMouseMove={[Function]}
                          role="option"
                        >
                          <MarkedText
                            inline={true}
                            key=".0"
                          >
                            <Text
                              inline={true}
                            >
                              <span>
                                Trowbridge
                              </span>
                            </Text>
                          </MarkedText>
                        </li>
                      </ListItem>
                      <ListItem
                        aria-selected={false}
                        className="List__item"
                        id="downshift-4-item-2"
                        isHighlighted={false}
                        key=".$Tring, UK"
                        onClick={[Function]}
                        onMouseDown={[Function]}
                        onMouseMove={[Function]}
                        role="option"
                      >
                        <li
                          aria-selected={false}
                          className="ListItem ListItem--clickable List__item"
                          id="downshift-4-item-2"
                          onClick={[Function]}
                          onMouseDown={[Function]}
                          onMouseMove={[Function]}
                          role="option"
                        >
                          <MarkedText
                            inline={true}
                            key=".0"
                          >
                            <Text
                              inline={true}
                            >
                              <span>
                                Tring
                              </span>
                            </Text>
                          </MarkedText>
                        </li>
                      </ListItem>
                      <ListItem
                        aria-selected={false}
                        className="List__item"
                        id="downshift-4-item-3"
                        isHighlighted={false}
                        key=".$Troon, UK"
                        onClick={[Function]}
                        onMouseDown={[Function]}
                        onMouseMove={[Function]}
                        role="option"
                      >
                        <li
                          aria-selected={false}
                          className="ListItem ListItem--clickable List__item"
                          id="downshift-4-item-3"
                          onClick={[Function]}
                          onMouseDown={[Function]}
                          onMouseMove={[Function]}
                          role="option"
                        >
                          <MarkedText
                            inline={true}
                            key=".0"
                          >
                            <Text
                              inline={true}
                            >
                              <span>
                                Troon
                              </span>
                            </Text>
                          </MarkedText>
                        </li>
                      </ListItem>
                      <ListItem
                        aria-selected={false}
                        className="List__item"
                        id="downshift-4-item-4"
                        isHighlighted={false}
                        key=".$Tredegar, UK"
                        onClick={[Function]}
                        onMouseDown={[Function]}
                        onMouseMove={[Function]}
                        role="option"
                      >
                        <li
                          aria-selected={false}
                          className="ListItem ListItem--clickable List__item"
                          id="downshift-4-item-4"
                          onClick={[Function]}
                          onMouseDown={[Function]}
                          onMouseMove={[Function]}
                          role="option"
                        >
                          <MarkedText
                            inline={true}
                            key=".0"
                          >
                            <Text
                              inline={true}
                            >
                              <span>
                                Tredegar
                              </span>
                            </Text>
                          </MarkedText>
                        </li>
                      </ListItem>
                    </ul>
                  </List>
                </div>
              </div>
            </FieldWrapper>
          </div>
        </Downshift>
      </div>
    </SelectBase>
  </Autosuggest>
</LocationAutocomplete>
`;

exports[`<LocationAutocomplete/> that renders a location search field should render with minimal props 1`] = `
<LocationAutocomplete
  inputPlaceholder="Location..."
  noSuggestionsPlaceholder="No suggestions..."
  onError={[MockFunction]}
  onRemoveAllLocations={[MockFunction]}
  onSelectionChange={[MockFunction]}
>
  <Autosuggest
    clearTitle=""
    customListRender={[Function]}
    defaultValue=""
    iconNode={
      <FaMapMarkerAlt
        className="LocationAutocomplete__icon"
      />
    }
    inputPlaceholder="Location..."
    isFocused={false}
    isLoading={false}
    noSuggestionsPlaceholder="No suggestions..."
    onBlur={[Function]}
    onClearAllSelected={[MockFunction]}
    onInputValueChange={[Function]}
    onSelectionAdd={[Function]}
    selectedSuggestions={Array []}
    showClearButton={false}
    suggestionToString={[Function]}
    suggestions={Array []}
  >
    <SelectBase
      autoFocus={false}
      blurredRenderer={[Function]}
      clearInputAfterSelection={true}
      clearTitle=""
      defaultValue=""
      focusedRenderer={[Function]}
      highlightOnEmptyInput={false}
      inputRef={
        Object {
          "current": <input
            aria-autocomplete="list"
            aria-labelledby="downshift-0-label"
            autocomplete="off"
            class="Autosuggest__input"
            data-lpignore="true"
            placeholder="Location..."
            value=""
          />,
        }
      }
      keepExpandedAfterSelection={true}
      listRenderer={[Function]}
      onBlur={[Function]}
      onClearAllSelected={[MockFunction]}
      onInputValueChange={[Function]}
      onSelectionAdd={[Function]}
      showClearButton={false}
      suggestionToString={[Function]}
      suggestions={Array []}
    >
      <div
        className="SelectBase"
        defaultValue=""
      >
        <Downshift
          defaultHighlightedIndex={-1}
          defaultIsOpen={false}
          environment={[Window]}
          getA11yStatusMessage={[Function]}
          inputValue=""
          itemToString={[Function]}
          onChange={[Function]}
          onInputValueChange={[Function]}
          onOuterClick={[Function]}
          onSelect={[Function]}
          onStateChange={[Function]}
          onUserAction={[Function]}
          scrollIntoView={[Function]}
          selectedItemChanged={[Function]}
          stateReducer={[Function]}
          suppressRefError={false}
        >
          <div
            aria-expanded={false}
            aria-haspopup="listbox"
            aria-labelledby="downshift-0-label"
            aria-owns={null}
            className="SelectBase__main"
            role="combobox"
          >
            <FieldWrapper
              className="SelectBase__field"
              clearTooltipLabel=""
              isArrowUp={false}
              isFocused={false}
              onArrowClick={[Function]}
              onClear={[Function]}
              onClick={[Function]}
              showArrow={false}
              showClearButton={false}
            >
              <div
                className="FieldWrapper SelectBase__field"
                onClick={[Function]}
              >
                <div
                  className="FieldWrapper__content"
                >
                  <div
                    className="Autosuggest__wrapper"
                  >
                    <FaMapMarkerAlt
                      className="LocationAutocomplete__icon"
                    >
                      <IconBase
                        attr={
                          Object {
                            "viewBox": "0 0 384 512",
                          }
                        }
                        className="LocationAutocomplete__icon"
                      >
                        <svg
                          className="LocationAutocomplete__icon"
                          fill="currentColor"
                          height="1em"
                          stroke="currentColor"
                          strokeWidth="0"
                          style={
                            Object {
                              "color": undefined,
                            }
                          }
                          viewBox="0 0 384 512"
                          width="1em"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <path
                            d="M172.268 501.67C26.97 291.031 0 269.413 0 192 0 85.961 85.961 0 192 0s192 85.961 192 192c0 77.413-26.97 99.031-172.268 309.67-9.535 13.774-29.93 13.773-39.464 0zM192 272c44.183 0 80-35.817 80-80s-35.817-80-80-80-80 35.817-80 80 35.817 80 80 80z"
                            key="0"
                          />
                        </svg>
                      </IconBase>
                    </FaMapMarkerAlt>
                    <input
                      aria-activedescendant={null}
                      aria-autocomplete="list"
                      aria-controls={null}
                      aria-labelledby="downshift-0-label"
                      autoComplete="off"
                      className="Autosuggest__input"
                      data-lpignore={true}
                      onBlur={[Function]}
                      onChange={[Function]}
                      onFocus={[Function]}
                      onKeyDown={[Function]}
                      placeholder="Location..."
                      value=""
                    />
                  </div>
                  <List
                    aria-labelledby="downshift-0-label"
                    id="downshift-0-menu"
                    isControlledNavigation={true}
                    role="listbox"
                  >
                    <ul
                      aria-labelledby="downshift-0-label"
                      className="List"
                      id="downshift-0-menu"
                      role="listbox"
                    />
                  </List>
                </div>
              </div>
            </FieldWrapper>
          </div>
        </Downshift>
      </div>
    </SelectBase>
  </Autosuggest>
</LocationAutocomplete>
`;
