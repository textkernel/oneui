@use "sass:map";
$contexts: (primary, secondary, critical, inverted);

$contextMap: (
    'secondary': 'neutral',
    'primary': 'brand',
    'critical': 'critical',
    'inverted': 'inverted'
);

@keyframes rotate {
    100% {
        transform: rotate(360deg);
    }
}

@keyframes dash {
    0% {
        stroke-dasharray: 1, 150;
        stroke-dashoffset: 0;
    }
    50% {
        stroke-dasharray: 90, 150;
        stroke-dashoffset: -35;
    }
    100% {
        stroke-dasharray: 90, 150;
        stroke-dashoffset: -124;
    }
}

@mixin center() {
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}

.LoadingSpinner {
    display: inline-flex;
    flex-direction: column;
    align-items: center;

    &__svg {
        animation: rotate 2s linear infinite;
        width: 48px;
        height: 48px;
        display: block;
    }

    &__path {
        stroke: var(--color-primary-50);
        stroke-dasharray: 1, 150;
        stroke-dashoffset: 0;
        stroke-linecap: round;
        animation: dash 1.5s ease-in-out infinite;
        transition: stroke var(--transition-duration);
        @each $context in $contexts {
            &--context_#{ $context } {
                $mappedContext: map.get($contextMap, $context);
                @if ($mappedContext == 'inverted') {
                    stroke: var(--color-icon-inverse);
                } @else {
                    stroke: var(--color-icon-#{$mappedContext}-disabled);
                }
            }  
        }
    }

    &__label {
        display: block;
        margin-top: var(--space-100);
    }

    &--centerIn {
        &_parent {
            position: absolute;
            @include center();
        }
        &_viewport {
            position: fixed;
            @include center();
        }
    }

    &--hidden {
        display: none;
    }
}
