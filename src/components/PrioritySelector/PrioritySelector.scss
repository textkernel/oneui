@use 'sass:map';
@mixin common-button-style(
    $hoverColor: var(--color-background-neutral-subtlest-hover),
    $activeColor: var(--color-background-neutral-subtlest-pressed)
) {
    & {
        width: var(--space-400);
        height: var(--space-400);
        align-items: center;
        background-color: var(--transparent);
        cursor: pointer;
        display: flex;
        flex-shrink: 0;
        justify-content: center;
    }
    &:hover:not([disabled]) {
        background-color: $hoverColor;
    }
    &:active:not([disabled]) {
        background-color: $activeColor;
    }
    &[disabled] {
        cursor: not-allowed;
    }
}
@mixin selected-state(
    $selectedColor: var(--color-background-selected-subtlest-default),
    $hoverColor: var(--color-background-selected-subtlest-hover),
    $activeColor: var(--color-background-selected-subtlest-pressed)
) {
    & {
        background-color: $selectedColor;
    }
    &:hover:not([disabled]) {
        background-color: $hoverColor;
    }
    &:active:not([disabled]) {
        background-color: $activeColor;
    }
    &[disabled] {
        background-color: $selectedColor;
    }
}
$icon-status-colors: (
    mandatory: (
        normal: var(--color-icon-success-default),
        disabled: var(--color-icon-success-disabled),
    ),
    important: (
        normal: var(--color-icon-caution-default),
        disabled: var(--color-icon-caution-disabled),
    ),
    optional: (
        normal: var(--color-icon-subtle),
        disabled: var(--color-icon-disabled),
    ),
    exclude: (
        normal: var(--color-icon-critical-default),
        disabled: var(--color-icon-critical-disabled),
    ),
);
.PrioritySelector {
    width: 100%;
    @each $status, $colors in $icon-status-colors {
        &--#{$status} {
            fill: map.get($colors, normal);
            &[disabled] {
                fill: map.get($colors, disabled);
            }
        }
    }

    &__icon {
        outline: none;
        min-height: 20px;
        min-width: 20px;
        @each $status, $colors in $icon-status-colors {
            &--#{$status} {
                fill: map.get($colors, normal);
                &[disabled] {
                    fill: map.get($colors, disabled);
                }
            }
        }
    }
    &__priorityButton--isSelected,
    &__optionButton--isSelected {
        @include selected-state();
    }

    &__badgeListItem {
        display: flex;
        align-items: center;
        justify-content: flex-start;
        gap: var(--space-100);
    }
    &__badgeDropdownList {
        max-width: 400px;
        border-radius: var(--space-100);
        overflow: hidden;
        background-color: white;

        &--fixedWidth{
            width: 232px;
        }
    }

}




