// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`LocationSelectorDialog component should render correctly 1`] = `
<LocationSelectorDialog
  country="NL"
  doneLabel="doneLabel"
  getMarkers={[Function]}
  inputPlaceholder="inputPlaceholder"
  maxRadius={100}
  minRadius={1}
  noSuggestionsPlaceholder="noSuggestionsPlaceholder"
  onAddLocation={[MockFunction]}
  onCloseModal={[MockFunction]}
  onLocationAutocompleteError={[MockFunction]}
  onRemoveAllLocations={[MockFunction]}
  onRemoveLocation={[MockFunction]}
  onUpdateLocation={[MockFunction]}
  placeTypes={
    Array [
      "(regions)",
    ]
  }
  radiusStep={1}
  renderRadiusLabel={[Function]}
  selectedLocations={
    Array [
      Object {
        "center": Object {
          "lat": 52.3666969,
          "lng": 4.894539799999961,
        },
        "description": "Amsterdam",
        "id": "ajdo-219a-j19v-0491",
        "radius": 42,
        "sliderLabel": "42km",
      },
      Object {
        "center": Object {
          "lat": 52.09073739999999,
          "lng": 5.121420100000023,
        },
        "description": "Utrecht",
        "id": "ajdo-219a-j19v-0492",
        "radius": 20,
        "sliderLabel": "20km",
      },
    ]
  }
  showCountryInSuggestions={true}
>
  <div
    className="LocationSelectorDialog__inputLine"
    onKeyDown={[Function]}
    role="presentation"
  >
    <LocationAutocomplete
      className="LocationSelectorDialog__searchField"
      country="NL"
      defaultInputValue=""
      hidePoweredByGoogleLogo={true}
      inputPlaceholder="inputPlaceholder"
      inputRef={
        Object {
          "current": <input
            aria-autocomplete="list"
            aria-labelledby="downshift-0-label"
            autocomplete="off"
            class="Autosuggest__input"
            data-lpignore="true"
            placeholder="inputPlaceholder"
            value=""
          />,
        }
      }
      isFocused={true}
      noSuggestionsPlaceholder="noSuggestionsPlaceholder"
      onError={[MockFunction]}
      onRemoveAllLocations={[MockFunction]}
      onSelectionChange={[Function]}
      placeTypes={
        Array [
          "(regions)",
        ]
      }
      showCountryInSuggestions={true}
      singleLocation={false}
    >
      <Autosuggest
        className="LocationSelectorDialog__searchField"
        clearTitle=""
        defaultInputValue=""
        iconnode={
          <FaMapMarkerAlt
            className="LocationAutocomplete__icon"
          />
        }
        inputPlaceholder="inputPlaceholder"
        inputRef={
          Object {
            "current": <input
              aria-autocomplete="list"
              aria-labelledby="downshift-0-label"
              autocomplete="off"
              class="Autosuggest__input"
              data-lpignore="true"
              placeholder="inputPlaceholder"
              value=""
            />,
          }
        }
        isFocused={true}
        isLoading={false}
        listRenderer={[Function]}
        noSuggestionsPlaceholder="noSuggestionsPlaceholder"
        onBlur={[Function]}
        onClearAllSelected={[MockFunction]}
        onInputValueChange={[Function]}
        onSelectionChange={[Function]}
        saveSelectedValueToInput={false}
        showClearButton={false}
        suggestionToString={[Function]}
        suggestions={Array []}
      >
        <SelectBase
          blurredRenderer={[Function]}
          className="LocationSelectorDialog__searchField"
          clearInputAfterSelection={true}
          clearTitle=""
          defaultInputValue=""
          focusedRenderer={[Function]}
          highlightOnEmptyInput={false}
          iconnode={
            <FaMapMarkerAlt
              className="LocationAutocomplete__icon"
            />
          }
          inputRef={
            Object {
              "current": <input
                aria-autocomplete="list"
                aria-labelledby="downshift-0-label"
                autocomplete="off"
                class="Autosuggest__input"
                data-lpignore="true"
                placeholder="inputPlaceholder"
                value=""
              />,
            }
          }
          isFocused={true}
          keepExpandedAfterSelection={true}
          listRenderer={[Function]}
          onBlur={[Function]}
          onClearAllSelected={[MockFunction]}
          onInputValueChange={[Function]}
          onSelectionChange={[Function]}
          saveSelectedValueToInput={false}
          showClearButton={false}
          suggestionToString={[Function]}
          suggestions={Array []}
        >
          <div
            className="SelectBase LocationSelectorDialog__searchField"
            defaultInputValue=""
            iconnode={
              <FaMapMarkerAlt
                className="LocationAutocomplete__icon"
              />
            }
            isFocused={true}
            onSelectionChange={[Function]}
            saveSelectedValueToInput={false}
          >
            <Downshift
              defaultHighlightedIndex={-1}
              defaultIsOpen={false}
              environment={[Window]}
              getA11yStatusMessage={[Function]}
              inputValue=""
              itemToString={[Function]}
              onChange={[Function]}
              onInputValueChange={[Function]}
              onOuterClick={[Function]}
              onSelect={[Function]}
              onStateChange={[Function]}
              onUserAction={[Function]}
              scrollIntoView={[Function]}
              selectedItemChanged={[Function]}
              stateReducer={[Function]}
              suppressRefError={false}
            >
              <div
                aria-expanded={false}
                aria-haspopup="listbox"
                aria-labelledby="downshift-0-label"
                aria-owns={null}
                className="SelectBase__main"
                role="combobox"
              >
                <FieldWrapper
                  className="SelectBase__field"
                  clearTooltipLabel=""
                  isArrowUp={false}
                  isFocused={false}
                  onArrowClick={[Function]}
                  onClear={[Function]}
                  onClick={[Function]}
                  showArrow={false}
                  showClearButton={false}
                >
                  <div
                    className="FieldWrapper SelectBase__field"
                    onClick={[Function]}
                  >
                    <div
                      className="FieldWrapper__content"
                    >
                      <div
                        className="Autosuggest__wrapper"
                      >
                        <input
                          aria-activedescendant={null}
                          aria-autocomplete="list"
                          aria-controls={null}
                          aria-labelledby="downshift-0-label"
                          autoComplete="off"
                          className="Autosuggest__input"
                          data-lpignore={true}
                          onBlur={[Function]}
                          onChange={[Function]}
                          onFocus={[Function]}
                          onKeyDown={[Function]}
                          placeholder="inputPlaceholder"
                          value=""
                        />
                      </div>
                      <List
                        aria-labelledby="downshift-0-label"
                        id="downshift-0-menu"
                        isControlledNavigation={true}
                        role="listbox"
                      >
                        <ul
                          aria-labelledby="downshift-0-label"
                          className="List"
                          id="downshift-0-menu"
                          role="listbox"
                        />
                      </List>
                    </div>
                  </div>
                </FieldWrapper>
              </div>
            </Downshift>
          </div>
        </SelectBase>
      </Autosuggest>
    </LocationAutocomplete>
    <Button
      className="LocationSelectorDialog__button"
      isPrimary={true}
      onClick={[MockFunction]}
    >
      <button
        className="Button Button--isPrimary LocationSelectorDialog__button"
        disabled={false}
        onClick={[MockFunction]}
        type="button"
      >
        doneLabel
      </button>
    </Button>
  </div>
  <div
    className="LocationSelectorDialog__locationsWrapper"
  >
    <ul
      className="LocationSelectorDialog__locationCardsContainer"
    >
      <LocationCard
        As="li"
        className="LocationSelectorDialog__locationCard"
        distanceRadius={42}
        key="ajdo-219a-j19v-0491"
        locationId="ajdo-219a-j19v-0491"
        locationTitle="Amsterdam"
        maxRadius={100}
        minRadius={1}
        onDelete={[Function]}
        onRadiusChange={[MockFunction]}
        radiusStep={1}
        sliderLabel="+ 42 km"
      >
        <li
          className="LocationCard LocationSelectorDialog__locationCard"
        >
          <div
            className="LocationCard__header"
          >
            <Text
              className="LocationCard__title"
              size="large"
              title="Amsterdam"
            >
              <p
                className="Text--size_large LocationCard__title"
                title="Amsterdam"
              >
                Amsterdam
              </p>
            </Text>
            <button
              className="LocationCard__deleteButton"
              onClick={[Function]}
              type="button"
            >
              Ã—
            </button>
          </div>
        </li>
      </LocationCard>
      <LocationCard
        As="li"
        className="LocationSelectorDialog__locationCard"
        distanceRadius={20}
        key="ajdo-219a-j19v-0492"
        locationId="ajdo-219a-j19v-0492"
        locationTitle="Utrecht"
        maxRadius={100}
        minRadius={1}
        onDelete={[Function]}
        onRadiusChange={[MockFunction]}
        radiusStep={1}
        sliderLabel="+ 20 km"
      >
        <li
          className="LocationCard LocationSelectorDialog__locationCard"
        >
          <div
            className="LocationCard__header"
          >
            <Text
              className="LocationCard__title"
              size="large"
              title="Utrecht"
            >
              <p
                className="Text--size_large LocationCard__title"
                title="Utrecht"
              >
                Utrecht
              </p>
            </Text>
            <button
              className="LocationCard__deleteButton"
              onClick={[Function]}
              type="button"
            >
              Ã—
            </button>
          </div>
        </li>
      </LocationCard>
    </ul>
    <Map
      defaultArea={
        Object {
          "address": "NL",
        }
      }
      markers={Array []}
    >
      <GoogleMap
        mapContainerStyle={
          Object {
            "height": "100%",
            "width": "100%",
          }
        }
        onLoad={[Function]}
        options={
          Object {
            "fullscreenControl": false,
            "mapTypeControl": false,
            "rotateControl": false,
            "streetViewControl": false,
          }
        }
      >
        <div
          style={
            Object {
              "height": "100%",
              "width": "100%",
            }
          }
        />
      </GoogleMap>
    </Map>
  </div>
</LocationSelectorDialog>
`;
