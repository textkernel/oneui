// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`DatePicker should render calendar header correctly when calendar is open 1`] = `
<CalendarHeader
  changeMonth={[Function]}
  changeYear={[Function]}
  customHeaderCount={0}
  date={2021-12-24T13:00:00.000Z}
  decreaseMonth={[Function]}
  decreaseYear={[Function]}
  increaseMonth={[Function]}
  increaseYear={[Function]}
  monthContainer={null}
  monthDate={2021-12-24T13:00:00.000Z}
  nextMonthButtonDisabled={false}
  nextYearButtonDisabled={false}
  prevMonthButtonDisabled={false}
  prevYearButtonDisabled={true}
  selectingDate={null}
  yearsRange={
    Array [
      2021,
      2023,
    ]
  }
>
  <div
    className="CalendarHeader"
  >
    <Button
      className="CalendarHeader__navButton"
      context="neutral"
      disabled={false}
      isBlock={false}
      isInline={false}
      isLoading={false}
      onClick={[Function]}
      size="normal"
      type="button"
    >
      <button
        className="Button Button--context_neutral CalendarHeader__navButton"
        disabled={false}
        onClick={[Function]}
        type="button"
      >
        <ImArrowLeft2>
          <IconBase
            attr={
              Object {
                "version": "1.1",
                "viewBox": "0 0 16 16",
              }
            }
          >
            <svg
              fill="currentColor"
              height="1em"
              stroke="currentColor"
              strokeWidth="0"
              style={
                Object {
                  "color": undefined,
                }
              }
              version="1.1"
              viewBox="0 0 16 16"
              width="1em"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M6.293 13.707l-5-5c-0.391-0.39-0.391-1.024 0-1.414l5-5c0.391-0.391 1.024-0.391 1.414 0s0.391 1.024 0 1.414l-3.293 3.293h9.586c0.552 0 1 0.448 1 1s-0.448 1-1 1h-9.586l3.293 3.293c0.195 0.195 0.293 0.451 0.293 0.707s-0.098 0.512-0.293 0.707c-0.391 0.391-1.024 0.391-1.414 0z"
                key="0"
              />
            </svg>
          </IconBase>
        </ImArrowLeft2>
      </button>
    </Button>
    <div
      role="presentation"
    >
      <Text
        context="default"
        inline={true}
        size="large"
      >
        <span
          className="Text--size_large"
        >
          December
        </span>
      </Text>
      <select
        className="CalendarHeader__select"
        onChange={[Function]}
        value={2021}
      >
        <option
          key="2021"
          value={2021}
        >
          2021
        </option>
        <option
          key="2022"
          value={2022}
        >
          2022
        </option>
        <option
          key="2023"
          value={2023}
        >
          2023
        </option>
      </select>
    </div>
    <Button
      className="CalendarHeader__navButton"
      context="neutral"
      disabled={false}
      isBlock={false}
      isInline={false}
      isLoading={false}
      onClick={[Function]}
      size="normal"
      type="button"
    >
      <button
        className="Button Button--context_neutral CalendarHeader__navButton"
        disabled={false}
        onClick={[Function]}
        type="button"
      >
        <ImArrowRight2>
          <IconBase
            attr={
              Object {
                "version": "1.1",
                "viewBox": "0 0 16 16",
              }
            }
          >
            <svg
              fill="currentColor"
              height="1em"
              stroke="currentColor"
              strokeWidth="0"
              style={
                Object {
                  "color": undefined,
                }
              }
              version="1.1"
              viewBox="0 0 16 16"
              width="1em"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M9.707 13.707l5-5c0.391-0.39 0.391-1.024 0-1.414l-5-5c-0.391-0.391-1.024-0.391-1.414 0s-0.391 1.024 0 1.414l3.293 3.293h-9.586c-0.552 0-1 0.448-1 1s0.448 1 1 1h9.586l-3.293 3.293c-0.195 0.195-0.293 0.451-0.293 0.707s0.098 0.512 0.293 0.707c0.391 0.391 1.024 0.391 1.414 0z"
                key="0"
              />
            </svg>
          </IconBase>
        </ImArrowRight2>
      </button>
    </Button>
  </div>
</CalendarHeader>
`;

exports[`DatePicker should render correctly 1`] = `
<DatePicker
  maxDate={2023-03-04T00:00:00.000Z}
  minDate={2021-11-23T00:00:00.000Z}
  onChange={[MockFunction]}
>
  <r
    allowSameDay={false}
    autoComplete="off"
    customTimeInput={null}
    dateFormat="MM/dd/yyyy"
    dateFormatCalendar="LLLL yyyy"
    disabled={false}
    disabledKeyboardNavigation={false}
    dropdownMode="scroll"
    enableTabLoop={true}
    excludeScrollbar={true}
    focusSelectedMonth={false}
    maxDate={2023-03-04T00:00:00.000Z}
    minDate={2021-11-23T00:00:00.000Z}
    monthsShown={1}
    nextMonthAriaLabel="Next Month"
    nextMonthButtonLabel="Next Month"
    nextYearAriaLabel="Next Year"
    nextYearButtonLabel="Next Year"
    onBlur={[Function]}
    onCalendarClose={[Function]}
    onCalendarOpen={[Function]}
    onChange={[MockFunction]}
    onClickOutside={[Function]}
    onFocus={[Function]}
    onInputClick={[Function]}
    onInputError={[Function]}
    onKeyDown={[Function]}
    onMonthChange={[Function]}
    onSelect={[Function]}
    onYearChange={[Function]}
    preventOpenOnFocus={false}
    previousMonthAriaLabel="Previous Month"
    previousMonthButtonLabel="Previous Month"
    previousYearAriaLabel="Previous Year"
    previousYearButtonLabel="Previous Year"
    readOnly={false}
    renderCustomHeader={[Function]}
    renderDayContents={[Function]}
    selectsDisabledDaysInRange={false}
    shouldCloseOnSelect={true}
    showFourColumnMonthYearPicker={false}
    showFullMonthYearPicker={false}
    showMonthYearPicker={false}
    showPopperArrow={false}
    showPreviousMonths={false}
    showQuarterYearPicker={false}
    showTimeInput={false}
    showTimeSelect={false}
    showTwoColumnMonthYearPicker={false}
    showYearPicker={false}
    strictParsing={false}
    timeCaption="Time"
    timeInputLabel="Time"
    timeIntervals={30}
    withPortal={false}
    yearItemNumber={12}
  >
    <r
      enableTabLoop={true}
      hidePopper={true}
      popperComponent={null}
      popperModifiers={Array []}
      popperOnKeyDown={[Function]}
      popperPlacement="bottom-start"
      popperProps={Object {}}
      targetComponent={
        <div
          className="react-datepicker__input-container"
        >
          <input
            autoComplete="off"
            className=""
            disabled={false}
            onBlur={[Function]}
            onChange={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onKeyDown={[Function]}
            readOnly={false}
            type="text"
            value=""
          />
        </div>
      }
    >
      <Manager
        className="react-datepicker-manager"
      >
        <Reference>
          <div
            className="react-datepicker-wrapper"
          >
            <div
              className="react-datepicker__input-container"
            >
              <input
                autoComplete="off"
                className=""
                disabled={false}
                onBlur={[Function]}
                onChange={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                readOnly={false}
                type="text"
                value=""
              />
            </div>
          </div>
        </Reference>
      </Manager>
    </r>
  </r>
</DatePicker>
`;
