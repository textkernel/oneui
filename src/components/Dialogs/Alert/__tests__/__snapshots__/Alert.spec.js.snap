// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Alert should render correctly 1`] = `
<Alert
  acceptButton={
    Object {
      "label": "OK",
      "onClick": [MockFunction],
    }
  }
  ariaHideApp={false}
  isOpen={true}
>
  <Dialog
    acceptButton={
      Object {
        "label": "OK",
        "onClick": [MockFunction],
      }
    }
    ariaHideApp={false}
    isOpen={true}
  >
    <Modal
      ariaHideApp={false}
      className="Dialog"
      isOpen={true}
      isPositionFixed={false}
    >
      <Modal
        ariaHideApp={false}
        bodyOpenClassName="Modal__body"
        className={
          Object {
            "afterOpen": "Modal__content--entered",
            "base": "Modal__content Dialog",
            "beforeClose": "Modal__content--exited",
          }
        }
        closeTimeoutMS={300}
        contentElement={[Function]}
        isOpen={true}
        isPositionFixed={false}
        onAfterOpen={[Function]}
        overlayClassName={
          Object {
            "afterOpen": "Modal__overlay--entered",
            "base": "Modal__overlay",
            "beforeClose": "Modal__overlay--exited",
          }
        }
        overlayElement={[Function]}
        overlayRef={[Function]}
        parentSelector={[Function]}
        portalClassName="ReactModalPortal"
        preventScroll={false}
        role="dialog"
        shouldCloseOnEsc={true}
        shouldCloseOnOverlayClick={true}
        shouldFocusAfterRender={true}
        shouldReturnFocusAfterClose={true}
      >
        <Portal
          containerInfo={
            <div
              class="ReactModalPortal"
            >
              <div
                class="Modal__overlay"
              >
                <div
                  aria-modal="true"
                  class="Modal__content Dialog"
                  role="dialog"
                  tabindex="-1"
                >
                  <div
                    class="Dialog__content"
                    role="alert"
                  >
                    Body of the alert
                  </div>
                  <div
                    class="Dialog__actions"
                  >
                    <button
                      class="Button Button--context_brand"
                      type="button"
                    >
                      OK
                    </button>
                  </div>
                </div>
              </div>
            </div>
          }
        >
          <ModalPortal
            ariaHideApp={false}
            bodyOpenClassName="Modal__body"
            className={
              Object {
                "afterOpen": "Modal__content--entered",
                "base": "Modal__content Dialog",
                "beforeClose": "Modal__content--exited",
              }
            }
            closeTimeoutMS={300}
            contentElement={[Function]}
            defaultStyles={
              Object {
                "content": Object {
                  "WebkitOverflowScrolling": "touch",
                  "background": "#fff",
                  "border": "1px solid #ccc",
                  "borderRadius": "4px",
                  "bottom": "40px",
                  "left": "40px",
                  "outline": "none",
                  "overflow": "auto",
                  "padding": "20px",
                  "position": "absolute",
                  "right": "40px",
                  "top": "40px",
                },
                "overlay": Object {
                  "backgroundColor": "rgba(255, 255, 255, 0.75)",
                  "bottom": 0,
                  "left": 0,
                  "position": "fixed",
                  "right": 0,
                  "top": 0,
                },
              }
            }
            isOpen={true}
            isPositionFixed={false}
            onAfterOpen={[Function]}
            overlayClassName={
              Object {
                "afterOpen": "Modal__overlay--entered",
                "base": "Modal__overlay",
                "beforeClose": "Modal__overlay--exited",
              }
            }
            overlayElement={[Function]}
            overlayRef={[Function]}
            parentSelector={[Function]}
            portalClassName="ReactModalPortal"
            preventScroll={false}
            role="dialog"
            shouldCloseOnEsc={true}
            shouldCloseOnOverlayClick={true}
            shouldFocusAfterRender={true}
            shouldReturnFocusAfterClose={true}
            style={
              Object {
                "content": Object {},
                "overlay": Object {},
              }
            }
          >
            <div
              className="Modal__overlay"
              onClick={[Function]}
              onMouseDown={[Function]}
              style={Object {}}
            >
              <div
                aria-modal={true}
                className="Modal__content Dialog"
                onClick={[Function]}
                onKeyDown={[Function]}
                onMouseDown={[Function]}
                onMouseUp={[Function]}
                role="dialog"
                style={Object {}}
                tabIndex="-1"
              >
                <div
                  className="Dialog__content"
                  role="alert"
                >
                  Body of the alert
                </div>
                <div
                  className="Dialog__actions"
                >
                  <Button
                    context="brand"
                    disabled={false}
                    isBlock={false}
                    isInline={false}
                    onClick={[MockFunction]}
                    size="normal"
                    type="button"
                  >
                    <button
                      className="Button Button--context_brand"
                      disabled={false}
                      onClick={[MockFunction]}
                      type="button"
                    >
                      OK
                    </button>
                  </Button>
                </div>
              </div>
            </div>
          </ModalPortal>
        </Portal>
      </Modal>
    </Modal>
  </Dialog>
</Alert>
`;

exports[`Alert should render correctly with title 1`] = `
<Alert
  acceptButton={
    Object {
      "label": "OK",
      "onClick": [MockFunction],
    }
  }
  ariaHideApp={false}
  isOpen={true}
  title="Title"
>
  <Dialog
    acceptButton={
      Object {
        "label": "OK",
        "onClick": [MockFunction],
      }
    }
    ariaHideApp={false}
    isOpen={true}
    title="Title"
  >
    <Modal
      ariaHideApp={false}
      className="Dialog"
      isOpen={true}
      isPositionFixed={false}
    >
      <Modal
        ariaHideApp={false}
        bodyOpenClassName="Modal__body"
        className={
          Object {
            "afterOpen": "Modal__content--entered",
            "base": "Modal__content Dialog",
            "beforeClose": "Modal__content--exited",
          }
        }
        closeTimeoutMS={300}
        contentElement={[Function]}
        isOpen={true}
        isPositionFixed={false}
        onAfterOpen={[Function]}
        overlayClassName={
          Object {
            "afterOpen": "Modal__overlay--entered",
            "base": "Modal__overlay",
            "beforeClose": "Modal__overlay--exited",
          }
        }
        overlayElement={[Function]}
        overlayRef={[Function]}
        parentSelector={[Function]}
        portalClassName="ReactModalPortal"
        preventScroll={false}
        role="dialog"
        shouldCloseOnEsc={true}
        shouldCloseOnOverlayClick={true}
        shouldFocusAfterRender={true}
        shouldReturnFocusAfterClose={true}
      >
        <Portal
          containerInfo={
            <div
              class="ReactModalPortal"
            >
              <div
                class="Modal__overlay"
              >
                <div
                  aria-modal="true"
                  class="Modal__content Dialog"
                  role="dialog"
                  tabindex="-1"
                >
                  <div
                    class="Dialog__content"
                    role="alert"
                  >
                    <h2
                      class="Heading Heading--level_h2 Dialog__title"
                    >
                      Title
                    </h2>
                    Body of the alert
                  </div>
                  <div
                    class="Dialog__actions"
                  >
                    <button
                      class="Button Button--context_brand"
                      type="button"
                    >
                      OK
                    </button>
                  </div>
                </div>
              </div>
            </div>
          }
        >
          <ModalPortal
            ariaHideApp={false}
            bodyOpenClassName="Modal__body"
            className={
              Object {
                "afterOpen": "Modal__content--entered",
                "base": "Modal__content Dialog",
                "beforeClose": "Modal__content--exited",
              }
            }
            closeTimeoutMS={300}
            contentElement={[Function]}
            defaultStyles={
              Object {
                "content": Object {
                  "WebkitOverflowScrolling": "touch",
                  "background": "#fff",
                  "border": "1px solid #ccc",
                  "borderRadius": "4px",
                  "bottom": "40px",
                  "left": "40px",
                  "outline": "none",
                  "overflow": "auto",
                  "padding": "20px",
                  "position": "absolute",
                  "right": "40px",
                  "top": "40px",
                },
                "overlay": Object {
                  "backgroundColor": "rgba(255, 255, 255, 0.75)",
                  "bottom": 0,
                  "left": 0,
                  "position": "fixed",
                  "right": 0,
                  "top": 0,
                },
              }
            }
            isOpen={true}
            isPositionFixed={false}
            onAfterOpen={[Function]}
            overlayClassName={
              Object {
                "afterOpen": "Modal__overlay--entered",
                "base": "Modal__overlay",
                "beforeClose": "Modal__overlay--exited",
              }
            }
            overlayElement={[Function]}
            overlayRef={[Function]}
            parentSelector={[Function]}
            portalClassName="ReactModalPortal"
            preventScroll={false}
            role="dialog"
            shouldCloseOnEsc={true}
            shouldCloseOnOverlayClick={true}
            shouldFocusAfterRender={true}
            shouldReturnFocusAfterClose={true}
            style={
              Object {
                "content": Object {},
                "overlay": Object {},
              }
            }
          >
            <div
              className="Modal__overlay"
              onClick={[Function]}
              onMouseDown={[Function]}
              style={Object {}}
            >
              <div
                aria-modal={true}
                className="Modal__content Dialog"
                onClick={[Function]}
                onKeyDown={[Function]}
                onMouseDown={[Function]}
                onMouseUp={[Function]}
                role="dialog"
                style={Object {}}
                tabIndex="-1"
              >
                <div
                  className="Dialog__content"
                  role="alert"
                >
                  <Heading
                    align="left"
                    className="Dialog__title"
                    context="default"
                    level="h2"
                  >
                    <h2
                      className="Heading Heading--level_h2 Dialog__title"
                    >
                      Title
                    </h2>
                  </Heading>
                  Body of the alert
                </div>
                <div
                  className="Dialog__actions"
                >
                  <Button
                    context="brand"
                    disabled={false}
                    isBlock={false}
                    isInline={false}
                    onClick={[MockFunction]}
                    size="normal"
                    type="button"
                  >
                    <button
                      className="Button Button--context_brand"
                      disabled={false}
                      onClick={[MockFunction]}
                      type="button"
                    >
                      OK
                    </button>
                  </Button>
                </div>
              </div>
            </div>
          </ModalPortal>
        </Portal>
      </Modal>
    </Modal>
  </Dialog>
</Alert>
`;
