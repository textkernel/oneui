@use "sass:map";
$contexts: (primary, secondary, critical);
$variants: (filled, outlined, ghost);

$contextMap: (
    'secondary': 'neutral',
    'primary': 'brand',
    'critical': 'critical'
);

@keyframes buttonLoading {
    0% {
        background-position: 100% 0;
    }
    100% {
        background-position: -100% 0;
    }
}
.Button {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    border-radius: var(--space-75);
    border: none;
    height: var(--space-400);
    box-sizing: border-box;
    cursor: pointer;
    font: {
        size: var(--font-size-small);
        weight: var(--font-weight-bold);
        family: var(--font-family-primary);
    }
    text-decoration: none;
    line-height: var(--line-height-small);
    margin: 0;
    outline: none;
    padding: var(--space-0) var(--space-150);
    text-align: center;
    transition: all var(--transition-duration);
    white-space: nowrap;
    flex-wrap: nowrap;

    // Default variant (filled) and context (primary)
    background-color: var(--color-background-brand-bold-default);
    color: var(--color-background);

    &:hover {
        background-color: var(--color-background-brand-bold-hover);
    }
    &:active {
        background-color: var(--color-background-critical-bold-pressed);
    }
    &:focus {
        box-shadow: 0px 0px 0px 2px var(--color-background-information-subtlest-pressed);
    }
    
    &[disabled] {
        cursor: not-allowed;
        background-color: var(--color-background-brand-bold-disabled);
        color: var(--color-background);
    }

    &--isBlock {
        width: 100%;
    }

    &--size {
        &_small {
            border-radius: var(--space-50);
            height: var(--space-300);
            padding: var(--space-0) var(--space-100);
        }
        &_large {
            border-radius: var(--space-100);
            height: var(--space-500);
            padding: var(--space-0) var(--space-200);
        }
    }
}

@each $context in $contexts {
    @each $variant in $variants {
        $mappedContext: map.get($contextMap, $context);
        .Button--context_#{$context}.Button--variant_#{$variant} {
            @if $variant == filled {
                @if $mappedContext == neutral {
                    background-color: var(--color-background-neutral-subtle-default);
                    color: var(--color-text-bold);

                    &:hover {
                        background-color: var(--color-background-neutral-subtle-hover);
                    }
                    &:active {
                        background-color: var(--color-background-neutral-subtle-pressed);
                    }
                    &[disabled]{
                        background-color: var(--color-background-neutral-subtle-disabled);
                        color: var(--color-text-subtlest);
                    }
                } @else {
                    background-color: var(--color-background-#{$mappedContext}-bold-default);
                    color: var(--color-background);

                    &:hover {
                        background-color: var(--color-background-#{$mappedContext}-bold-hover);
                    }
                    &:active {
                        background-color: var(--color-background-#{$mappedContext}-bold-pressed);
                    }
                    &[disabled] {
                        background-color: var(--color-background-#{$mappedContext}-bold-disabled);
                    }
                }
            } @else if $variant == outlined {
                @if $mappedContext == neutral {
                    color: var(--color-text-subtle);
                    background-color: transparent;
                    border-width: var(--line-normal);
                    border-style: solid;
                    border-color: var(--color-border-bold);
    
                  
                    &[disabled]{
                        color: var(--color-text-disabled);
                        &:hover,
                        &:active {
                            background-color: var(--transparent);
                        }
                        border-color: var(--color-border-disabled);
                    }

                    
                } @else {
                    color: var(--color-text-#{$mappedContext}-default);
                    background-color: transparent;
                    border-width: var(--line-normal);
                    border-style: solid;
                    border-color: var(--color-border-#{$mappedContext}-bold-default);
                    
                    &[disabled]{
                        color: var(--color-text-#{$mappedContext}-default);
                        &:hover,
                        &:active {
                            background-color: var(--transparent);
                        }
                        border-color: var(--color-border-#{$mappedContext}-subtle-brand);
                    }

                }
                &:hover {
                    background-color: var(--color-background-#{$mappedContext}-subtlest-hover);
                }
                &:active {
                    background-color: var(--color-background-#{$mappedContext}-subtlest-pressed);
                }
            } @else if $variant == ghost {
                color: var(--color-text-#{$mappedContext}-default);
                background-color: var(--transparent);
                &:hover {
                    background-color: var(--color-background-#{$mappedContext}-subtlest-hover);
                }
                &:active {
                    background-color: var(--color-background-#{$mappedContext}-subtlest-pressed);
                }
                &[disabled] {
                    color: var(--color-text-#{$mappedContext}-disabled);
                    &:hover,
                    &:active {
                        background-color: var(--transparent);
                    }
                }
            }
        }
    }
}