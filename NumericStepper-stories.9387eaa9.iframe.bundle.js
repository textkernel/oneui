"use strict";(self.webpackChunk_textkernel_oneui=self.webpackChunk_textkernel_oneui||[]).push([[8559],{"./stories/molecules/NumericStepper.stories.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{_NumericStepper:function(){return _NumericStepper},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return NumericStepper_stories}});var react=__webpack_require__("./node_modules/react/index.js"),bem=__webpack_require__("./src/utils/bem/bem.js"),StepperButton=__webpack_require__("./src/components/Buttons/StepperButton/StepperButton.tsx"),__assign=function(){return __assign=Object.assign||function(t){for(var s,i=1,n=arguments.length;i<n;i++)for(var p in s=arguments[i])Object.prototype.hasOwnProperty.call(s,p)&&(t[p]=s[p]);return t},__assign.apply(this,arguments)},__rest=function(s,e){var t={};for(var p in s)Object.prototype.hasOwnProperty.call(s,p)&&e.indexOf(p)<0&&(t[p]=s[p]);if(null!=s&&"function"==typeof Object.getOwnPropertySymbols){var i=0;for(p=Object.getOwnPropertySymbols(s);i<p.length;i++)e.indexOf(p[i])<0&&Object.prototype.propertyIsEnumerable.call(s,p[i])&&(t[p[i]]=s[p[i]])}return t},_a=(0,bem.T)("NumericStepper",{NumericStepper:"NumericStepper--ytoHsudiiA",NumericStepper__stepperInput:"NumericStepper__stepperInput--NbxJK5XvA9"}),block=_a.block,elem=_a.elem,NumericStepper_NumericStepper=function NumericStepper(_a){var onChange=_a.onChange,_b=_a.step,step=void 0===_b?1:_b,_c=_a.minValue,minValue=void 0===_c?0:_c,_d=_a.maxValue,maxValue=void 0===_d?Number.MAX_SAFE_INTEGER:_d,_e=_a.defaultValue,defaultValue=void 0===_e?0:_e,_f=_a.customWidth,customWidth=void 0===_f?"3ch":_f,_g=_a.className,className=void 0===_g?void 0:_g,rest=__rest(_a,["onChange","step","minValue","maxValue","defaultValue","customWidth","className"]),_h=react.useState(defaultValue||minValue),currentValue=_h[0],setCurrentValue=_h[1],_j=react.useState(currentValue.toString()),inputValue=_j[0],setInputValue=_j[1];react.useEffect((function(){setCurrentValue(defaultValue||0),setInputValue((defaultValue||0).toString())}),[defaultValue]),react.useEffect((function(){currentValue>maxValue&&(setCurrentValue(maxValue),setInputValue(maxValue.toString()))}),[maxValue,currentValue]),react.useEffect((function(){currentValue<minValue&&(setCurrentValue(minValue),setInputValue(minValue.toString()))}),[minValue,currentValue]);var onValueUpdate=function onValueUpdate(value){setInputValue(value.toString()),setCurrentValue(value),onChange(value)};return react.createElement("div",__assign({},rest,block(className)),react.createElement(StepperButton.E,{icon:"minus",onClick:function handleStepDown(){var newValue=currentValue-step;onValueUpdate(newValue<minValue?minValue:newValue)},disabled:currentValue===minValue}),react.createElement("input",__assign({},elem("stepperInput"),{style:{width:customWidth},onChange:function handleInputChange(event){var value=event.target.value;setInputValue(value)},onBlur:function handleInputBlur(){var parsedInputValue=parseInt(inputValue,10);parsedInputValue!==currentValue&&(Number.isNaN(parsedInputValue)&&onValueUpdate(currentValue),parsedInputValue>=minValue&&parsedInputValue<=maxValue?onValueUpdate(parsedInputValue):parsedInputValue<minValue?onValueUpdate(minValue):parsedInputValue>maxValue&&onValueUpdate(maxValue))},value:inputValue,type:"number",step:step,min:minValue,max:maxValue})),react.createElement(StepperButton.E,{icon:"plus",onClick:function handleStepUp(){var newValue=currentValue+step;onValueUpdate(newValue>maxValue?maxValue:newValue)},disabled:currentValue===maxValue}))};NumericStepper_NumericStepper.displayName="NumericStepper";try{NumericStepper_NumericStepper.displayName="NumericStepper",NumericStepper_NumericStepper.__docgenInfo={description:"This component is used as a replacement for the traditional input component with step attribute\n(also knows as Input Stepper), but with custom up and down buttons.",displayName:"NumericStepper",props:{onChange:{defaultValue:null,description:"Callback is called when user changes component value by using built-in controls",name:"onChange",required:!0,type:{name:"(value: number) => void"}},step:{defaultValue:{value:"1"},description:"Increase/decrease step value",name:"step",required:!1,type:{name:"number"}},minValue:{defaultValue:{value:"0"},description:"Minimum possible value of NumericStepper",name:"minValue",required:!1,type:{name:"number"}},maxValue:{defaultValue:{value:"Number.MAX_SAFE_INTEGER"},description:"Maximum possible value of NumericStepper",name:"maxValue",required:!1,type:{name:"number"}},defaultValue:{defaultValue:{value:"0"},description:"The value stepping starts from, if updated will also reset the current value",name:"defaultValue",required:!1,type:{name:"number"}},customWidth:{defaultValue:{value:"3ch"},description:"De-facto CSS property that sets custom width for input",name:"customWidth",required:!1,type:{name:"string"}},className:{defaultValue:{value:"undefined"},description:"class to be applied to the component",name:"className",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/NumericStepper/NumericStepper.tsx#NumericStepper"]={docgenInfo:NumericStepper_NumericStepper.__docgenInfo,name:"NumericStepper",path:"src/components/NumericStepper/NumericStepper.tsx#NumericStepper"})}catch(__react_docgen_typescript_loader_error){}var NumericStepper_stories_assign=function(){return NumericStepper_stories_assign=Object.assign||function(t){for(var s,i=1,n=arguments.length;i<n;i++)for(var p in s=arguments[i])Object.prototype.hasOwnProperty.call(s,p)&&(t[p]=s[p]);return t},NumericStepper_stories_assign.apply(this,arguments)},NumericStepper_stories={title:"Molecules/NumericStepper",component:NumericStepper_NumericStepper},_NumericStepper={name:"NumericStepper",args:{step:10,minValue:0,maxValue:100,defaultValue:50,customWidth:"3ch"},render:function render(args){return react.createElement(NumericStepper_NumericStepper,NumericStepper_stories_assign({},args))}};_NumericStepper.parameters={..._NumericStepper.parameters,docs:{..._NumericStepper.parameters?.docs,source:{originalSource:"{\n  name: 'NumericStepper',\n  args: {\n    step: 10,\n    minValue: 0,\n    maxValue: 100,\n    defaultValue: 50,\n    customWidth: '3ch'\n  },\n  render: args => <NumericStepper {...args} />\n}",..._NumericStepper.parameters?.docs?.source}}};const __namedExportsOrder=["_NumericStepper"]}}]);