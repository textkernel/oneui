"use strict";(self.webpackChunk_textkernel_oneui=self.webpackChunk_textkernel_oneui||[]).push([[1751],{"./node_modules/@googlemaps/js-api-loader/dist/index.mjs":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){function __awaiter(thisArg,_arguments,P,generator){return new(P||(P=Promise))((function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator.throw(value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):function adopt(value){return value instanceof P?value:new P((function(resolve){resolve(value)}))}(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())}))}function getDefaultExportFromCjs(x){return x&&x.__esModule&&Object.prototype.hasOwnProperty.call(x,"default")?x.default:x}__webpack_require__.d(__webpack_exports__,{aH:function(){return Loader}}),"function"==typeof SuppressedError&&SuppressedError;var isEqual=getDefaultExportFromCjs((function equal(a,b){if(a===b)return!0;if(a&&b&&"object"==typeof a&&"object"==typeof b){if(a.constructor!==b.constructor)return!1;var length,i,keys;if(Array.isArray(a)){if((length=a.length)!=b.length)return!1;for(i=length;0!=i--;)if(!equal(a[i],b[i]))return!1;return!0}if(a.constructor===RegExp)return a.source===b.source&&a.flags===b.flags;if(a.valueOf!==Object.prototype.valueOf)return a.valueOf()===b.valueOf();if(a.toString!==Object.prototype.toString)return a.toString()===b.toString();if((length=(keys=Object.keys(a)).length)!==Object.keys(b).length)return!1;for(i=length;0!=i--;)if(!Object.prototype.hasOwnProperty.call(b,keys[i]))return!1;for(i=length;0!=i--;){var key=keys[i];if(!equal(a[key],b[key]))return!1}return!0}return a!=a&&b!=b}));var LoaderStatus;!function(LoaderStatus){LoaderStatus[LoaderStatus.INITIALIZED=0]="INITIALIZED",LoaderStatus[LoaderStatus.LOADING=1]="LOADING",LoaderStatus[LoaderStatus.SUCCESS=2]="SUCCESS",LoaderStatus[LoaderStatus.FAILURE=3]="FAILURE"}(LoaderStatus||(LoaderStatus={}));class Loader{constructor({apiKey:apiKey,authReferrerPolicy:authReferrerPolicy,channel:channel,client:client,id:id="__googleMapsScriptId",language:language,libraries:libraries=[],mapIds:mapIds,nonce:nonce,region:region,retries:retries=3,url:url="https://maps.googleapis.com/maps/api/js",version:version}){if(this.callbacks=[],this.done=!1,this.loading=!1,this.errors=[],this.apiKey=apiKey,this.authReferrerPolicy=authReferrerPolicy,this.channel=channel,this.client=client,this.id=id||"__googleMapsScriptId",this.language=language,this.libraries=libraries,this.mapIds=mapIds,this.nonce=nonce,this.region=region,this.retries=retries,this.url=url,this.version=version,Loader.instance){if(!isEqual(this.options,Loader.instance.options))throw new Error(`Loader must not be called again with different options. ${JSON.stringify(this.options)} !== ${JSON.stringify(Loader.instance.options)}`);return Loader.instance}Loader.instance=this}get options(){return{version:this.version,apiKey:this.apiKey,channel:this.channel,client:this.client,id:this.id,libraries:this.libraries,language:this.language,region:this.region,mapIds:this.mapIds,nonce:this.nonce,url:this.url,authReferrerPolicy:this.authReferrerPolicy}}get status(){return this.errors.length?LoaderStatus.FAILURE:this.done?LoaderStatus.SUCCESS:this.loading?LoaderStatus.LOADING:LoaderStatus.INITIALIZED}get failed(){return this.done&&!this.loading&&this.errors.length>=this.retries+1}createUrl(){let url=this.url;return url+="?callback=__googleMapsCallback&loading=async",this.apiKey&&(url+=`&key=${this.apiKey}`),this.channel&&(url+=`&channel=${this.channel}`),this.client&&(url+=`&client=${this.client}`),this.libraries.length>0&&(url+=`&libraries=${this.libraries.join(",")}`),this.language&&(url+=`&language=${this.language}`),this.region&&(url+=`&region=${this.region}`),this.version&&(url+=`&v=${this.version}`),this.mapIds&&(url+=`&map_ids=${this.mapIds.join(",")}`),this.authReferrerPolicy&&(url+=`&auth_referrer_policy=${this.authReferrerPolicy}`),url}deleteScript(){const script=document.getElementById(this.id);script&&script.remove()}load(){return this.loadPromise()}loadPromise(){return new Promise(((resolve,reject)=>{this.loadCallback((err=>{err?reject(err.error):resolve(window.google)}))}))}importLibrary(name){return this.execute(),google.maps.importLibrary(name)}loadCallback(fn){this.callbacks.push(fn),this.execute()}setScript(){var _a,_b;if(document.getElementById(this.id))return void this.callback();const params={key:this.apiKey,channel:this.channel,client:this.client,libraries:this.libraries.length&&this.libraries,v:this.version,mapIds:this.mapIds,language:this.language,region:this.region,authReferrerPolicy:this.authReferrerPolicy};Object.keys(params).forEach((key=>!params[key]&&delete params[key])),(null===(_b=null===(_a=null===window||void 0===window?void 0:window.google)||void 0===_a?void 0:_a.maps)||void 0===_b?void 0:_b.importLibrary)||(g=>{let h,a,k,p="The Google Maps JavaScript API",c="google",l="importLibrary",q="__ib__",m=document,b=window;b=b[c]||(b[c]={});const d=b.maps||(b.maps={}),r=new Set,e=new URLSearchParams,u=()=>h||(h=new Promise(((f,n)=>__awaiter(this,void 0,void 0,(function*(){var _a;for(k in yield a=m.createElement("script"),a.id=this.id,e.set("libraries",[...r]+""),g)e.set(k.replace(/[A-Z]/g,(t=>"_"+t[0].toLowerCase())),g[k]);e.set("callback",c+".maps."+q),a.src=this.url+"?"+e,d[q]=f,a.onerror=()=>h=n(Error(p+" could not load.")),a.nonce=this.nonce||(null===(_a=m.querySelector("script[nonce]"))||void 0===_a?void 0:_a.nonce)||"",m.head.append(a)})))));d[l]?console.warn(p+" only loads once. Ignoring:",g):d[l]=(f,...n)=>r.add(f)&&u().then((()=>d[l](f,...n)))})(params);const libraryPromises=this.libraries.map((library=>this.importLibrary(library)));libraryPromises.length||libraryPromises.push(this.importLibrary("core")),Promise.all(libraryPromises).then((()=>this.callback()),(error=>{const event=new ErrorEvent("error",{error:error});this.loadErrorCallback(event)}))}reset(){this.deleteScript(),this.done=!1,this.loading=!1,this.errors=[],this.onerrorEvent=null}resetIfRetryingFailed(){this.failed&&this.reset()}loadErrorCallback(e){if(this.errors.push(e),this.errors.length<=this.retries){const delay=this.errors.length*Math.pow(2,this.errors.length);console.error(`Failed to load Google Maps script, retrying in ${delay} ms.`),setTimeout((()=>{this.deleteScript(),this.setScript()}),delay)}else this.onerrorEvent=e,this.callback()}callback(){this.done=!0,this.loading=!1,this.callbacks.forEach((cb=>{cb(this.onerrorEvent)})),this.callbacks=[]}execute(){if(this.resetIfRetryingFailed(),!this.loading)if(this.done)this.callback();else{if(window.google&&window.google.maps&&window.google.maps.version)return console.warn("Google Maps already loaded outside @googlemaps/js-api-loader. This may result in undesirable behavior as options and script parameters may not match."),void this.callback();this.loading=!0,this.setScript()}}}},"./node_modules/tslib/tslib.es6.mjs":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{Cl:function(){return __assign},Tt:function(){return __rest},fX:function(){return __spreadArray}});var __assign=function(){return __assign=Object.assign||function __assign(t){for(var s,i=1,n=arguments.length;i<n;i++)for(var p in s=arguments[i])Object.prototype.hasOwnProperty.call(s,p)&&(t[p]=s[p]);return t},__assign.apply(this,arguments)};function __rest(s,e){var t={};for(var p in s)Object.prototype.hasOwnProperty.call(s,p)&&e.indexOf(p)<0&&(t[p]=s[p]);if(null!=s&&"function"==typeof Object.getOwnPropertySymbols){var i=0;for(p=Object.getOwnPropertySymbols(s);i<p.length;i++)e.indexOf(p[i])<0&&Object.prototype.propertyIsEnumerable.call(s,p[i])&&(t[p[i]]=s[p[i]])}return t}Object.create;function __spreadArray(to,from,pack){if(pack||2===arguments.length)for(var ar,i=0,l=from.length;i<l;i++)!ar&&i in from||(ar||(ar=Array.prototype.slice.call(from,0,i)),ar[i]=from[i]);return to.concat(ar||Array.prototype.slice.call(from))}Object.create;"function"==typeof SuppressedError&&SuppressedError}}]);